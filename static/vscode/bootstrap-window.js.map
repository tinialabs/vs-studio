{"version":3,"sources":["out-vscode/bootstrap-window.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/// <reference path=\"typings/require.d.ts\" />\n\n//@ts-check\n'use strict';\n\n// Simple module style to support node.js and browser environments\n(function (globalThis, factory) {\n\n\t// Node.js\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t}\n\n\t// Browser\n\telse {\n\t\tglobalThis.MonacoBootstrapWindow = factory();\n\t}\n}(this, function () {\n\tconst bootstrapLib = bootstrap();\n\tconst preloadGlobals = sandboxGlobals();\n\tconst safeProcess = preloadGlobals.process;\n\tconst useCustomProtocol = safeProcess.sandboxed || typeof safeProcess.env['VSCODE_BROWSER_CODE_LOADING'] === 'string';\n\n\t/**\n\t * @typedef {import('./vs/base/parts/sandbox/common/sandboxTypes').ISandboxConfiguration} ISandboxConfiguration\n\t *\n\t * @param {string[]} modulePaths\n\t * @param {(result: unknown, configuration: ISandboxConfiguration) => Promise<unknown> | undefined} resultCallback\n\t * @param {{\n\t *  configureDeveloperSettings?: (config: ISandboxConfiguration) => {\n\t * \t\tforceDisableShowDevtoolsOnError?: boolean,\n\t * \t\tforceEnableDeveloperKeybindings?: boolean,\n\t * \t\tdisallowReloadKeybinding?: boolean,\n\t * \t\tremoveDeveloperKeybindingsAfterLoad?: boolean\n\t * \t},\n\t * \tcanModifyDOM?: (config: ISandboxConfiguration) => void,\n\t * \tbeforeLoaderConfig?: (loaderConfig: object) => void,\n\t *  beforeRequire?: () => void\n\t * }} [options]\n\t */\n\tasync function load(modulePaths, resultCallback, options) {\n\n\t\t// Error handler (TODO@sandbox non-sandboxed only)\n\t\tlet showDevtoolsOnError = !!safeProcess.env['VSCODE_DEV'];\n\t\tsafeProcess.on('uncaughtException', function (/** @type {string | Error} */ error) {\n\t\t\tonUnexpectedError(error, showDevtoolsOnError);\n\t\t});\n\n\t\t// Await window configuration from preload\n\t\tperformance.mark('code/willWaitForWindowConfig');\n\t\t/** @type {ISandboxConfiguration} */\n\t\tconst configuration = await preloadGlobals.context.resolveConfiguration();\n\t\tperformance.mark('code/didWaitForWindowConfig');\n\n\t\t// Developer settings\n\t\tconst {\n\t\t\tforceDisableShowDevtoolsOnError,\n\t\t\tforceEnableDeveloperKeybindings,\n\t\t\tdisallowReloadKeybinding,\n\t\t\tremoveDeveloperKeybindingsAfterLoad\n\t\t} = typeof options?.configureDeveloperSettings === 'function' ? options.configureDeveloperSettings(configuration) : {\n\t\t\tforceDisableShowDevtoolsOnError: false,\n\t\t\tforceEnableDeveloperKeybindings: false,\n\t\t\tdisallowReloadKeybinding: false,\n\t\t\tremoveDeveloperKeybindingsAfterLoad: false\n\t\t};\n\t\tshowDevtoolsOnError = safeProcess.env['VSCODE_DEV'] && !forceDisableShowDevtoolsOnError;\n\t\tconst enableDeveloperKeybindings = safeProcess.env['VSCODE_DEV'] || forceEnableDeveloperKeybindings;\n\t\tlet developerDeveloperKeybindingsDisposable;\n\t\tif (enableDeveloperKeybindings) {\n\t\t\tdeveloperDeveloperKeybindingsDisposable = registerDeveloperKeybindings(disallowReloadKeybinding);\n\t\t}\n\n\t\t// Enable ASAR support\n\t\tglobalThis.MonacoBootstrap.enableASARSupport(configuration.appRoot);\n\n\t\t// Signal DOM modifications are now OK\n\t\tif (typeof options?.canModifyDOM === 'function') {\n\t\t\toptions.canModifyDOM(configuration);\n\t\t}\n\n\t\t// Get the nls configuration into the process.env as early as possible\n\t\tconst nlsConfig = globalThis.MonacoBootstrap.setupNLS();\n\n\t\tlet locale = nlsConfig.availableLanguages['*'] || 'en';\n\t\tif (locale === 'zh-tw') {\n\t\t\tlocale = 'zh-Hant';\n\t\t} else if (locale === 'zh-cn') {\n\t\t\tlocale = 'zh-Hans';\n\t\t}\n\n\t\twindow.document.documentElement.setAttribute('lang', locale);\n\n\t\t// Do not advertise AMD to avoid confusing UMD modules loaded with nodejs\n\t\tif (!useCustomProtocol) {\n\t\t\twindow['define'] = undefined;\n\t\t}\n\n\t\t// Replace the patched electron fs with the original node fs for all AMD code (TODO@sandbox non-sandboxed only)\n\t\tif (!safeProcess.sandboxed) {\n\t\t\trequire.define('fs', [], function () { return require.__$__nodeRequire('original-fs'); });\n\t\t}\n\n\t\twindow['MonacoEnvironment'] = {};\n\n\t\tconst loaderConfig = {\n\t\t\tbaseUrl: useCustomProtocol ?\n\t\t\t\t`${bootstrapLib.fileUriFromPath(configuration.appRoot, { isWindows: safeProcess.platform === 'win32', scheme: 'vscode-file', fallbackAuthority: 'vscode-app' })}/out` :\n\t\t\t\t`${bootstrapLib.fileUriFromPath(configuration.appRoot, { isWindows: safeProcess.platform === 'win32' })}/out`,\n\t\t\t'vs/nls': nlsConfig,\n\t\t\tpreferScriptTags: useCustomProtocol\n\t\t};\n\n\t\t// use a trusted types policy when loading via script tags\n\t\tif (loaderConfig.preferScriptTags) {\n\t\t\tloaderConfig.trustedTypesPolicy = window.trustedTypes?.createPolicy('amdLoader', {\n\t\t\t\tcreateScriptURL(value) {\n\t\t\t\t\tif (value.startsWith(window.location.origin)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Invalid script url: ${value}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Enable loading of node modules:\n\t\t// - sandbox: we list paths of webpacked modules to help the loader\n\t\t// - non-sandbox: we signal that any module that does not begin with\n\t\t//                `vs/` should be loaded using node.js require()\n\t\tif (safeProcess.sandboxed) {\n\t\t\tloaderConfig.paths = {\n\t\t\t\t'vscode-textmate': `../node_modules/vscode-textmate/release/main`,\n\t\t\t\t'vscode-oniguruma': `../node_modules/vscode-oniguruma/release/main`,\n\t\t\t\t'xterm': `../node_modules/xterm/lib/xterm.js`,\n\t\t\t\t'xterm-addon-search': `../node_modules/xterm-addon-search/lib/xterm-addon-search.js`,\n\t\t\t\t'xterm-addon-unicode11': `../node_modules/xterm-addon-unicode11/lib/xterm-addon-unicode11.js`,\n\t\t\t\t'xterm-addon-webgl': `../node_modules/xterm-addon-webgl/lib/xterm-addon-webgl.js`,\n\t\t\t\t'iconv-lite-umd': `../node_modules/iconv-lite-umd/lib/iconv-lite-umd.js`,\n\t\t\t\t'jschardet': `../node_modules/jschardet/dist/jschardet.min.js`,\n\t\t\t};\n\t\t} else {\n\t\t\tloaderConfig.amdModulesPattern = /^vs\\//;\n\t\t}\n\n\t\t// Cached data config\n\t\tif (configuration.nodeCachedDataDir) {\n\t\t\tloaderConfig.nodeCachedData = {\n\t\t\t\tpath: configuration.nodeCachedDataDir,\n\t\t\t\tseed: modulePaths.join('')\n\t\t\t};\n\t\t}\n\n\t\t// Signal before require.config()\n\t\tif (typeof options?.beforeLoaderConfig === 'function') {\n\t\t\toptions.beforeLoaderConfig(loaderConfig);\n\t\t}\n\n\t\t// Configure loader\n\t\trequire.config(loaderConfig);\n\n\t\t// Handle pseudo NLS\n\t\tif (nlsConfig.pseudo) {\n\t\t\trequire(['vs/nls'], function (nlsPlugin) {\n\t\t\t\tnlsPlugin.setPseudoTranslation(nlsConfig.pseudo);\n\t\t\t});\n\t\t}\n\n\t\t// Signal before require()\n\t\tif (typeof options?.beforeRequire === 'function') {\n\t\t\toptions.beforeRequire();\n\t\t}\n\n\t\t// Actually require the main module as specified\n\t\trequire(modulePaths, async result => {\n\t\t\ttry {\n\n\t\t\t\t// Wait for process environment being fully resolved\n\t\t\t\tperformance.mark('code/willWaitForShellEnv');\n\t\t\t\tif (!safeProcess.env['VSCODE_SKIP_PROCESS_ENV_PATCHING'] /* TODO@bpasero for https://github.com/microsoft/vscode/issues/108804 */) {\n\t\t\t\t\tawait safeProcess.shellEnv();\n\t\t\t\t}\n\t\t\t\tperformance.mark('code/didWaitForShellEnv');\n\n\t\t\t\t// Callback only after process environment is resolved\n\t\t\t\tconst callbackResult = resultCallback(result, configuration);\n\t\t\t\tif (callbackResult instanceof Promise) {\n\t\t\t\t\tawait callbackResult;\n\n\t\t\t\t\tif (developerDeveloperKeybindingsDisposable && removeDeveloperKeybindingsAfterLoad) {\n\t\t\t\t\t\tdeveloperDeveloperKeybindingsDisposable();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tonUnexpectedError(error, enableDeveloperKeybindings);\n\t\t\t}\n\t\t}, onUnexpectedError);\n\t}\n\n\t/**\n\t * @param {boolean | undefined} disallowReloadKeybinding\n\t * @returns {() => void}\n\t */\n\tfunction registerDeveloperKeybindings(disallowReloadKeybinding) {\n\t\tconst ipcRenderer = preloadGlobals.ipcRenderer;\n\n\t\tconst extractKey =\n\t\t\t/**\n\t\t\t * @param {KeyboardEvent} e\n\t\t\t */\n\t\t\tfunction (e) {\n\t\t\t\treturn [\n\t\t\t\t\te.ctrlKey ? 'ctrl-' : '',\n\t\t\t\t\te.metaKey ? 'meta-' : '',\n\t\t\t\t\te.altKey ? 'alt-' : '',\n\t\t\t\t\te.shiftKey ? 'shift-' : '',\n\t\t\t\t\te.keyCode\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\t// Devtools & reload support\n\t\tconst TOGGLE_DEV_TOOLS_KB = (safeProcess.platform === 'darwin' ? 'meta-alt-73' : 'ctrl-shift-73'); // mac: Cmd-Alt-I, rest: Ctrl-Shift-I\n\t\tconst TOGGLE_DEV_TOOLS_KB_ALT = '123'; // F12\n\t\tconst RELOAD_KB = (safeProcess.platform === 'darwin' ? 'meta-82' : 'ctrl-82'); // mac: Cmd-R, rest: Ctrl-R\n\n\t\t/** @type {((e: KeyboardEvent) => void) | undefined} */\n\t\tlet listener = function (e) {\n\t\t\tconst key = extractKey(e);\n\t\t\tif (key === TOGGLE_DEV_TOOLS_KB || key === TOGGLE_DEV_TOOLS_KB_ALT) {\n\t\t\t\tipcRenderer.send('vscode:toggleDevTools');\n\t\t\t} else if (key === RELOAD_KB && !disallowReloadKeybinding) {\n\t\t\t\tipcRenderer.send('vscode:reloadWindow');\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener('keydown', listener);\n\n\t\treturn function () {\n\t\t\tif (listener) {\n\t\t\t\twindow.removeEventListener('keydown', listener);\n\t\t\t\tlistener = undefined;\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * @param {string | Error} error\n\t * @param {boolean} [showDevtoolsOnError]\n\t */\n\tfunction onUnexpectedError(error, showDevtoolsOnError) {\n\t\tif (showDevtoolsOnError) {\n\t\t\tconst ipcRenderer = preloadGlobals.ipcRenderer;\n\t\t\tipcRenderer.send('vscode:openDevTools');\n\t\t}\n\n\t\tconsole.error(`[uncaught exception]: ${error}`);\n\n\t\tif (error && typeof error !== 'string' && error.stack) {\n\t\t\tconsole.error(error.stack);\n\t\t}\n\t}\n\n\t/**\n\t * @return {{ fileUriFromPath: (path: string, config: { isWindows?: boolean, scheme?: string, fallbackAuthority?: string }) => string; }}\n\t */\n\tfunction bootstrap() {\n\t\t// @ts-ignore (defined in bootstrap.js)\n\t\treturn window.MonacoBootstrap;\n\t}\n\n\t/**\n\t * @return {typeof import('./vs/base/parts/sandbox/electron-sandbox/globals')}\n\t */\n\tfunction sandboxGlobals() {\n\t\t// @ts-ignore (defined in globals.js)\n\t\treturn window.vscode;\n\t}\n\n\treturn {\n\t\tload\n\t};\n}));\n"],"mappings":"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","names":[],"file":"bootstrap-window.js"}