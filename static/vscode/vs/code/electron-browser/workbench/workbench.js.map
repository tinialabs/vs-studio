{"version":3,"sources":["out-vscode/vs/code/electron-browser/workbench/workbench.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/// <reference path=\"../../../../typings/require.d.ts\" />\n\n//@ts-check\n(function () {\n\t'use strict';\n\n\tconst bootstrapWindow = bootstrapWindowLib();\n\n\t// Add a perf entry right from the top\n\tperformance.mark('code/didStartRenderer');\n\n\t// Load workbench main JS, CSS and NLS all in parallel. This is an\n\t// optimization to prevent a waterfall of loading to happen, because\n\t// we know for a fact that workbench.desktop.main will depend on\n\t// the related CSS and NLS counterparts.\n\tbootstrapWindow.load([\n\t\t'vs/workbench/workbench.desktop.main',\n\t\t'vs/nls!vs/workbench/workbench.desktop.main',\n\t\t'vs/css!vs/workbench/workbench.desktop.main'\n\t],\n\t\tfunction (_, configuration) {\n\n\t\t\t// Mark start of workbench\n\t\t\tperformance.mark('code/didLoadWorkbenchMain');\n\n\t\t\t// @ts-ignore\n\t\t\treturn require('vs/workbench/electron-browser/desktop.main').main(configuration);\n\t\t},\n\t\t{\n\t\t\tconfigureDeveloperSettings: function (windowConfig) {\n\t\t\t\treturn {\n\t\t\t\t\t// disable automated devtools opening on error when running extension tests\n\t\t\t\t\t// as this can lead to undeterministic test exectuion (devtools steals focus)\n\t\t\t\t\tforceDisableShowDevtoolsOnError: typeof windowConfig.extensionTestsPath === 'string',\n\t\t\t\t\t// enable devtools keybindings in extension development window\n\t\t\t\t\tforceEnableDeveloperKeybindings: Array.isArray(windowConfig.extensionDevelopmentPath) && windowConfig.extensionDevelopmentPath.length > 0,\n\t\t\t\t\tremoveDeveloperKeybindingsAfterLoad: true\n\t\t\t\t};\n\t\t\t},\n\t\t\tcanModifyDOM: function (windowConfig) {\n\t\t\t\tshowPartsSplash(windowConfig);\n\t\t\t},\n\t\t\tbeforeLoaderConfig: function (loaderConfig) {\n\t\t\t\tloaderConfig.recordStats = true;\n\t\t\t},\n\t\t\tbeforeRequire: function () {\n\t\t\t\tperformance.mark('code/willLoadWorkbenchMain');\n\n\t\t\t\t// It looks like browsers only lazily enable\n\t\t\t\t// the <canvas> element when needed. Since we\n\t\t\t\t// leverage canvas elements in our code in many\n\t\t\t\t// locations, we try to help the browser to\n\t\t\t\t// initialize canvas when it is idle, right\n\t\t\t\t// before we wait for the scripts to be loaded.\n\t\t\t\t// @ts-ignore\n\t\t\t\twindow.requestIdleCallback(() => {\n\t\t\t\t\tconst canvas = document.createElement('canvas');\n\t\t\t\t\tconst context = canvas.getContext('2d');\n\t\t\t\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\t\t\t\t\tcanvas.remove();\n\t\t\t\t}, { timeout: 50 });\n\t\t\t}\n\t\t}\n\t);\n\n\t// add default trustedTypes-policy for logging and to workaround\n\t// lib/platform limitations\n\twindow.trustedTypes?.createPolicy('default', {\n\t\tcreateHTML(value) {\n\t\t\t// see https://github.com/electron/electron/issues/27211\n\t\t\t// Electron webviews use a static innerHTML default value and\n\t\t\t// that isn't trusted. We use a default policy to check for the\n\t\t\t// exact value of that innerHTML-string and only allow that.\n\t\t\tif (value === '<!DOCTYPE html><style type=\"text/css\">:host { display: flex; }</style>') {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tthrow new Error('UNTRUSTED html usage, default trusted types policy should NEVER be reached');\n\t\t\t// console.trace('UNTRUSTED html usage, default trusted types policy should NEVER be reached');\n\t\t\t// return value;\n\t\t}\n\t});\n\n\t//#region Helpers\n\n\t/**\n\t * @typedef {import('../../../platform/windows/common/windows').INativeWindowConfiguration} INativeWindowConfiguration\n\t *\n\t * @returns {{\n\t *   load: (\n\t *     modules: string[],\n\t *     resultCallback: (result, configuration: INativeWindowConfiguration) => unknown,\n\t *     options?: {\n\t *       configureDeveloperSettings?: (config: INativeWindowConfiguration & object) => {\n\t * \t\t\tforceDisableShowDevtoolsOnError?: boolean,\n\t * \t\t\tforceEnableDeveloperKeybindings?: boolean,\n\t * \t\t\tdisallowReloadKeybinding?: boolean,\n\t * \t\t\tremoveDeveloperKeybindingsAfterLoad?: boolean\n\t * \t\t },\n\t * \t     canModifyDOM?: (config: INativeWindowConfiguration & object) => void,\n\t * \t     beforeLoaderConfig?: (loaderConfig: object) => void,\n\t *       beforeRequire?: () => void\n\t *     }\n\t *   ) => Promise<unknown>\n\t * }}\n\t */\n\tfunction bootstrapWindowLib() {\n\t\t// @ts-ignore (defined in bootstrap-window.js)\n\t\treturn window.MonacoBootstrapWindow;\n\t}\n\n\t/**\n\t * @param {{\n\t *\tpartsSplashPath?: string,\n\t *\tcolorScheme: ('light' | 'dark' | 'hc'),\n\t *\tautoDetectHighContrast?: boolean,\n\t *\textensionDevelopmentPath?: string[],\n\t *\tworkspace?: import('../../../platform/workspaces/common/workspaces').IWorkspaceIdentifier | import('../../../platform/workspaces/common/workspaces').ISingleFolderWorkspaceIdentifier\n\t * }} configuration\n\t */\n\tfunction showPartsSplash(configuration) {\n\t\tperformance.mark('code/willShowPartsSplash');\n\n\t\tlet data;\n\t\tif (typeof configuration.partsSplashPath === 'string') {\n\t\t\ttry {\n\t\t\t\tdata = JSON.parse(require.__$__nodeRequire('fs').readFileSync(configuration.partsSplashPath, 'utf8'));\n\t\t\t} catch (e) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\n\t\t// high contrast mode has been turned on from the outside, e.g. OS -> ignore stored colors and layouts\n\t\tconst isHighContrast = configuration.colorScheme === 'hc' /* ColorScheme.HIGH_CONTRAST */ && configuration.autoDetectHighContrast;\n\t\tif (data && isHighContrast && data.baseTheme !== 'hc-black') {\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// developing an extension -> ignore stored layouts\n\t\tif (data && configuration.extensionDevelopmentPath) {\n\t\t\tdata.layoutInfo = undefined;\n\t\t}\n\n\t\t// minimal color configuration (works with or without persisted data)\n\t\tlet baseTheme, shellBackground, shellForeground;\n\t\tif (data) {\n\t\t\tbaseTheme = data.baseTheme;\n\t\t\tshellBackground = data.colorInfo.editorBackground;\n\t\t\tshellForeground = data.colorInfo.foreground;\n\t\t} else if (isHighContrast) {\n\t\t\tbaseTheme = 'hc-black';\n\t\t\tshellBackground = '#000000';\n\t\t\tshellForeground = '#FFFFFF';\n\t\t} else {\n\t\t\tbaseTheme = 'vs-dark';\n\t\t\tshellBackground = '#1E1E1E';\n\t\t\tshellForeground = '#CCCCCC';\n\t\t}\n\t\tconst style = document.createElement('style');\n\t\tstyle.className = 'initialShellColors';\n\t\tdocument.head.appendChild(style);\n\t\tstyle.textContent = `body { background-color: ${shellBackground}; color: ${shellForeground}; margin: 0; padding: 0; }`;\n\n\t\tif (data && data.layoutInfo) {\n\t\t\t// restore parts if possible (we might not always store layout info)\n\t\t\tconst { id, layoutInfo, colorInfo } = data;\n\t\t\tconst splash = document.createElement('div');\n\t\t\tsplash.id = id;\n\t\t\tsplash.className = baseTheme;\n\n\t\t\tif (layoutInfo.windowBorder) {\n\t\t\t\tsplash.style.position = 'relative';\n\t\t\t\tsplash.style.height = 'calc(100vh - 2px)';\n\t\t\t\tsplash.style.width = 'calc(100vw - 2px)';\n\t\t\t\tsplash.style.border = '1px solid var(--window-border-color)';\n\t\t\t\tsplash.style.setProperty('--window-border-color', colorInfo.windowBorder);\n\n\t\t\t\tif (layoutInfo.windowBorderRadius) {\n\t\t\t\t\tsplash.style.borderRadius = layoutInfo.windowBorderRadius;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ensure there is enough space\n\t\t\tlayoutInfo.sideBarWidth = Math.min(layoutInfo.sideBarWidth, window.innerWidth - (layoutInfo.activityBarWidth + layoutInfo.editorPartMinWidth));\n\n\t\t\t// part: title\n\t\t\tconst titleDiv = document.createElement('div');\n\t\t\ttitleDiv.setAttribute('style', `position: absolute; width: 100%; left: 0; top: 0; height: ${layoutInfo.titleBarHeight}px; background-color: ${colorInfo.titleBarBackground}; -webkit-app-region: drag;`);\n\t\t\tsplash.appendChild(titleDiv);\n\n\t\t\t// part: activity bar\n\t\t\tconst activityDiv = document.createElement('div');\n\t\t\tactivityDiv.setAttribute('style', `position: absolute; height: calc(100% - ${layoutInfo.titleBarHeight}px); top: ${layoutInfo.titleBarHeight}px; ${layoutInfo.sideBarSide}: 0; width: ${layoutInfo.activityBarWidth}px; background-color: ${colorInfo.activityBarBackground};`);\n\t\t\tsplash.appendChild(activityDiv);\n\n\t\t\t// part: side bar (only when opening workspace/folder)\n\t\t\tif (configuration.workspace) {\n\t\t\t\t// folder or workspace -> status bar color, sidebar\n\t\t\t\tconst sideDiv = document.createElement('div');\n\t\t\t\tsideDiv.setAttribute('style', `position: absolute; height: calc(100% - ${layoutInfo.titleBarHeight}px); top: ${layoutInfo.titleBarHeight}px; ${layoutInfo.sideBarSide}: ${layoutInfo.activityBarWidth}px; width: ${layoutInfo.sideBarWidth}px; background-color: ${colorInfo.sideBarBackground};`);\n\t\t\t\tsplash.appendChild(sideDiv);\n\t\t\t}\n\n\t\t\t// part: statusbar\n\t\t\tconst statusDiv = document.createElement('div');\n\t\t\tstatusDiv.setAttribute('style', `position: absolute; width: 100%; bottom: 0; left: 0; height: ${layoutInfo.statusBarHeight}px; background-color: ${configuration.workspace ? colorInfo.statusBarBackground : colorInfo.statusBarNoFolderBackground};`);\n\t\t\tsplash.appendChild(statusDiv);\n\n\t\t\tdocument.body.appendChild(splash);\n\t\t}\n\n\t\tperformance.mark('code/didShowPartsSplash');\n\t}\n\n\t//#endregion\n}());\n"],"mappings":"AAQA,AAAC,YARD,MASC,aAEA,KAAM,GAAkB,IAGxB,YAAY,KAAK,yBAMjB,EAAgB,KAAK,CACpB,sCACA,6CACA,8CAEA,SAAU,EAAG,GAGZ,mBAAY,KAAK,6BAGV,QAAQ,8CAA8C,KAAK,IAEnE,CACC,2BAA4B,SAAU,GACrC,MAAO,CAGN,gCAAiC,MAAO,GAAa,oBAAuB,SAE5E,gCAAiC,MAAM,QAAQ,EAAa,2BAA6B,EAAa,yBAAyB,OAAS,EACxI,oCAAqC,KAGvC,aAAc,SAAU,GACvB,EAAgB,IAEjB,mBAAoB,SAAU,GAC7B,EAAa,YAAc,IAE5B,cAAe,WACd,YAAY,KAAK,8BASjB,OAAO,oBAAoB,KAC1B,KAAM,GAAS,SAAS,cAAc,UAEtC,AADgB,EAAO,WAAW,MAC1B,UAAU,EAAG,EAAG,EAAO,MAAO,EAAO,QAC7C,EAAO,UACL,CAAE,QAAS,QAOjB,UAAO,eAAP,QAAqB,aAAa,UAAW,CAC5C,WAAW,GAKV,GAAI,IAAU,yEACb,MAAO,GAER,KAAM,IAAI,OAAM,iFA6BlB,aAEC,MAAO,QAAO,sBAYf,WAAyB,GACxB,YAAY,KAAK,4BAEjB,GAAI,GACJ,GAAI,MAAO,GAAc,iBAAoB,SAC5C,IACC,EAAO,KAAK,MAAM,QAAQ,iBAAiB,MAAM,aAAa,EAAc,gBAAiB,eACrF,IAMV,KAAM,GAAiB,EAAc,cAAgB,MAAwC,EAAc,uBAC3G,AAAI,GAAQ,GAAkB,EAAK,YAAc,YAChD,GAAO,QAIJ,GAAQ,EAAc,0BACzB,GAAK,WAAa,QAInB,GAAI,GAAW,EAAiB,EAChC,AAAI,EACH,GAAY,EAAK,UACjB,EAAkB,EAAK,UAAU,iBACjC,EAAkB,EAAK,UAAU,YAC3B,AAAI,EACV,GAAY,WACZ,EAAkB,UAClB,EAAkB,WAElB,GAAY,UACZ,EAAkB,UAClB,EAAkB,WAEnB,KAAM,GAAQ,SAAS,cAAc,SAKrC,GAJA,EAAM,UAAY,qBAClB,SAAS,KAAK,YAAY,GAC1B,EAAM,YAAc,4BAA4B,aAA2B,8BAEvE,GAAQ,EAAK,YAEhB,KAAM,CAAE,KAAI,aAAY,aAAc,EAChC,EAAS,SAAS,cAAc,OACtC,EAAO,GAAK,EACZ,EAAO,UAAY,EAEf,EAAW,cACd,GAAO,MAAM,SAAW,WACxB,EAAO,MAAM,OAAS,oBACtB,EAAO,MAAM,MAAQ,oBACrB,EAAO,MAAM,OAAS,uCACtB,EAAO,MAAM,YAAY,wBAAyB,EAAU,cAExD,EAAW,oBACd,GAAO,MAAM,aAAe,EAAW,qBAKzC,EAAW,aAAe,KAAK,IAAI,EAAW,aAAc,OAAO,WAAc,GAAW,iBAAmB,EAAW,qBAG1H,KAAM,GAAW,SAAS,cAAc,OACxC,EAAS,aAAa,QAAS,6DAA6D,EAAW,uCAAuC,EAAU,iDACxJ,EAAO,YAAY,GAGnB,KAAM,GAAc,SAAS,cAAc,OAK3C,GAJA,EAAY,aAAa,QAAS,2CAA2C,EAAW,2BAA2B,EAAW,qBAAqB,EAAW,0BAA0B,EAAW,yCAAyC,EAAU,0BACtP,EAAO,YAAY,GAGf,EAAc,WAEjB,KAAM,GAAU,SAAS,cAAc,OACvC,EAAQ,aAAa,QAAS,2CAA2C,EAAW,2BAA2B,EAAW,qBAAqB,EAAW,gBAAgB,EAAW,8BAA8B,EAAW,qCAAqC,EAAU,sBAC7Q,EAAO,YAAY,GAIpB,KAAM,GAAY,SAAS,cAAc,OACzC,EAAU,aAAa,QAAS,gEAAgE,EAAW,wCAAwC,EAAc,UAAY,EAAU,oBAAsB,EAAU,gCACvN,EAAO,YAAY,GAEnB,SAAS,KAAK,YAAY,GAG3B,YAAY,KAAK","names":[],"file":"workbench.js"}