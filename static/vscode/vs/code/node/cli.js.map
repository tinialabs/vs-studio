{"version":3,"sources":["out-vscode/vs/code/node/fake","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/errors.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/functional.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/iterator.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/lifecycle.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/linkedList.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/platform.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/process.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/path.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/stopwatch.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/event.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/cancellation.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/strings.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/types.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/extpath.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/uri.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/map.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/network.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/normalization.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/resources.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/async.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/common/uuid.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/node/pfs.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/node/ports.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/base/node/terminalEncoding.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/platform/environment/node/argv.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/platform/environment/node/stdin.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/platform/environment/node/wait.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/platform/instantiation/common/instantiation.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/platform/files/common/files.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/platform/environment/node/argvHelper.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/platform/product/common/product.ts","out-vscode/vs/code/node/file:/Volumes/DATA/projects/vscode-web/vscode/src/vs/code/node/cli.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction } from 'vs/base/common/actions';\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n\tconstructor() {\n\t\tsuper(canceledName);\n\t\tthis.name = this.message;\n\t}\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\nexport interface IErrorOptions {\n\tactions?: readonly IAction[];\n}\n\nexport interface IErrorWithActions {\n\tactions?: readonly IAction[];\n}\n\nexport function isErrorWithActions(obj: unknown): obj is IErrorWithActions {\n\tconst candidate = obj as IErrorWithActions | undefined;\n\n\treturn candidate instanceof Error && Array.isArray(candidate.actions);\n}\n\nexport function createErrorWithActions(message: string, options: IErrorOptions = Object.create(null)): Error & IErrorWithActions {\n\tconst result = new Error(message);\n\n\tif (options.actions) {\n\t\t(result as IErrorWithActions).actions = options.actions;\n\t}\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T) => R): Iterable<R> {\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* concatNested<T>(iterables: Iterable<Iterable<T>>): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\t/**\n\t * Returns whether the iterables are the same length and all items are\n\t * equal using the comparator function.\n\t */\n\texport function equals<T>(a: Iterable<T>, b: Iterable<T>, comparator = (at: T, bt: T) => at === bt) {\n\t\tconst ai = a[Symbol.iterator]();\n\t\tconst bi = b[Symbol.iterator]();\n\t\twhile (true) {\n\t\t\tconst an = ai.next();\n\t\t\tconst bn = bi.next();\n\n\t\t\tif (an.done !== bn.done) {\n\t\t\t\treturn false;\n\t\t\t} else if (an.done) {\n\t\t\t\treturn true;\n\t\t\t} else if (!comparator(an.value, bn.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker: IDisposableTracker | null = null;\n\nexport interface IDisposableTracker {\n\ttrackDisposable(x: IDisposable): void;\n\tmarkTracked(x: IDisposable): void;\n}\n\nexport function setDisposableTracker(tracker: IDisposableTracker | null): void {\n\tdisposableTracker = tracker;\n}\n\nif (TRACK_DISPOSABLES) {\n\tconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\tdisposableTracker = new class implements IDisposableTracker {\n\t\ttrackDisposable(x: IDisposable): void {\n\t\t\tconst stack = new Error('Potentially leaked disposable').stack!;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\t\t\tconsole.log(stack);\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\tmarkTracked(x: IDisposable): void {\n\t\t\tif (x && x !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(x as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction markTracked<T extends IDisposable>(x: T): void {\n\tif (!disposableTracker) {\n\t\treturn;\n\t}\n\tdisposableTracker.markTracked(x);\n}\n\nexport function trackDisposable<T extends IDisposable>(x: T): T {\n\tif (!disposableTracker) {\n\t\treturn x;\n\t}\n\tdisposableTracker.trackDisposable(x);\n\treturn x;\n}\n\nexport class MultiDisposeError extends Error {\n\tconstructor(\n\t\tpublic readonly errors: any[]\n\t) {\n\t\tsuper(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n\t}\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tlet errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\tmarkTracked(d);\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new MultiDisposeError(errors);\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\tmarkTracked(arg);\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tdisposables.forEach(markTracked);\n\treturn toDisposable(() => dispose(disposables));\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: () => {\n\t\t\tmarkTracked(self);\n\t\t\tfn();\n\t\t}\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkTracked(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(t: T): T {\n\t\tif (!t) {\n\t\t\treturn t;\n\t\t}\n\t\tif ((t as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tmarkTracked(t);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(t);\n\t\t}\n\n\t\treturn t;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkTracked(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(t: T): T {\n\t\tif ((t as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(t);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._value?.dispose();\n\t\tif (value) {\n\t\t\tmarkTracked(value);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkTracked(this);\n\t\tthis._value?.dispose();\n\t\tthis._value = undefined;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string | undefined;\n}\n\n/**\n * This interface is intentionally not identical to node.js\n * process because it also works in sandboxed environments\n * where the process object is implemented differently. We\n * define the properties here that we need for `platform`\n * to work and nothing else.\n */\nexport interface INodeProcess {\n\tplatform: string;\n\tenv: IProcessEnvironment;\n\tnextTick?: (callback: (...args: any[]) => void) => void;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\tsandboxed?: boolean;\n\ttype?: string;\n\tcwd: () => string;\n}\n\ndeclare const process: INodeProcess;\ndeclare const global: unknown;\ndeclare const self: unknown;\n\nexport const globals: any = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof globals.vscode !== 'undefined') {\n\t// Native environment (sandboxed)\n\tnodeProcess = globals.vscode.process;\n} else if (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n}\n\nconst isElectronRenderer = typeof nodeProcess?.versions?.electron === 'string' && nodeProcess.type === 'renderer';\nexport const isElectronSandboxed = isElectronRenderer && nodeProcess?.sandboxed;\nexport const browserCodeLoadingCacheStrategy: 'none' | 'code' | 'bypassHeatCheck' | 'bypassHeatCheckAndEagerCompile' | undefined = (() => {\n\n\t// Always enabled when sandbox is enabled\n\tif (isElectronSandboxed) {\n\t\treturn 'bypassHeatCheck';\n\t}\n\n\t// Otherwise, only enabled conditionally\n\tconst env = nodeProcess?.env['VSCODE_BROWSER_CODE_LOADING'];\n\tif (typeof env === 'string') {\n\t\tif (env === 'none' || env === 'code' || env === 'bypassHeatCheck' || env === 'bypassHeatCheckAndEagerCompile') {\n\t\t\treturn env;\n\t\t}\n\n\t\treturn 'bypassHeatCheck';\n\t}\n\n\treturn undefined;\n})();\nexport const isPreferringBrowserCodeLoad = typeof browserCodeLoadingCacheStrategy === 'string';\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isLinuxSnap = _isLinuxSnap;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translatios that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\ninterface ISetImmediate {\n\t(callback: (...args: unknown[]) => void): void;\n}\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeSetImmediateId) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeSetImmediateId) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeSetImmediateId: myId }, '*');\n\t\t};\n\t}\n\tif (typeof nodeProcess?.nextTick === 'function') {\n\t\treturn nodeProcess.nextTick.bind(nodeProcess);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: unknown[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows, isMacintosh, setImmediate, globals, INodeProcess } from 'vs/base/common/platform';\n\nlet safeProcess: INodeProcess & { nextTick: (callback: (...args: any[]) => void) => void; };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = globals.vscode.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); },\n\t\tnextTick(callback: (...args: any[]) => void): void { return process.nextTick!(callback); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tnextTick(callback: (...args: any[]) => void): void { return setImmediate(callback); },\n\n\t\t// Unsupported\n\t\tget env() { return Object.create(null); },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `nextTick` method in node.js, sandboxed or web\n * environments.\n */\nexport const nextTick = safeProcess.nextTick;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v12.8.1/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: unknown) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\n\t\tcode >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\tpath.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\tlen > 2 &&\n\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisPathSeparator(path.charCodeAt(2));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for an UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at an UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as an UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals } from 'vs/base/common/platform';\n\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _highResolution: boolean;\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tpublic static create(highResolution: boolean = true): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution: boolean) {\n\t\tthis._highResolution = hasPerformanceNow && highResolution;\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n\n\tprivate _now(): number {\n\t\treturn this._highResolution ? globals.performance.now() : Date.now();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { Disposable, IDisposable, toDisposable, combinedDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { StopWatch } from 'vs/base/common/stopwatch';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * Given an event and a `map` function, returns another event which maps each element\n\t * through the mapping function.\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * Given an event and an `each` function, returns another identical event and calls\n\t * the `each` function per each element.\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * Given an event and a `filter` function, returns another event which emits those\n\t * elements for which the `filter` function returns `true`.\n\t */\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * Given an event and a `merge` function, returns another event which maps each element\n\t * and the cumulative result through the `merge` function. Similar to `map`, but with memory.\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * Given a chain of event processing functions (filter, map, etc), each\n\t * function will be invoked per event & per listener. Snapshotting an event\n\t * chain allows each function to be invoked just once per event.\n\t */\n\texport function snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Debounces the provided event, given a `merge` function.\n\t *\n\t * @param event The input event.\n\t * @param merge The reducing function.\n\t * @param delay The debouncing delay in millis.\n\t * @param leading Whether the event should fire in the leading phase of the timeout.\n\t * @param leakWarningThreshold The leak warning threshold override.\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only once and as soon as\n\t * the input event emits. The event data is the number of millis it took for the\n\t * event to fire.\n\t */\n\texport function stopwatch<T>(event: Event<T>): Event<number> {\n\t\tconst start = new Date().getTime();\n\t\treturn map(once(event), _ => new Date().getTime() - start);\n\t}\n\n\t/**\n\t * Given an event, it returns another event which fires only when the event\n\t * element changes.\n\t */\n\texport function latch<T>(event: Event<T>): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || value !== cache;\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * Buffers the provided event until a first listener comes\n\t * along, at which point fire all the events at once and\n\t * pipe the event from then on.\n\t *\n\t * ```typescript\n\t * const emitter = new Emitter<number>();\n\t * const event = emitter.event;\n\t * const bufferedEvent = buffer(event);\n\t *\n\t * emitter.fire(1);\n\t * emitter.fire(2);\n\t * emitter.fire(3);\n\t * // nothing...\n\t *\n\t * const listener = bufferedEvent(num => console.log(num));\n\t * // 1, 2, 3\n\t *\n\t * emitter.fire(4);\n\t * // 4\n\t * ```\n\t */\n\texport function buffer<T>(event: Event<T>, nextTick = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (nextTick) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function fromPromise<T = any>(promise: Promise<T>): Event<undefined> {\n\t\tconst emitter = new Emitter<undefined>();\n\t\tlet shouldEmit = false;\n\n\t\tpromise\n\t\t\t.then(undefined, () => null)\n\t\t\t.then(() => {\n\t\t\t\tif (!shouldEmit) {\n\t\t\t\t\tsetTimeout(() => emitter.fire(undefined), 0);\n\t\t\t\t} else {\n\t\t\t\t\temitter.fire(undefined);\n\t\t\t\t}\n\t\t\t});\n\n\t\tshouldEmit = true;\n\t\treturn emitter.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(resolve => once(event)(resolve));\n\t}\n}\n\nexport type Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n\n\t/** ONLY enable this during development */\n\t_profName?: string\n}\n\n\nclass EventProfiling {\n\n\tprivate static _idPool = 0;\n\n\tprivate _name: string;\n\tprivate _stopWatch?: StopWatch;\n\tprivate _listenerCount: number = 0;\n\tprivate _invocationCount = 0;\n\tprivate _elapsedOverall = 0;\n\n\tconstructor(name: string) {\n\t\tthis._name = `${name}_${EventProfiling._idPool++}`;\n\t}\n\n\tstart(listenerCount: number): void {\n\t\tthis._stopWatch = new StopWatch(true);\n\t\tthis._listenerCount = listenerCount;\n\t}\n\n\tstop(): void {\n\t\tif (this._stopWatch) {\n\t\t\tconst elapsed = this._stopWatch.elapsed();\n\t\t\tthis._elapsedOverall += elapsed;\n\t\t\tthis._invocationCount += 1;\n\n\t\t\tconsole.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\n\t\t\tthis._stopWatch = undefined;\n\t\t}\n\t}\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\n\tprivate static readonly _noop = function () { };\n\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate readonly _perfMon?: EventProfiling;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n\t\tthis._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tconst removeMonitor = this._leakageMon?.check(this._listeners.size);\n\n\t\t\t\tlet result: IDisposable;\n\t\t\t\tresult = {\n\t\t\t\t\tdispose: () => {\n\t\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.dispose = Emitter._noop;\n\t\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\t\tremove();\n\t\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\t// start/stop performance insight collection\n\t\t\tthis._perfMon?.start(this._deliveryQueue.size);\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._perfMon?.stop();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._listeners?.clear();\n\t\tthis._deliveryQueue?.clear();\n\t\tthis._leakageMon?.dispose();\n\t\tthis._disposed = true;\n\t}\n}\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprivate _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = Array.from(this._eventQueue);\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `character` occurs inside `value`.\n */\nexport function count(value: string, character: string): number {\n\tlet result = 0;\n\tconst ch = character.charCodeAt(0);\n\tfor (let i = value.length - 1; i >= 0; i--) {\n\t\tif (value.charCodeAt(i) === ch) {\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function truncate(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\treturn `${value.substr(0, maxLength)}${suffix}`;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\nexport function splitLines(str: string): string[] {\n\treturn str.split(/\\r\\n|\\r|\\n/);\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 32 && isUpperAsciiLetter(codeB)) { //codeB =[65-90] && codeA =[97-122]\n\t\t\tcontinue;\n\n\t\t} else if (diff === -32 && isUpperAsciiLetter(codeA)) {  //codeB =[97-122] && codeA =[65-90]\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\n\t\t\t//\n\t\t\treturn diff;\n\n\t\t} else {\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nfunction isAsciiLetter(code: number): boolean {\n\treturn isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && doEqualsIgnoreCase(a, b);\n}\n\nfunction doEqualsIgnoreCase(a: string, b: string, stopAt = a.length): boolean {\n\tfor (let i = 0; i < stopAt; i++) {\n\t\tconst codeA = a.charCodeAt(i);\n\t\tconst codeB = b.charCodeAt(i);\n\n\t\tif (codeA === codeB) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// a-z A-Z\n\t\tif (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n\t\t\tconst diff = Math.abs(codeA - codeB);\n\t\t\tif (diff !== 0 && diff !== 32) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Any other charcode\n\t\telse {\n\t\t\tif (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn doEqualsIgnoreCase(str, candidate, candidateLength);\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * A manual encoding of `str` to UTF8.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function encodeUTF8(str: string): Uint8Array {\n\tconst strLen = str.length;\n\n\t// See https://en.wikipedia.org/wiki/UTF-8\n\n\t// first loop to establish needed buffer size\n\tlet neededSize = 0;\n\tlet strOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tneededSize += 1;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tneededSize += 2;\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tneededSize += 3;\n\t\t} else {\n\t\t\tneededSize += 4;\n\t\t}\n\t}\n\n\t// second loop to actually encode\n\tconst arr = new Uint8Array(neededSize);\n\tstrOffset = 0;\n\tlet arrOffset = 0;\n\twhile (strOffset < strLen) {\n\t\tconst codePoint = getNextCodePoint(str, strLen, strOffset);\n\t\tstrOffset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t\tif (codePoint < 0x0080) {\n\t\t\tarr[arrOffset++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tarr[arrOffset++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tarr[arrOffset++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tarr[arrOffset++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tarr[arrOffset++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\t}\n\n\treturn arr;\n}\n\n/**\n * A manual decoding of a UTF8 string.\n * Use only in environments which do not offer native conversion methods!\n */\nexport function decodeUTF8(buffer: Uint8Array): string {\n\t// https://en.wikipedia.org/wiki/UTF-8\n\n\tconst len = buffer.byteLength;\n\tconst result: string[] = [];\n\tlet offset = 0;\n\twhile (offset < len) {\n\t\tconst v0 = buffer[offset];\n\t\tlet codePoint: number;\n\t\tif (v0 >= 0b11110000 && offset + 3 < len) {\n\t\t\t// 4 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00000111) << 18) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11100000 && offset + 2 < len) {\n\t\t\t// 3 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00001111) << 12) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else if (v0 >= 0b11000000 && offset + 1 < len) {\n\t\t\t// 2 bytes\n\t\t\tcodePoint = (\n\t\t\t\t(((buffer[offset++] & 0b00011111) << 6) >>> 0)\n\t\t\t\t| (((buffer[offset++] & 0b00111111) << 0) >>> 0)\n\t\t\t);\n\t\t} else {\n\t\t\t// 1 byte\n\t\t\tcodePoint = buffer[offset++];\n\t\t}\n\n\t\tif ((codePoint >= 0 && codePoint <= 0xD7FF) || (codePoint >= 0xE000 && codePoint <= 0xFFFF)) {\n\t\t\t// Basic Multilingual Plane\n\t\t\tresult.push(String.fromCharCode(codePoint));\n\t\t} else if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t// Supplementary Planes\n\t\t\tconst uPrime = codePoint - 0x10000;\n\t\t\tconst w1 = 0xD800 + ((uPrime & 0b11111111110000000000) >>> 10);\n\t\t\tconst w2 = 0xDC00 + ((uPrime & 0b00000000001111111111) >>> 0);\n\t\t\tresult.push(String.fromCharCode(w1));\n\t\t\tresult.push(String.fromCharCode(w2));\n\t\t} else {\n\t\t\t// illegal code point\n\t\t\tresult.push(String.fromCharCode(0xFFFD));\n\t\t}\n\t}\n\n\treturn result.join('');\n}\n\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDED6])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 — 2EFF   CJK Radicals Supplement\n\t//          2F00 — 2FDF   Kangxi Radicals\n\t//          2FF0 — 2FFF   Ideographic Description Characters\n\t//          3000 — 303F   CJK Symbols and Punctuation\n\t//          3040 — 309F   Hiragana\n\t//          30A0 — 30FF   Katakana\n\t//          3100 — 312F   Bopomofo\n\t//          3130 — 318F   Hangul Compatibility Jamo\n\t//          3190 — 319F   Kanbun\n\t//          31A0 — 31BF   Bopomofo Extended\n\t//          31F0 — 31FF   Katakana Phonetic Extensions\n\t//          3200 — 32FF   Enclosed CJK Letters and Months\n\t//          3300 — 33FF   CJK Compatibility\n\t//          3400 — 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 — 4DFF   Yijing Hexagram Symbols\n\t//          4E00 — 9FFF   CJK Unified Ideographs\n\t//          A000 — A48F   Yi Syllables\n\t//          A490 — A4CF   Yi Radicals\n\t//          AC00 — D7AF   Hangul Syllables\n\t// [IGNORE] D800 — DB7F   High Surrogates\n\t// [IGNORE] DB80 — DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 — DFFF   Low Surrogates\n\t// [IGNORE] E000 — F8FF   Private Use Area\n\t//          F900 — FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 — FE0F   Variation Selectors\n\t// [IGNORE] FE20 — FE2F   Combining Half Marks\n\t// [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 — FE6F   Small Form Variants\n\t// [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n\t//          FF00 — FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 — FFFF   Specials\n\tcharCode = +charCode; // @perf\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/master/generate-emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n\t\t|| (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n\t\t|| (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n\t\t|| (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129750)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\tif (idx === -1) {\n\t\treturn str;\n\t}\n\n\tif (str[idx - 1] === '\\r') {\n\t\tidx--;\n\t}\n\n\treturn str.substr(0, idx);\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexdima/unicode-utils/blob/master/generate-grapheme-break.js\n\treturn JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: unknown): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: unknown): value is string[] {\n\treturn Array.isArray(value) && (<unknown[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: unknown): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: unknown): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable<T>(obj: unknown): obj is Iterable<T> {\n\treturn !!obj && typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: unknown): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: unknown): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: unknown): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: unknown, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: unknown): obj is object {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: unknown): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: unknown[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: unknown[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: unknown, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && (arg as any).constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: unknown[]) => unknown): T {\n\tconst createProxyMethod = (method: string): () => unknown => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\ntype AddFirstParameterToFunction<T, TargetFunctionsReturnType, FirstParameter> = T extends (...args: any[]) => TargetFunctionsReturnType ?\n\t// Function: add param to function\n\t(firstArg: FirstParameter, ...args: Parameters<T>) => ReturnType<T> :\n\n\t// Else: just leave as is\n\tT;\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\t// For every property\n\t[K in keyof Target]: AddFirstParameterToFunction<Target[K], TargetFunctionsReturnType, FirstParameter>;\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n */\nexport type Dto<T> = T extends { toJSON(): infer U }\n\t? U\n\t: T extends object\n\t? { [k in keyof T]: Dto<T[k]>; }\n\t: T;\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function assertNever(value: never) {\n\tthrow new Error('Unreachable');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { startsWithIgnoreCase, equalsIgnoreCase, rtrim } from 'vs/base/common/strings';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { sep, posix, isAbsolute, join, normalize } from 'vs/base/common/path';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string): boolean {\n\tif (isWindows) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string): string | undefined {\n\treturn hasDriveLetter(path) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tsegments.forEach(segment => {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t});\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWindows } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as paths from 'vs/base/common/path';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'string'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\treturn new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: number;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatibile with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\toverride get fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\toverride toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\toverride toJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: 1\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compareSubstringIgnoreCase, compare, compareSubstring, compareIgnoreCase } from 'vs/base/common/strings';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class ConfigKeysIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Period) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\tconstructor(private readonly _ignorePathCasing: (uri: URI) => boolean) { }\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\tthis._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey!: K;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(ignorePathCasing: (key: URI) => boolean = () => false): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator(ignorePathCasing));\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tstatic forConfigKeys<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new ConfigKeysIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._getNode(key)?.value;\n\t}\n\n\tprivate _getNode(key: K) {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\thas(key: K): boolean {\n\t\tconst node = this._getNode(key);\n\t\treturn !(node?.value === undefined && node?.mid === undefined);\n\t}\n\n\tdelete(key: K): void {\n\t\treturn this._delete(key, false);\n\t}\n\n\tdeleteSuperstr(key: K): void {\n\t\treturn this._delete(key, true);\n\t}\n\n\tprivate _delete(key: K, superStr: boolean): void {\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [-1 | 0 | 1, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find and unset node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([1, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([-1, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([0, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tif (superStr) {\n\t\t\t\t\t// remove children\n\t\t\t\t\tnode.left = undefined;\n\t\t\t\t\tnode.mid = undefined;\n\t\t\t\t\tnode.right = undefined;\n\t\t\t\t} else {\n\t\t\t\t\t// remove element\n\t\t\t\t\tnode.value = undefined;\n\t\t\t\t}\n\n\t\t\t\t// clean up empty nodes\n\t\t\t\twhile (stack.length > 0 && node.isEmpty()) {\n\t\t\t\t\tlet [dir, parent] = stack.pop()!;\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase 1: parent.left = undefined; break;\n\t\t\t\t\t\tcase 0: parent.mid = undefined; break;\n\t\t\t\t\t\tcase -1: parent.right = undefined; break;\n\t\t\t\t\t}\n\t\t\t\t\tnode = parent;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): IterableIterator<[K, V]> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._entries(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tforEach(callback: (value: V, index: K) => any): void {\n\t\tfor (const [key, value] of this) {\n\t\t\tcallback(value, key);\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\tyield* this._entries(this._root);\n\t}\n\n\tprivate *_entries(node: TernarySearchTreeNode<K, V> | undefined): IterableIterator<[K, V]> {\n\t\tif (node) {\n\t\t\t// left\n\t\t\tyield* this._entries(node.left);\n\n\t\t\t// node\n\t\t\tif (node.value) {\n\t\t\t\t// callback(node.value, this._iter.join(parts));\n\t\t\t\tyield [node.key, node.value];\n\t\t\t}\n\t\t\t// mid\n\t\t\tyield* this._entries(node.mid);\n\n\t\t\t// right\n\t\t\tyield* this._entries(node.right);\n\t\t}\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, T>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), value);\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource));\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [index, value] of this.map) {\n\t\t\tclb(value, URI.parse(index), <any>this);\n\t\t}\n\t}\n\n\tvalues(): IterableIterator<T> {\n\t\treturn this.map.values();\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let key of this.map.keys()) {\n\t\t\tyield URI.parse(key);\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let tuple of this.map.entries()) {\n\t\t\tyield [URI.parse(tuple[0]), tuple[1]];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let item of this.map) {\n\t\t\tyield [URI.parse(item[0]), item[1]];\n\t\t}\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n\n/**\n * Wraps the map in type that only implements readonly properties. Useful\n * in the extension host to prevent the consumer from making any mutations.\n */\nexport class ReadonlyMapView<K, V> implements ReadonlyMap<K, V>{\n\treadonly #source: ReadonlyMap<K, V>;\n\n\tpublic get size() {\n\t\treturn this.#source.size;\n\t}\n\n\tconstructor(source: ReadonlyMap<K, V>) {\n\t\tthis.#source = source;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void, thisArg?: any): void {\n\t\tthis.#source.forEach(callbackfn, thisArg);\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this.#source.get(key);\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this.#source.has(key);\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\treturn this.#source.entries();\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\treturn this.#source.keys();\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\treturn this.#source.values();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.#source.entries();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport * as platform from 'vs/base/common/platform';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: `/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nclass FileAccessImpl {\n\n\tprivate readonly FALLBACK_AUTHORITY = 'vscode-app';\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(uri: URI): URI;\n\tasBrowserUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }, __forceCodeFileUri?: boolean): URI;\n\tasBrowserUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }, __forceCodeFileUri?: boolean): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Only convert the URI if we are in a native context and it has `file:` scheme\n\t\t// and we have explicitly enabled the conversion (sandbox, or VSCODE_BROWSER_CODE_LOADING)\n\t\tif (platform.isNative && (__forceCodeFileUri || platform.isPreferringBrowserCodeLoad) && uri.scheme === Schemas.file) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || this.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(uri: URI): URI;\n\tasFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== this.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\n/**\n * The normalize() method returns the Unicode Normalization Form of a given string. The form will be\n * the Normalization Form Canonical Composition.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize}\n */\nexport const canNormalize = typeof (String.prototype as any /* standalone editor compilation */).normalize === 'function';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!canNormalize || !str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = (<any>str).normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\tif (!canNormalize) {\n\t\t// no ES6 features...\n\t\treturn function (str: string) { return str; };\n\t} else {\n\t\t// transform into NFD form and remove accents\n\t\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\t\tconst regex = /[\\u0300-\\u036f]/g;\n\t\treturn function (str: string) {\n\t\t\treturn normalizeNFD(str).replace(regex, '');\n\t\t};\n\t}\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as extpath from 'vs/base/common/extpath';\nimport * as paths from 'vs/base/common/path';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\nimport { equalsIgnoreCase, compare as strCompare } from 'vs/base/common/strings';\nimport { Schemas } from 'vs/base/common/network';\nimport { isWindows, isLinux } from 'vs/base/common/platform';\nimport { CharCode } from 'vs/base/common/charCode';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see ResourceMap\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tif (path.indexOf('/') === -1) { // no slashes? it's likely a Windows path\n\t\t\tpath = extpath.toSlashes(path);\n\t\t\tif (/^[a-zA-Z]:(\\/|$)/.test(path)) { // starts with a drive letter\n\t\t\t\tpath = '/' + path;\n\t\t\t}\n\t\t}\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string, a2: string) {\n\t\treturn a1 === a2 || equalsIgnoreCase(a1, a2);\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { canceled, onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event, Listener } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { extUri as defaultExtUri, IExtUri } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tsource.token.onCancellationRequested(() => {\n\t\t\treject(canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn Promise.race([promise, new Promise<T | undefined>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancelTimeout();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(resolve, millis);\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\treject(canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\nexport function ignoreErrors<T>(promise: Promise<T>): Promise<T | undefined> {\n\treturn promise.then(undefined, _ => undefined);\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t\t// return this.runningPromises + this.outstandingPromises.length;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI, extUri: IExtUri = defaultExtUri): Queue<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tEvent.once(queue.onFinished)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\tconst dummyIdle: IdleDeadline = Object.freeze({\n\t\t\tdidTimeout: true,\n\t\t\ttimeRemaining() { return 15; }\n\t\t});\n\t\trunWhenIdle = (runner) => {\n\t\t\tconst handle = setTimeout(() => runner(dummyIdle));\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number) { }\n\n\tincrement(): number {\n\t\tconst now = Date.now();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate rejected = false;\n\tprivate resolved = false;\n\n\tpublic get isRejected() {\n\t\treturn this.rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn this.rejected || this.resolved;\n\t}\n\n\tpublic p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.resolved = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\tnew Promise<void>(resolve => {\n\t\t\tthis.errorCallback(canceled());\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<unknown>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<unknown>, listener: Function) => Promise<unknown>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<unknown>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<unknown>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\t\t\tawait Promises.settled(thenables).catch(e => onUnexpectedError(e));\n\t\t}\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\texport interface IResolvedPromise<T> {\n\t\tstatus: 'fulfilled';\n\t\tvalue: T;\n\t}\n\n\texport interface IRejectedPromise {\n\t\tstatus: 'rejected';\n\t\treason: Error;\n\t}\n\n\t/**\n\t * Interface of https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled\n\t */\n\tinterface PromiseWithAllSettled<T> {\n\t\tallSettled<T>(promises: Promise<T>[]): Promise<readonly (IResolvedPromise<T> | IRejectedPromise)[]>;\n\t}\n\n\t/**\n\t * A polyfill of `Promise.allSettled`: returns after all promises have\n\t * resolved or rejected and provides access to each result or error\n\t * in the order of the original passed in promises array.\n\t * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/allSettled\n\t */\n\texport async function allSettled<T>(promises: Promise<T>[]): Promise<readonly (IResolvedPromise<T> | IRejectedPromise)[]> {\n\t\tif (typeof (Promise as unknown as PromiseWithAllSettled<T>).allSettled === 'function') {\n\t\t\treturn allSettledNative(promises); // in some environments we can benefit from native implementation\n\t\t}\n\n\t\treturn allSettledShim(promises);\n\t}\n\n\tasync function allSettledNative<T>(promises: Promise<T>[]): Promise<readonly (IResolvedPromise<T> | IRejectedPromise)[]> {\n\t\treturn (Promise as unknown as PromiseWithAllSettled<T>).allSettled(promises);\n\t}\n\n\tasync function allSettledShim<T>(promises: Promise<T>[]): Promise<readonly (IResolvedPromise<T> | IRejectedPromise)[]> {\n\t\treturn Promise.all(promises.map(promise => (promise.then(value => {\n\t\t\tconst fulfilled: IResolvedPromise<T> = { status: 'fulfilled', value };\n\n\t\t\treturn fulfilled;\n\t\t}, error => {\n\t\t\tconst rejected: IRejectedPromise = { status: 'rejected', reason: error };\n\n\t\t\treturn rejected;\n\t\t}))));\n\t}\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@jrieken\n// 1. node nodejs use`crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\nlet _fillRandomValues: (bucket: Uint8Array) => Uint8Array;\n\ndeclare const crypto: undefined | { getRandomValues(data: Uint8Array): Uint8Array };\n\nif (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n\t// browser\n\t_fillRandomValues = crypto.getRandomValues.bind(crypto);\n\n} else {\n\t_fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\t\tfor (let i = 0; i < bucket.length; i++) {\n\t\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t\t}\n\t\treturn bucket;\n\t};\n}\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { tmpdir } from 'os';\nimport { join } from 'vs/base/common/path';\nimport { ResourceQueue } from 'vs/base/common/async';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { isEqualOrParent, isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\n\n//#region rimraf\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\n/**\n * Allows to delete the provied path (either file or folder) recursively\n * with the options:\n * - `UNLINK`: direct removal from disk\n * - `MOVE`: faster variant that first moves the target to temp dir and then\n *           deletes it in the background without waiting for that to finish.\n */\nexport async function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via rmDir\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait fs.promises.rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp).catch(error => {/* ignore */ });\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\treturn fs.promises.rmdir(path, { recursive: true, maxRetries: 3 });\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\tfs.rmdirSync(path, { recursive: true });\n}\n\n//#endregion\n\n//#region readdir with NFC support (macos)\n\nexport interface IDirent {\n\tname: string;\n\n\tisFile(): boolean;\n\tisDirectory(): boolean;\n\tisSymbolicLink(): boolean;\n}\n\n/**\n * Drop-in replacement of `fs.readdir` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nexport async function readdir(path: string): Promise<string[]>;\nexport async function readdir(path: string, options: { withFileTypes: true }): Promise<IDirent[]>;\nexport async function readdir(path: string, options?: { withFileTypes: true }): Promise<(string | IDirent)[]> {\n\treturn handleDirectoryChildren(await (options ? safeReaddirWithFileTypes(path) : fs.promises.readdir(path)));\n}\n\nasync function safeReaddirWithFileTypes(path: string): Promise<IDirent[]> {\n\ttry {\n\t\treturn await fs.promises.readdir(path, { withFileTypes: true });\n\t} catch (error) {\n\t\tconsole.warn('[node.js fs] readdir with filetypes failed with error: ', error);\n\t}\n\n\t// Fallback to manually reading and resolving each\n\t// children of the folder in case we hit an error\n\t// previously.\n\t// This can only really happen on exotic file systems\n\t// such as explained in #115645 where we get entries\n\t// from `readdir` that we can later not `lstat`.\n\tconst result: IDirent[] = [];\n\tconst children = await readdir(path);\n\tfor (const child of children) {\n\t\tlet isFile = false;\n\t\tlet isDirectory = false;\n\t\tlet isSymbolicLink = false;\n\n\t\ttry {\n\t\t\tconst lstat = await fs.promises.lstat(join(path, child));\n\n\t\t\tisFile = lstat.isFile();\n\t\t\tisDirectory = lstat.isDirectory();\n\t\t\tisSymbolicLink = lstat.isSymbolicLink();\n\t\t} catch (error) {\n\t\t\tconsole.warn('[node.js fs] unexpected error from lstat after readdir: ', error);\n\t\t}\n\n\t\tresult.push({\n\t\t\tname: child,\n\t\t\tisFile: () => isFile,\n\t\t\tisDirectory: () => isDirectory,\n\t\t\tisSymbolicLink: () => isSymbolicLink\n\t\t});\n\t}\n\n\treturn result;\n}\n\n/**\n * Drop-in replacement of `fs.readdirSync` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[];\nfunction handleDirectoryChildren(children: IDirent[]): IDirent[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[] {\n\treturn children.map(child => {\n\n\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t// See also https://github.com/nodejs/node/issues/2165\n\n\t\tif (typeof child === 'string') {\n\t\t\treturn isMacintosh ? normalizeNFC(child) : child;\n\t\t}\n\n\t\tchild.name = isMacintosh ? normalizeNFC(child.name) : child.name;\n\n\t\treturn child;\n\t});\n}\n\n/**\n * A convinience method to read all children of a path that\n * are directories.\n */\nexport async function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await SymlinkSupport.existsDirectory(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\n//#endregion\n\n//#region whenDeleted()\n\n/**\n * A `Promise` that resolves when the provided `path`\n * is deleted from disk.\n */\nexport function whenDeleted(path: string, intervalMs = 1000): Promise<void> {\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.access(path, err => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, intervalMs);\n\t});\n}\n\n//#endregion\n\n//#region Methods with symbolic links support\n\nexport namespace SymlinkSupport {\n\n\texport interface IStats {\n\n\t\t// The stats of the file. If the file is a symbolic\n\t\t// link, the stats will be of that target file and\n\t\t// not the link itself.\n\t\t// If the file is a symbolic link pointing to a non\n\t\t// existing file, the stat will be of the link and\n\t\t// the `dangling` flag will indicate this.\n\t\tstat: fs.Stats;\n\n\t\t// Will be provided if the resource is a symbolic link\n\t\t// on disk. Use the `dangling` flag to find out if it\n\t\t// points to a resource that does not exist on disk.\n\t\tsymbolicLink?: { dangling: boolean };\n\t}\n\n\t/**\n\t * Resolves the `fs.Stats` of the provided path. If the path is a\n\t * symbolic link, the `fs.Stats` will be from the target it points\n\t * to. If the target does not exist, `dangling: true` will be returned\n\t * as `symbolicLink` value.\n\t */\n\texport async function stat(path: string): Promise<IStats> {\n\n\t\t// First stat the link\n\t\tlet lstats: fs.Stats | undefined;\n\t\ttry {\n\t\t\tlstats = await fs.promises.lstat(path);\n\n\t\t\t// Return early if the stat is not a symbolic link at all\n\t\t\tif (!lstats.isSymbolicLink()) {\n\t\t\t\treturn { stat: lstats };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore - use stat() instead */\n\t\t}\n\n\t\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t\t// which for symbolic links will stat the target they point to\n\t\ttry {\n\t\t\tconst stats = await fs.promises.stat(path);\n\n\t\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t\t} catch (error) {\n\n\t\t\t// If the link points to a non-existing file we still want\n\t\t\t// to return it as result while setting dangling: true flag\n\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t}\n\n\t\t\t// Windows: workaround a node.js bug where reparse points\n\t\t\t// are not supported (https://github.com/nodejs/node/issues/36790)\n\t\t\tif (isWindows && error.code === 'EACCES') {\n\t\t\t\ttry {\n\t\t\t\t\tconst stats = await fs.promises.stat(await fs.promises.readlink(path));\n\n\t\t\t\t\treturn { stat: stats, symbolicLink: { dangling: false } };\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\t// If the link points to a non-existing file we still want\n\t\t\t\t\t// to return it as result while setting dangling: true flag\n\t\t\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a file with support\n\t * for symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a non-existing path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsFile(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isFile() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a directory with support for\n\t * symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a non-existing path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsDirectory(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isDirectory() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n//#endregion\n\n//#region Write File\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeQueues = new ResourceQueue();\n\n/**\n * Same as `fs.writeFile` but with an additional call to\n * `fs.fdatasync` after writing to ensure changes are\n * flushed to disk.\n *\n * In addition, multiple writes to the same path are queued.\n */\nexport function writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nexport function writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\treturn writeQueues.queueFor(URI.file(path), extUriBiasedIgnorePathCase).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\nexport interface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\n/**\n * Same as `fs.writeFileSync` but with an additional call to\n * `fs.fdatasyncSync` after writing to ensure changes are\n * flushed to disk.\n */\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd);\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666 /* default node.js mode for files */, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666 /* default node.js mode for files */,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\n//#endregion\n\n//#region Move / Copy\n\n/**\n * A drop-in replacement for `fs.rename` that:\n * - updates the `mtime` of the `source` after the operation\n * - allows to move across multiple disks\n */\nexport async function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn;  // simulate node.js behaviour here and do a no-op if paths match\n\t}\n\n\t// We have been updating `mtime` for move operations for files since the\n\t// beginning for reasons that are no longer quite clear, but changing\n\t// this could be risky as well. As such, trying to reason about it:\n\t// It is very common as developer to have file watchers enabled that watch\n\t// the current workspace for changes. Updating the `mtime` might make it\n\t// easier for these watchers to recognize an actual change. Since changing\n\t// a source code file also updates the `mtime`, moving a file should do so\n\t// as well because conceptually it is a change of a similar category.\n\tasync function updateMtime(path: string): Promise<void> {\n\t\ttry {\n\t\t\tconst stat = await fs.promises.lstat(path);\n\t\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\t\treturn; // only for files\n\t\t\t}\n\n\t\t\tconst fh = await fs.promises.open(path, 'a');\n\t\t\ttry {\n\t\t\t\tawait fh.utimes(stat.atime, new Date());\n\t\t\t} finally {\n\t\t\t\tawait fh.close();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// Ignore any error\n\t\t}\n\t}\n\n\ttry {\n\t\tawait fs.promises.rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target, { preserveSymlinks: false /* copying to another device */ });\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\ninterface ICopyPayload {\n\treadonly root: { source: string, target: string };\n\treadonly options: { preserveSymlinks: boolean };\n\treadonly handledSourcePaths: Set<string>;\n}\n\n/**\n * Recursively copies all of `source` to `target`.\n *\n * The options `preserveSymlinks` configures how symbolic\n * links should be handled when encountered. Set to\n * `false` to not preserve them and `true` otherwise.\n */\nexport async function copy(source: string, target: string, options: { preserveSymlinks: boolean }): Promise<void> {\n\treturn doCopy(source, target, { root: { source, target }, options, handledSourcePaths: new Set<string>() });\n}\n\n// When copying a file or folder, we want to preserve the mode\n// it had and as such provide it when creating. However, modes\n// can go beyond what we expect (see link below), so we mask it.\n// (https://github.com/nodejs/node-v0.x-archive/issues/3045#issuecomment-4862588)\nconst COPY_MODE_MASK = 0o777;\n\nasync function doCopy(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Keep track of paths already copied to prevent\n\t// cycles from symbolic links to cause issues\n\tif (payload.handledSourcePaths.has(source)) {\n\t\treturn;\n\t} else {\n\t\tpayload.handledSourcePaths.add(source);\n\t}\n\n\tconst { stat, symbolicLink } = await SymlinkSupport.stat(source);\n\n\t// Symlink\n\tif (symbolicLink) {\n\n\t\t// Try to re-create the symlink unless `preserveSymlinks: false`\n\t\tif (payload.options.preserveSymlinks) {\n\t\t\ttry {\n\t\t\t\treturn await doCopySymlink(source, target, payload);\n\t\t\t} catch (error) {\n\t\t\t\t// in any case of an error fallback to normal copy via dereferencing\n\t\t\t\tconsole.warn('[node.js fs] copy of symlink failed: ', error);\n\t\t\t}\n\t\t}\n\n\t\tif (symbolicLink.dangling) {\n\t\t\treturn; // skip dangling symbolic links from here on (https://github.com/microsoft/vscode/issues/111621)\n\t\t}\n\t}\n\n\t// Folder\n\tif (stat.isDirectory()) {\n\t\treturn doCopyDirectory(source, target, stat.mode & COPY_MODE_MASK, payload);\n\t}\n\n\t// File or file-like\n\telse {\n\t\treturn doCopyFile(source, target, stat.mode & COPY_MODE_MASK);\n\t}\n}\n\nasync function doCopyDirectory(source: string, target: string, mode: number, payload: ICopyPayload): Promise<void> {\n\n\t// Create folder\n\tawait fs.promises.mkdir(target, { recursive: true, mode });\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (const file of files) {\n\t\tawait doCopy(join(source, file), join(target, file), payload);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\n\t// Copy file\n\tawait fs.promises.copyFile(source, target);\n\n\t// restore mode (https://github.com/nodejs/node/issues/1104)\n\tawait fs.promises.chmod(target, mode);\n}\n\nasync function doCopySymlink(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Figure out link target\n\tlet linkTarget = await fs.promises.readlink(source);\n\n\t// Special case: the symlink points to a target that is\n\t// actually within the path that is being copied. In that\n\t// case we want the symlink to point to the target and\n\t// not the source\n\tif (isEqualOrParent(linkTarget, payload.root.source, !isLinux)) {\n\t\tlinkTarget = join(payload.root.target, linkTarget.substr(payload.root.source.length + 1));\n\t}\n\n\t// Create symlink\n\tawait fs.promises.symlink(linkTarget, target);\n}\n\n//#endregion\n\n//#region Async FS Methods\n\nexport async function exists(path: string): Promise<boolean> {\n\ttry {\n\t\tawait fs.promises.access(path);\n\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as net from 'net';\n\n/**\n * @returns Returns a random port between 1025 and 65535.\n */\nexport function randomPort(): number {\n\tconst min = 1025;\n\tconst max = 65535;\n\treturn min + Math.floor((max - min) * Math.random());\n}\n\n/**\n * Given a start point and a max number of retries, will find a port that\n * is openable. Will return 0 in case no free port can be found.\n */\nexport function findFreePort(startPort: number, giveUpAfter: number, timeout: number): Promise<number> {\n\tlet done = false;\n\n\treturn new Promise(resolve => {\n\t\tconst timeoutHandle = setTimeout(() => {\n\t\t\tif (!done) {\n\t\t\t\tdone = true;\n\t\t\t\treturn resolve(0);\n\t\t\t}\n\t\t}, timeout);\n\n\t\tdoFindFreePort(startPort, giveUpAfter, (port) => {\n\t\t\tif (!done) {\n\t\t\t\tdone = true;\n\t\t\t\tclearTimeout(timeoutHandle);\n\t\t\t\treturn resolve(port);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction doFindFreePort(startPort: number, giveUpAfter: number, clb: (port: number) => void): void {\n\tif (giveUpAfter === 0) {\n\t\treturn clb(0);\n\t}\n\n\tconst client = new net.Socket();\n\n\t// If we can connect to the port it means the port is already taken so we continue searching\n\tclient.once('connect', () => {\n\t\tdispose(client);\n\n\t\treturn doFindFreePort(startPort + 1, giveUpAfter - 1, clb);\n\t});\n\n\tclient.once('data', () => {\n\t\t// this listener is required since node.js 8.x\n\t});\n\n\tclient.once('error', (err: Error & { code?: string }) => {\n\t\tdispose(client);\n\n\t\t// If we receive any non ECONNREFUSED error, it means the port is used but we cannot connect\n\t\tif (err.code !== 'ECONNREFUSED') {\n\t\t\treturn doFindFreePort(startPort + 1, giveUpAfter - 1, clb);\n\t\t}\n\n\t\t// Otherwise it means the port is free to use!\n\t\treturn clb(startPort);\n\t});\n\n\tclient.connect(startPort, '127.0.0.1');\n}\n\n/**\n * Uses listen instead of connect. Is faster, but if there is another listener on 0.0.0.0 then this will take 127.0.0.1 from that listener.\n */\nexport function findFreePortFaster(startPort: number, giveUpAfter: number, timeout: number): Promise<number> {\n\tlet resolved: boolean = false;\n\tlet timeoutHandle: NodeJS.Timeout | undefined = undefined;\n\tlet countTried: number = 1;\n\tconst server = net.createServer({ pauseOnConnect: true });\n\tfunction doResolve(port: number, resolve: (port: number) => void) {\n\t\tif (!resolved) {\n\t\t\tresolved = true;\n\t\t\tserver.removeAllListeners();\n\t\t\tserver.close();\n\t\t\tif (timeoutHandle) {\n\t\t\t\tclearTimeout(timeoutHandle);\n\t\t\t}\n\t\t\tresolve(port);\n\t\t}\n\t}\n\treturn new Promise<number>(resolve => {\n\t\ttimeoutHandle = setTimeout(() => {\n\t\t\tdoResolve(0, resolve);\n\t\t}, timeout);\n\n\t\tserver.on('listening', () => {\n\t\t\tdoResolve(startPort, resolve);\n\t\t});\n\t\tserver.on('error', err => {\n\t\t\tif (err && ((<any>err).code === 'EADDRINUSE' || (<any>err).code === 'EACCES') && (countTried < giveUpAfter)) {\n\t\t\t\tstartPort++;\n\t\t\t\tcountTried++;\n\t\t\t\tserver.listen(startPort, '127.0.0.1');\n\t\t\t} else {\n\t\t\t\tdoResolve(0, resolve);\n\t\t\t}\n\t\t});\n\t\tserver.on('close', () => {\n\t\t\tdoResolve(0, resolve);\n\t\t});\n\t\tserver.listen(startPort, '127.0.0.1');\n\t});\n}\n\nfunction dispose(socket: net.Socket): void {\n\ttry {\n\t\tsocket.removeAllListeners('connect');\n\t\tsocket.removeAllListeners('error');\n\t\tsocket.end();\n\t\tsocket.destroy();\n\t\tsocket.unref();\n\t} catch (error) {\n\t\tconsole.error(error); // otherwise this error would get lost in the callback chain\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * This code is also used by standalone cli's. Avoid adding dependencies to keep the size of the cli small.\n */\nimport { exec } from 'child_process';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst windowsTerminalEncodings = {\n\t'437': 'cp437', // United States\n\t'850': 'cp850', // Multilingual(Latin I)\n\t'852': 'cp852', // Slavic(Latin II)\n\t'855': 'cp855', // Cyrillic(Russian)\n\t'857': 'cp857', // Turkish\n\t'860': 'cp860', // Portuguese\n\t'861': 'cp861', // Icelandic\n\t'863': 'cp863', // Canadian - French\n\t'865': 'cp865', // Nordic\n\t'866': 'cp866', // Russian\n\t'869': 'cp869', // Modern Greek\n\t'936': 'cp936', // Simplified Chinese\n\t'1252': 'cp1252' // West European Latin\n};\n\nfunction toIconvLiteEncoding(encodingName: string): string {\n\tconst normalizedEncodingName = encodingName.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\tconst mapped = JSCHARDET_TO_ICONV_ENCODINGS[normalizedEncodingName];\n\n\treturn mapped || normalizedEncodingName;\n}\n\nconst JSCHARDET_TO_ICONV_ENCODINGS: { [name: string]: string } = {\n\t'ibm866': 'cp866',\n\t'big5': 'cp950'\n};\n\nconst UTF8 = 'utf8';\n\nexport async function resolveTerminalEncoding(verbose?: boolean): Promise<string> {\n\tlet rawEncodingPromise: Promise<string | undefined>;\n\n\t// Support a global environment variable to win over other mechanics\n\tconst cliEncodingEnv = process.env['VSCODE_CLI_ENCODING'];\n\tif (cliEncodingEnv) {\n\t\tif (verbose) {\n\t\t\tconsole.log(`Found VSCODE_CLI_ENCODING variable: ${cliEncodingEnv}`);\n\t\t}\n\n\t\trawEncodingPromise = Promise.resolve(cliEncodingEnv);\n\t}\n\n\t// Windows: educated guess\n\telse if (isWindows) {\n\t\trawEncodingPromise = new Promise<string | undefined>(resolve => {\n\t\t\tif (verbose) {\n\t\t\t\tconsole.log('Running \"chcp\" to detect terminal encoding...');\n\t\t\t}\n\n\t\t\texec('chcp', (err, stdout, stderr) => {\n\t\t\t\tif (stdout) {\n\t\t\t\t\tif (verbose) {\n\t\t\t\t\t\tconsole.log(`Output from \"chcp\" command is: ${stdout}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst windowsTerminalEncodingKeys = Object.keys(windowsTerminalEncodings) as Array<keyof typeof windowsTerminalEncodings>;\n\t\t\t\t\tfor (const key of windowsTerminalEncodingKeys) {\n\t\t\t\t\t\tif (stdout.indexOf(key) >= 0) {\n\t\t\t\t\t\t\treturn resolve(windowsTerminalEncodings[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn resolve(undefined);\n\t\t\t});\n\t\t});\n\t}\n\t// Linux/Mac: use \"locale charmap\" command\n\telse {\n\t\trawEncodingPromise = new Promise<string>(resolve => {\n\t\t\tif (verbose) {\n\t\t\t\tconsole.log('Running \"locale charmap\" to detect terminal encoding...');\n\t\t\t}\n\n\t\t\texec('locale charmap', (err, stdout, stderr) => resolve(stdout));\n\t\t});\n\t}\n\n\tconst rawEncoding = await rawEncodingPromise;\n\tif (verbose) {\n\t\tconsole.log(`Detected raw terminal encoding: ${rawEncoding}`);\n\t}\n\n\tif (!rawEncoding || rawEncoding.toLowerCase() === 'utf-8' || rawEncoding.toLowerCase() === UTF8) {\n\t\treturn UTF8;\n\t}\n\n\treturn toIconvLiteEncoding(rawEncoding);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as minimist from 'minimist';\nimport { localize } from 'vs/nls';\nimport { isWindows } from 'vs/base/common/platform';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\n\n/**\n * This code is also used by standalone cli's. Avoid adding any other dependencies.\n */\nconst helpCategories = {\n\to: localize('optionsUpperCase', \"Options\"),\n\te: localize('extensionsManagement', \"Extensions Management\"),\n\tt: localize('troubleshooting', \"Troubleshooting\")\n};\n\nexport interface Option<OptionType> {\n\ttype: OptionType;\n\talias?: string;\n\tdeprecates?: string; // old deprecated id\n\targs?: string | string[];\n\tdescription?: string;\n\tcat?: keyof typeof helpCategories;\n}\n\nexport type OptionDescriptions<T> = {\n\t[P in keyof T]: Option<OptionTypeName<T[P]>>;\n};\n\ntype OptionTypeName<T> =\n\tT extends boolean ? 'boolean' :\n\tT extends string ? 'string' :\n\tT extends string[] ? 'string[]' :\n\tT extends undefined ? 'undefined' :\n\t'unknown';\n\nexport const OPTIONS: OptionDescriptions<Required<NativeParsedArgs>> = {\n\t'diff': { type: 'boolean', cat: 'o', alias: 'd', args: ['file', 'file'], description: localize('diff', \"Compare two files with each other.\") },\n\t'add': { type: 'boolean', cat: 'o', alias: 'a', args: 'folder', description: localize('add', \"Add folder(s) to the last active window.\") },\n\t'goto': { type: 'boolean', cat: 'o', alias: 'g', args: 'file:line[:character]', description: localize('goto', \"Open a file at the path on the specified line and character position.\") },\n\t'new-window': { type: 'boolean', cat: 'o', alias: 'n', description: localize('newWindow', \"Force to open a new window.\") },\n\t'reuse-window': { type: 'boolean', cat: 'o', alias: 'r', description: localize('reuseWindow', \"Force to open a file or folder in an already opened window.\") },\n\t'wait': { type: 'boolean', cat: 'o', alias: 'w', description: localize('wait', \"Wait for the files to be closed before returning.\") },\n\t'waitMarkerFilePath': { type: 'string' },\n\t'locale': { type: 'string', cat: 'o', args: 'locale', description: localize('locale', \"The locale to use (e.g. en-US or zh-TW).\") },\n\t'user-data-dir': { type: 'string', cat: 'o', args: 'dir', description: localize('userDataDir', \"Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.\") },\n\t'help': { type: 'boolean', cat: 'o', alias: 'h', description: localize('help', \"Print usage.\") },\n\n\t'extensions-dir': { type: 'string', deprecates: 'extensionHomePath', cat: 'e', args: 'dir', description: localize('extensionHomePath', \"Set the root path for extensions.\") },\n\t'extensions-download-dir': { type: 'string' },\n\t'builtin-extensions-dir': { type: 'string' },\n\t'list-extensions': { type: 'boolean', cat: 'e', description: localize('listExtensions', \"List the installed extensions.\") },\n\t'show-versions': { type: 'boolean', cat: 'e', description: localize('showVersions', \"Show versions of installed extensions, when using --list-extensions.\") },\n\t'category': { type: 'string', cat: 'e', description: localize('category', \"Filters installed extensions by provided category, when using --list-extensions.\") },\n\t'install-extension': { type: 'string[]', cat: 'e', args: 'extension-id[@version] | path-to-vsix', description: localize('installExtension', \"Installs or updates the extension. The identifier of an extension is always `${publisher}.${name}`. Use `--force` argument to update to latest version. To install a specific version provide `@${version}`. For example: 'vscode.csharp@1.2.3'.\") },\n\t'uninstall-extension': { type: 'string[]', cat: 'e', args: 'extension-id', description: localize('uninstallExtension', \"Uninstalls an extension.\") },\n\t'enable-proposed-api': { type: 'string[]', cat: 'e', args: 'extension-id', description: localize('experimentalApis', \"Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.\") },\n\n\t'version': { type: 'boolean', cat: 't', alias: 'v', description: localize('version', \"Print version.\") },\n\t'verbose': { type: 'boolean', cat: 't', description: localize('verbose', \"Print verbose output (implies --wait).\") },\n\t'log': { type: 'string', cat: 't', args: 'level', description: localize('log', \"Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.\") },\n\t'status': { type: 'boolean', alias: 's', cat: 't', description: localize('status', \"Print process usage and diagnostics information.\") },\n\t'prof-startup': { type: 'boolean', cat: 't', description: localize('prof-startup', \"Run CPU profiler during startup\") },\n\t'prof-append-timers': { type: 'string' },\n\t'prof-startup-prefix': { type: 'string' },\n\t'prof-v8-extensions': { type: 'boolean' },\n\t'disable-extensions': { type: 'boolean', deprecates: 'disableExtensions', cat: 't', description: localize('disableExtensions', \"Disable all installed extensions.\") },\n\t'disable-extension': { type: 'string[]', cat: 't', args: 'extension-id', description: localize('disableExtension', \"Disable an extension.\") },\n\t'sync': { type: 'string', cat: 't', description: localize('turn sync', \"Turn sync on or off\"), args: ['on', 'off'] },\n\n\t'inspect-extensions': { type: 'string', deprecates: 'debugPluginHost', args: 'port', cat: 't', description: localize('inspect-extensions', \"Allow debugging and profiling of extensions. Check the developer tools for the connection URI.\") },\n\t'inspect-brk-extensions': { type: 'string', deprecates: 'debugBrkPluginHost', args: 'port', cat: 't', description: localize('inspect-brk-extensions', \"Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.\") },\n\t'disable-gpu': { type: 'boolean', cat: 't', description: localize('disableGPU', \"Disable GPU hardware acceleration.\") },\n\t'max-memory': { type: 'string', cat: 't', description: localize('maxMemory', \"Max memory size for a window (in Mbytes).\") },\n\t'telemetry': { type: 'boolean', cat: 't', description: localize('telemetry', \"Shows all telemetry events which VS code collects.\") },\n\n\t'remote': { type: 'string' },\n\t'folder-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\t'file-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\n\t'locate-extension': { type: 'string[]' },\n\t'extensionDevelopmentPath': { type: 'string[]' },\n\t'extensionDevelopmentKind': { type: 'string[]' },\n\t'extensionTestsPath': { type: 'string' },\n\t'debugId': { type: 'string' },\n\t'debugRenderer': { type: 'boolean' },\n\t'inspect-search': { type: 'string', deprecates: 'debugSearch' },\n\t'inspect-brk-search': { type: 'string', deprecates: 'debugBrkSearch' },\n\t'export-default-configuration': { type: 'string' },\n\t'install-source': { type: 'string' },\n\t'driver': { type: 'string' },\n\t'logExtensionHostCommunication': { type: 'boolean' },\n\t'skip-release-notes': { type: 'boolean' },\n\t'disable-telemetry': { type: 'boolean' },\n\t'disable-updates': { type: 'boolean' },\n\t'disable-keytar': { type: 'boolean' },\n\t'disable-crash-reporter': { type: 'boolean' },\n\t'crash-reporter-directory': { type: 'string' },\n\t'crash-reporter-id': { type: 'string' },\n\t'skip-add-to-recently-opened': { type: 'boolean' },\n\t'unity-launch': { type: 'boolean' },\n\t'open-url': { type: 'boolean' },\n\t'file-write': { type: 'boolean' },\n\t'file-chmod': { type: 'boolean' },\n\t'driver-verbose': { type: 'boolean' },\n\t'install-builtin-extension': { type: 'string[]' },\n\t'force': { type: 'boolean' },\n\t'do-not-sync': { type: 'boolean' },\n\t'trace': { type: 'boolean' },\n\t'trace-category-filter': { type: 'string' },\n\t'trace-options': { type: 'string' },\n\t'force-user-env': { type: 'boolean' },\n\t'force-disable-user-env': { type: 'boolean' },\n\t'open-devtools': { type: 'boolean' },\n\t'__sandbox': { type: 'boolean' },\n\t'logsPath': { type: 'string' },\n\n\t// chromium flags\n\t'no-proxy-server': { type: 'boolean' },\n\t'proxy-server': { type: 'string' },\n\t'proxy-bypass-list': { type: 'string' },\n\t'proxy-pac-url': { type: 'string' },\n\t'js-flags': { type: 'string' }, // chrome js flags\n\t'inspect': { type: 'string' },\n\t'inspect-brk': { type: 'string' },\n\t'nolazy': { type: 'boolean' }, // node inspect\n\t'force-device-scale-factor': { type: 'string' },\n\t'force-renderer-accessibility': { type: 'boolean' },\n\t'ignore-certificate-errors': { type: 'boolean' },\n\t'allow-insecure-localhost': { type: 'boolean' },\n\t'log-net-log': { type: 'string' },\n\t'vmodule': { type: 'string' },\n\t'_urls': { type: 'string[]' },\n\n\t_: { type: 'string[]' } // main arguments\n};\n\nexport interface ErrorReporter {\n\tonUnknownOption(id: string): void;\n\tonMultipleValues(id: string, usedValue: string): void;\n}\n\nconst ignoringReporter: ErrorReporter = {\n\tonUnknownOption: () => { },\n\tonMultipleValues: () => { }\n};\n\nexport function parseArgs<T>(args: string[], options: OptionDescriptions<T>, errorReporter: ErrorReporter = ignoringReporter): T {\n\tconst alias: { [key: string]: string } = {};\n\tconst string: string[] = [];\n\tconst boolean: string[] = [];\n\tfor (let optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\talias[optionId] = o.alias;\n\t\t}\n\n\t\tif (o.type === 'string' || o.type === 'string[]') {\n\t\t\tstring.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tstring.push(o.deprecates);\n\t\t\t}\n\t\t} else if (o.type === 'boolean') {\n\t\t\tboolean.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tboolean.push(o.deprecates);\n\t\t\t}\n\t\t}\n\t}\n\t// remove aliases to avoid confusion\n\tconst parsedArgs = minimist(args, { string, boolean, alias });\n\n\tconst cleanedArgs: any = {};\n\tconst remainingArgs: any = parsedArgs;\n\n\t// https://github.com/microsoft/vscode/issues/58177, https://github.com/microsoft/vscode/issues/106617\n\tcleanedArgs._ = parsedArgs._.map(arg => String(arg)).filter(arg => arg.length > 0);\n\n\tdelete remainingArgs._;\n\n\tfor (let optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\tdelete remainingArgs[o.alias];\n\t\t}\n\n\t\tlet val = remainingArgs[optionId];\n\t\tif (o.deprecates && remainingArgs.hasOwnProperty(o.deprecates)) {\n\t\t\tif (!val) {\n\t\t\t\tval = remainingArgs[o.deprecates];\n\t\t\t}\n\t\t\tdelete remainingArgs[o.deprecates];\n\t\t}\n\n\t\tif (typeof val !== 'undefined') {\n\t\t\tif (o.type === 'string[]') {\n\t\t\t\tif (val && !Array.isArray(val)) {\n\t\t\t\t\tval = [val];\n\t\t\t\t}\n\t\t\t} else if (o.type === 'string') {\n\t\t\t\tif (Array.isArray(val)) {\n\t\t\t\t\tval = val.pop(); // take the last\n\t\t\t\t\terrorReporter.onMultipleValues(optionId, val);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcleanedArgs[optionId] = val;\n\t\t}\n\t\tdelete remainingArgs[optionId];\n\t}\n\n\tfor (let key in remainingArgs) {\n\t\terrorReporter.onUnknownOption(key);\n\t}\n\n\treturn cleanedArgs;\n}\n\nfunction formatUsage(optionId: string, option: Option<any>) {\n\tlet args = '';\n\tif (option.args) {\n\t\tif (Array.isArray(option.args)) {\n\t\t\targs = ` <${option.args.join('> <')}>`;\n\t\t} else {\n\t\t\targs = ` <${option.args}>`;\n\t\t}\n\t}\n\tif (option.alias) {\n\t\treturn `-${option.alias} --${optionId}${args}`;\n\t}\n\treturn `--${optionId}${args}`;\n}\n\n// exported only for testing\nexport function formatOptions(options: OptionDescriptions<any>, columns: number): string[] {\n\tlet maxLength = 0;\n\tlet usageTexts: [string, string][] = [];\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tconst usageText = formatUsage(optionId, o);\n\t\tmaxLength = Math.max(maxLength, usageText.length);\n\t\tusageTexts.push([usageText, o.description!]);\n\t}\n\tlet argLength = maxLength + 2/*left padding*/ + 1/*right padding*/;\n\tif (columns - argLength < 25) {\n\t\t// Use a condensed version on narrow terminals\n\t\treturn usageTexts.reduce<string[]>((r, ut) => r.concat([`  ${ut[0]}`, `      ${ut[1]}`]), []);\n\t}\n\tlet descriptionColumns = columns - argLength - 1;\n\tlet result: string[] = [];\n\tfor (const ut of usageTexts) {\n\t\tlet usage = ut[0];\n\t\tlet wrappedDescription = wrapText(ut[1], descriptionColumns);\n\t\tlet keyPadding = indent(argLength - usage.length - 2/*left padding*/);\n\t\tresult.push('  ' + usage + keyPadding + wrappedDescription[0]);\n\t\tfor (let i = 1; i < wrappedDescription.length; i++) {\n\t\t\tresult.push(indent(argLength) + wrappedDescription[i]);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction indent(count: number): string {\n\treturn ' '.repeat(count);\n}\n\nfunction wrapText(text: string, columns: number): string[] {\n\tlet lines: string[] = [];\n\twhile (text.length) {\n\t\tlet index = text.length < columns ? text.length : text.lastIndexOf(' ', columns);\n\t\tlet line = text.slice(0, index).trim();\n\t\ttext = text.slice(index);\n\t\tlines.push(line);\n\t}\n\treturn lines;\n}\n\nexport function buildHelpMessage(productName: string, executableName: string, version: string, options: OptionDescriptions<any>, isPipeSupported = true): string {\n\tconst columns = (process.stdout).isTTY && (process.stdout).columns || 80;\n\n\tlet help = [`${productName} ${version}`];\n\thelp.push('');\n\thelp.push(`${localize('usage', \"Usage\")}: ${executableName} [${localize('options', \"options\")}][${localize('paths', 'paths')}...]`);\n\thelp.push('');\n\tif (isPipeSupported) {\n\t\tif (isWindows) {\n\t\t\thelp.push(localize('stdinWindows', \"To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')\", executableName));\n\t\t} else {\n\t\t\thelp.push(localize('stdinUnix', \"To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')\", executableName));\n\t\t}\n\t\thelp.push('');\n\t}\n\tconst optionsByCategory: { [P in keyof typeof helpCategories]?: OptionDescriptions<any> } = {};\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.description && o.cat) {\n\t\t\tlet optionsByCat = optionsByCategory[o.cat];\n\t\t\tif (!optionsByCat) {\n\t\t\t\toptionsByCategory[o.cat] = optionsByCat = {};\n\t\t\t}\n\t\t\toptionsByCat[optionId] = o;\n\t\t}\n\t}\n\n\tfor (let helpCategoryKey in optionsByCategory) {\n\t\tconst key = <keyof typeof helpCategories>helpCategoryKey;\n\n\t\tlet categoryOptions = optionsByCategory[key];\n\t\tif (categoryOptions) {\n\t\t\thelp.push(helpCategories[key]);\n\t\t\thelp.push(...formatOptions(categoryOptions, columns));\n\t\t\thelp.push('');\n\t\t}\n\t}\n\treturn help.join('\\n');\n}\n\nexport function buildVersionMessage(version: string | undefined, commit: string | undefined): string {\n\treturn `${version || localize('unknownVersion', \"Unknown version\")}\\n${commit || localize('unknownCommit', \"Unknown commit\")}\\n${process.arch}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * This code is also used by standalone cli's. Avoid adding dependencies to keep the size of the cli small.\n */\nimport * as paths from 'vs/base/common/path';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport { resolveTerminalEncoding } from 'vs/base/node/terminalEncoding';\n\nexport function hasStdinWithoutTty() {\n\ttry {\n\t\treturn !process.stdin.isTTY; // Via https://twitter.com/MylesBorins/status/782009479382626304\n\t} catch (error) {\n\t\t// Windows workaround for https://github.com/nodejs/node/issues/11656\n\t}\n\treturn false;\n}\n\nexport function stdinDataListener(durationinMs: number): Promise<boolean> {\n\treturn new Promise(resolve => {\n\t\tconst dataListener = () => resolve(true);\n\n\t\t// wait for 1s maximum...\n\t\tsetTimeout(() => {\n\t\t\tprocess.stdin.removeListener('data', dataListener);\n\n\t\t\tresolve(false);\n\t\t}, durationinMs);\n\n\t\t// ...but finish early if we detect data\n\t\tprocess.stdin.once('data', dataListener);\n\t});\n}\n\nexport function getStdinFilePath(): string {\n\treturn paths.join(os.tmpdir(), `code-stdin-${Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 3)}.txt`);\n}\n\nexport async function readFromStdin(targetPath: string, verbose: boolean): Promise<void> {\n\n\t// open tmp file for writing\n\tconst stdinFileStream = fs.createWriteStream(targetPath);\n\n\tlet encoding = await resolveTerminalEncoding(verbose);\n\n\tconst iconv = await import('iconv-lite-umd');\n\tif (!iconv.encodingExists(encoding)) {\n\t\tconsole.log(`Unsupported terminal encoding: ${encoding}, falling back to UTF-8.`);\n\t\tencoding = 'utf8';\n\t}\n\n\t// Pipe into tmp file using terminals encoding\n\tconst decoder = iconv.getDecoder(encoding);\n\tprocess.stdin.on('data', chunk => stdinFileStream.write(decoder.write(chunk)));\n\tprocess.stdin.on('end', () => {\n\t\tconst end = decoder.end();\n\t\tif (typeof end === 'string') {\n\t\t\tstdinFileStream.write(end);\n\t\t}\n\t\tstdinFileStream.end();\n\t});\n\tprocess.stdin.on('error', error => stdinFileStream.destroy(error));\n\tprocess.stdin.on('close', () => stdinFileStream.close());\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { tmpdir } from 'os';\nimport { join } from 'vs/base/common/path';\n\nexport function createWaitMarkerFile(verbose?: boolean): string | undefined {\n\tconst randomWaitMarkerPath = join(tmpdir(), Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10));\n\n\ttry {\n\t\tfs.writeFileSync(randomWaitMarkerPath, ''); // use built-in fs to avoid dragging in more dependencies\n\t\tif (verbose) {\n\t\t\tconsole.log(`Marker file for --wait created: ${randomWaitMarkerPath}`);\n\t\t}\n\t\treturn randomWaitMarkerPath;\n\t} catch (err) {\n\t\tif (verbose) {\n\t\t\tconsole.error(`Failed to create marker file for --wait: ${err}`);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceCollection } from './serviceCollection';\nimport * as descriptors from './descriptors';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n\tget<T>(id: ServiceIdentifier<T>, isOptional: typeof optional): T | undefined;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n\n/**\n * Mark a service dependency as optional.\n */\nexport function optional<T>(serviceIdentifier: ServiceIdentifier<T>) {\n\n\treturn function (target: Function, key: string, index: number) {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@optional-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(serviceIdentifier, target, index, true);\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { sep } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { IExpression } from 'vs/base/common/glob';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Event } from 'vs/base/common/event';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isNumber, isUndefinedOrNull } from 'vs/base/common/types';\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { TernarySearchTree } from 'vs/base/common/map';\n\n//#region file service & providers\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Returns a file system provider for a certain scheme.\n\t */\n\tgetProvider(scheme: string): IFileSystemProvider | undefined;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource.\n\t */\n\tcanHandleResource(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * List the schemes and capabilies for registered file system providers\n\t */\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities }>\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: Partial<FileDeleteOptions>): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: Partial<FileDeleteOptions>): Promise<Error | true>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\n\t/**\n\t * Set to `true` to overwrite a file if it exists. Will\n\t * throw an error otherwise if the file does exist.\n\t */\n\treadonly overwrite: boolean;\n}\n\nexport interface FileUnlockOptions {\n\n\t/**\n\t * Set to `true` to try to remove any write locks the file might\n\t * have. A file that is write locked will throw an error for any\n\t * attempt to write to unless `unlock: true` is provided.\n\t */\n\treadonly unlock: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions extends FileOverwriteOptions, FileUnlockOptions {\n\n\t/**\n\t * Set to `true` to create a file when it does not exist. Will\n\t * throw an error otherwise if the file does not exist.\n\t */\n\treadonly create: boolean;\n}\n\nexport type FileOpenOptions = FileOpenForReadOptions | FileOpenForWriteOptions;\n\nexport function isFileOpenForWriteOptions(options: FileOpenOptions): options is FileOpenForWriteOptions {\n\treturn options.create === true;\n}\n\nexport interface FileOpenForReadOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading only.\n\t */\n\treadonly create: false;\n}\n\nexport interface FileOpenForWriteOptions extends FileUnlockOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading and writing.\n\t */\n\treadonly create: true;\n}\n\nexport interface FileDeleteOptions {\n\n\t/**\n\t * Set to `true` to recursively delete any children of the file. This\n\t * only applies to folders and can lead to an error unless provided\n\t * if the folder is not empty.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * Set to `true` to attempt to move the file to trash\n\t * instead of deleting it permanently from disk. This\n\t * option maybe not be supported on all providers.\n\t */\n\treadonly useTrash: boolean;\n}\n\nexport enum FileType {\n\n\t/**\n\t * File is unknown (neither file, directory nor symbolic link).\n\t */\n\tUnknown = 0,\n\n\t/**\n\t * File is a normal file.\n\t */\n\tFile = 1,\n\n\t/**\n\t * File is a directory.\n\t */\n\tDirectory = 2,\n\n\t/**\n\t * File is a symbolic link.\n\t *\n\t * Note: even when the file is a symbolic link, you can test for\n\t * `FileType.File` and `FileType.Directory` to know the type of\n\t * the target the link points to.\n\t */\n\tSymbolicLink = 64\n}\n\nexport interface IStat {\n\n\t/**\n\t * The file type.\n\t */\n\treadonly type: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\treadonly mtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\treadonly ctime: number;\n\n\t/**\n\t * The size of the file in bytes.\n\t */\n\tsize: number;\n}\n\nexport interface IWatchOptions {\n\n\t/**\n\t * Set to `true` to watch for changes recursively in a folder\n\t * and all of its children.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * A set of paths to exclude from watching.\n\t */\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\n\t/**\n\t * Provider supports unbuffered read/write.\n\t */\n\tFileReadWrite = 1 << 1,\n\n\t/**\n\t * Provider supports open/read/write/close low level file operations.\n\t */\n\tFileOpenReadWriteClose = 1 << 2,\n\n\t/**\n\t * Provider supports stream based reading.\n\t */\n\tFileReadStream = 1 << 4,\n\n\t/**\n\t * Provider supports copy operation.\n\t */\n\tFileFolderCopy = 1 << 3,\n\n\t/**\n\t * Provider is path case sensitive.\n\t */\n\tPathCaseSensitive = 1 << 10,\n\n\t/**\n\t * All files of the provider are readonly.\n\t */\n\tReadonly = 1 << 11,\n\n\t/**\n\t * Provider supports to delete via trash.\n\t */\n\tTrash = 1 << 12,\n\n\t/**\n\t * Provider support to unlock files for writing.\n\t */\n\tFileWriteUnlock = 1 << 13\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>; // TODO@bpasero remove once file watchers are solid\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tFileWriteLocked = 'EntryWriteLocked',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, public readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked: return FileSystemProviderErrorCode.FileWriteLocked;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked:\n\t\t\treturn FileOperationResult.FILE_WRITE_LOCKED;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\treadonly added: boolean;\n\treadonly scheme: string;\n\treadonly provider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\treadonly provider: IFileSystemProvider;\n\treadonly scheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\treadonly scheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(public readonly resource: URI, public readonly operation: FileOperation, public readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED,\n\tADDED,\n\tDELETED\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport class FileChangesEvent {\n\n\t/**\n\t * @deprecated use the `contains()` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\treadonly changes: readonly IFileChange[];\n\n\tprivate readonly added: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly updated: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly deleted: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\n\tconstructor(changes: readonly IFileChange[], private readonly ignorePathCasing: boolean) {\n\t\tthis.changes = changes;\n\n\t\tfor (const change of changes) {\n\t\t\tswitch (change.type) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tif (!this.added) {\n\t\t\t\t\t\tthis.added = TernarySearchTree.forUris<IFileChange>(() => this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.added.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tif (!this.updated) {\n\t\t\t\t\t\tthis.updated = TernarySearchTree.forUris<IFileChange>(() => this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.updated.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tif (!this.deleted) {\n\t\t\t\t\t\tthis.deleted = TernarySearchTree.forUris<IFileChange>(() => this.ignorePathCasing);\n\t\t\t\t\t}\n\t\t\t\t\tthis.deleted.set(change.resource, change);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Find out if the file change events match the provided resource.\n\t *\n\t * Note: when passing `FileChangeType.DELETED`, we consider a match\n\t * also when the parent of the resource got deleted.\n\t */\n\tcontains(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: false }, ...types);\n\t}\n\n\t/**\n\t * Find out if the file change events either match the provided\n\t * resource, or contain a child of this resource.\n\t */\n\taffects(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: true }, ...types);\n\t}\n\n\tprivate doContains(resource: URI, options: { includeChildren: boolean }, ...types: FileChangeType[]): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasTypesFilter = types.length > 0;\n\n\t\t// Added\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.ADDED)) {\n\t\t\tif (this.added?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.added?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Updated\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.UPDATED)) {\n\t\t\tif (this.updated?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.updated?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Deleted\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.DELETED)) {\n\t\t\tif (this.deleted?.findSubstr(resource) /* deleted also considers parent folders */) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.deleted?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetAdded(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.ADDED);\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn !!this.added;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetDeleted(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.DELETED);\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn !!this.deleted;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tgetUpdated(): IFileChange[] {\n\t\treturn this.getOfType(FileChangeType.UPDATED);\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn !!this.updated;\n\t}\n\n\tprivate getOfType(type: FileChangeType): IFileChange[] {\n\t\tconst changes: IFileChange[] = [];\n\n\t\tconst eventsForType = type === FileChangeType.ADDED ? this.added : type === FileChangeType.UPDATED ? this.updated : this.deleted;\n\t\tif (eventsForType) {\n\t\t\tfor (const [, change] of eventsForType) {\n\t\t\t\tchanges.push(change);\n\t\t\t}\n\t\t}\n\n\t\treturn changes;\n\t}\n\n\t/**\n\t * @deprecated use the `contains()` method to efficiently find out if the event\n\t * relates to a given resource. this method ensures:\n\t * - that there is no expensive lookup needed by using a `TernarySearchTree`\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tfilter(filterFn: (change: IFileChange) => boolean): FileChangesEvent {\n\t\treturn new FileChangesEvent(this.changes.filter(change => filterFn(change)), this.ignorePathCasing);\n\t}\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly size?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly ctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IBaseStatWithMetadata extends Required<IBaseStat> { }\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\treadonly isFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\treadonly isDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link. Note: even when the\n\t * file is a symbolic link, you can test for `FileType.File`\n\t * and `FileType.Directory` to know the type of the target\n\t * the link points to.\n\t */\n\treadonly isSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\treadonly mtime: number;\n\treadonly ctime: number;\n\treadonly etag: string;\n\treadonly size: number;\n\treadonly children?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\treadonly stat?: IFileStat;\n\treadonly success: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\treadonly stat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\treadonly value: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\treadonly value: VSBufferReadableStream;\n}\n\nexport interface IBaseReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IReadFileStreamOptions extends IBaseReadFileOptions { }\n\nexport interface IReadFileOptions extends IBaseReadFileOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `readFile` method is not running in parallel with\n\t * any `write` operations in the same process.\n\t *\n\t * Typically you should not need to use this flag but if\n\t * for example you are quickly reading a file right after\n\t * a file event occured and the file changes a lot, there\n\t * is a chance that a read returns an empty or partial file\n\t * because a pending write has not finished yet.\n\t *\n\t * Note: this does not prevent the file from being written\n\t * to from a different process. If you need such atomic\n\t * operations, you better use a real database as storage.\n\t */\n\treadonly atomic?: boolean;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * Whether to attempt to unlock a file before writing.\n\t */\n\treadonly unlock?: boolean;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(message: string, public fileOperationResult: FileOperationResult, public options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions) {\n\t\tsuper(message);\n\t}\n\n\tstatic isFileOperationError(obj: unknown): obj is FileOperationError {\n\t\treturn obj instanceof Error && !isUndefinedOrNull((obj as FileOperationError).fileOperationResult);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_WRITE_LOCKED,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\n//#endregion\n\n//#region Settings\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\n//#endregion\n\n//#region Utilities\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport async function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.canHandleResource(URI.from({ scheme: file.scheme }))) {\n\t\treturn;\n\t}\n\n\treturn new Promise(resolve => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Native only: limits for memory sizes\n */\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class ByteSize {\n\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = ByteSize.KB * ByteSize.KB;\n\tstatic readonly GB = ByteSize.MB * ByteSize.KB;\n\tstatic readonly TB = ByteSize.GB * ByteSize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (!isNumber(size)) {\n\t\t\tsize = 0;\n\t\t}\n\n\t\tif (size < ByteSize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size.toFixed(0));\n\t\t}\n\n\t\tif (size < ByteSize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / ByteSize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / ByteSize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / ByteSize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / ByteSize.TB).toFixed(2));\n\t}\n}\n\n// Native only: Arch limits\n\nexport interface IArchLimits {\n\treadonly maxFileSize: number;\n\treadonly maxHeapSize: number;\n}\n\nexport const enum Arch {\n\tIA32,\n\tOTHER\n}\n\nexport function getPlatformLimits(arch: Arch): IArchLimits {\n\treturn {\n\t\tmaxFileSize: arch === Arch.IA32 ? 300 * ByteSize.MB : 16 * ByteSize.GB,  // https://github.com/microsoft/vscode/issues/30180\n\t\tmaxHeapSize: arch === Arch.IA32 ? 700 * ByteSize.MB : 2 * 700 * ByteSize.MB, // https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\n\t};\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { localize } from 'vs/nls';\nimport { MIN_MAX_MEMORY_SIZE_MB } from 'vs/platform/files/common/files';\nimport { parseArgs, ErrorReporter, OPTIONS } from 'vs/platform/environment/node/argv';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\nfunction parseAndValidate(cmdLineArgs: string[], reportWarnings: boolean): NativeParsedArgs {\n\tconst errorReporter: ErrorReporter = {\n\t\tonUnknownOption: (id) => {\n\t\t\tconsole.warn(localize('unknownOption', \"Warning: '{0}' is not in the list of known options, but still passed to Electron/Chromium.\", id));\n\t\t},\n\t\tonMultipleValues: (id, val) => {\n\t\t\tconsole.warn(localize('multipleValues', \"Option '{0}' is defined more than once. Using value '{1}.'\", id, val));\n\t\t}\n\t};\n\n\tconst args = parseArgs(cmdLineArgs, OPTIONS, reportWarnings ? errorReporter : undefined);\n\tif (args.goto) {\n\t\targs._.forEach(arg => assert(/^(\\w:)?[^:]+(:\\d*){0,2}$/.test(arg), localize('gotoValidation', \"Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`.\")));\n\t}\n\n\tif (args['max-memory']) {\n\t\tassert(parseInt(args['max-memory']) >= MIN_MAX_MEMORY_SIZE_MB, `The max-memory argument cannot be specified lower than ${MIN_MAX_MEMORY_SIZE_MB} MB.`);\n\t}\n\n\treturn args;\n}\n\nfunction stripAppPath(argv: string[]): string[] | undefined {\n\tconst index = argv.findIndex(a => !/^-/.test(a));\n\n\tif (index > -1) {\n\t\treturn [...argv.slice(0, index), ...argv.slice(index + 1)];\n\t}\n\treturn undefined;\n}\n\n/**\n * Use this to parse raw code process.argv such as: `Electron . --verbose --wait`\n */\nexport function parseMainProcessArgv(processArgv: string[]): NativeParsedArgs {\n\tlet [, ...args] = processArgv;\n\n\t// If dev, remove the first non-option argument: it's the app location\n\tif (process.env['VSCODE_DEV']) {\n\t\targs = stripAppPath(args) || [];\n\t}\n\n\t// If called from CLI, don't report warnings as they are already reported.\n\tconst reportWarnings = !isLaunchedFromCli(process.env);\n\treturn parseAndValidate(args, reportWarnings);\n}\n\n/**\n * Use this to parse raw code CLI process.argv such as: `Electron cli.js . --verbose --wait`\n */\nexport function parseCLIProcessArgv(processArgv: string[]): NativeParsedArgs {\n\tconst [, , ...args] = processArgv; // remove the first non-option argument: it's always the app location\n\n\treturn parseAndValidate(args, true);\n}\n\nexport function addArg(argv: string[], ...args: string[]): string[] {\n\tconst endOfArgsMarkerIndex = argv.indexOf('--');\n\tif (endOfArgsMarkerIndex === -1) {\n\t\targv.push(...args);\n\t} else {\n\t\t// if the we have an argument \"--\" (end of argument marker)\n\t\t// we cannot add arguments at the end. rather, we add\n\t\t// arguments before the \"--\" marker.\n\t\targv.splice(endOfArgsMarkerIndex, 0, ...args);\n\t}\n\n\treturn argv;\n}\n\nexport function isLaunchedFromCli(env: IProcessEnvironment): boolean {\n\treturn env['VSCODE_CLI'] === '1';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess } from 'vs/base/common/network';\nimport { isWeb, globals } from 'vs/base/common/platform';\nimport { env } from 'vs/base/common/process';\nimport { dirname, joinPath } from 'vs/base/common/resources';\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { ISandboxConfiguration } from 'vs/base/parts/sandbox/common/sandboxTypes';\n\nlet product: IProductConfiguration;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined') {\n\tconst configuration: ISandboxConfiguration | undefined = globals.vscode.context.configuration();\n\tif (configuration) {\n\t\tproduct = configuration.product;\n\t} else {\n\t\tthrow new Error('Sandbox: unable to resolve product configuration from preload script.');\n\t}\n}\n\n// Native node.js environment\nelse if (typeof require?.__$__nodeRequire === 'function') {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = dirname(FileAccess.asFileUri('', require));\n\n\tproduct = require.__$__nodeRequire(joinPath(rootPath, 'product.json').fsPath);\n\tconst pkg = require.__$__nodeRequire(joinPath(rootPath, 'package.json').fsPath) as { version: string; };\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tObject.assign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`\n\t\t});\n\t}\n\n\tObject.assign(product, {\n\t\tversion: pkg.version\n\t});\n}\n\n// Web environment or unknown\nelse {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tObject.assign(product, {\n\t\t\tversion: '1.56.0-dev',\n\t\t\tnameShort: isWeb ? 'Code Web - OSS Dev' : 'Code - OSS Dev',\n\t\t\tnameLong: isWeb ? 'Code Web - OSS Dev' : 'Code - OSS Dev',\n\t\t\tapplicationName: 'code-oss',\n\t\t\tdataFolderName: '.vscode-oss',\n\t\t\turlProtocol: 'code-oss',\n\t\t\treportIssueUrl: 'https://github.com/microsoft/vscode/issues/new',\n\t\t\tlicenseName: 'MIT',\n\t\t\tlicenseUrl: 'https://github.com/microsoft/vscode/blob/main/LICENSE.txt',\n\t\t\textensionAllowedProposedApi: [\n\t\t\t\t'ms-vscode.vscode-js-profile-flame',\n\t\t\t\t'ms-vscode.vscode-js-profile-table',\n\t\t\t\t'ms-vscode.github-browser',\n\t\t\t\t'ms-vscode.github-richnav',\n\t\t\t\t'ms-vscode.remotehub',\n\t\t\t\t'ms-vscode.remotehub-insiders'\n\t\t\t],\n\t\t});\n\t}\n}\n\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { homedir } from 'os';\nimport { existsSync, statSync, unlinkSync, chmodSync, truncateSync, readFileSync } from 'fs';\nimport { spawn, ChildProcess, SpawnOptions } from 'child_process';\nimport { buildHelpMessage, buildVersionMessage, OPTIONS } from 'vs/platform/environment/node/argv';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { parseCLIProcessArgv, addArg } from 'vs/platform/environment/node/argvHelper';\nimport { createWaitMarkerFile } from 'vs/platform/environment/node/wait';\nimport product from 'vs/platform/product/common/product';\nimport { isAbsolute, join } from 'vs/base/common/path';\nimport { whenDeleted, writeFileSync } from 'vs/base/node/pfs';\nimport { findFreePort, randomPort } from 'vs/base/node/ports';\nimport { isWindows, isLinux, IProcessEnvironment } from 'vs/base/common/platform';\nimport type { ProfilingSession, Target } from 'v8-inspect-profiler';\nimport { isString } from 'vs/base/common/types';\nimport { hasStdinWithoutTty, stdinDataListener, getStdinFilePath, readFromStdin } from 'vs/platform/environment/node/stdin';\n\nfunction shouldSpawnCliProcess(argv: NativeParsedArgs): boolean {\n\treturn !!argv['install-source']\n\t\t|| !!argv['list-extensions']\n\t\t|| !!argv['install-extension']\n\t\t|| !!argv['uninstall-extension']\n\t\t|| !!argv['locate-extension']\n\t\t|| !!argv['telemetry'];\n}\n\ninterface IMainCli {\n\tmain: (argv: NativeParsedArgs) => Promise<void>;\n}\n\nexport async function main(argv: string[]): Promise<any> {\n\tlet args: NativeParsedArgs;\n\n\ttry {\n\t\targs = parseCLIProcessArgv(argv);\n\t} catch (err) {\n\t\tconsole.error(err.message);\n\t\treturn;\n\t}\n\n\t// Help\n\tif (args.help) {\n\t\tconst executable = `${product.applicationName}${isWindows ? '.exe' : ''}`;\n\t\tconsole.log(buildHelpMessage(product.nameLong, executable, product.version, OPTIONS));\n\t}\n\n\t// Version Info\n\telse if (args.version) {\n\t\tconsole.log(buildVersionMessage(product.version, product.commit));\n\t}\n\n\t// Extensions Management\n\telse if (shouldSpawnCliProcess(args)) {\n\t\tconst cli = await new Promise<IMainCli>((c, e) => require(['vs/code/node/cliProcessMain'], c, e));\n\t\tawait cli.main(args);\n\n\t\treturn;\n\t}\n\n\t// Write File\n\telse if (args['file-write']) {\n\t\tconst source = args._[0];\n\t\tconst target = args._[1];\n\n\t\t// Validate\n\t\tif (\n\t\t\t!source || !target || source === target ||\t\t\t\t// make sure source and target are provided and are not the same\n\t\t\t!isAbsolute(source) || !isAbsolute(target) ||\t\t\t// make sure both source and target are absolute paths\n\t\t\t!existsSync(source) || !statSync(source).isFile() ||\t// make sure source exists as file\n\t\t\t!existsSync(target) || !statSync(target).isFile()\t\t// make sure target exists as file\n\t\t) {\n\t\t\tthrow new Error('Using --file-write with invalid arguments.');\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Check for readonly status and chmod if so if we are told so\n\t\t\tlet targetMode: number = 0;\n\t\t\tlet restoreMode = false;\n\t\t\tif (!!args['file-chmod']) {\n\t\t\t\ttargetMode = statSync(target).mode;\n\t\t\t\tif (!(targetMode & 0o200 /* File mode indicating writable by owner */)) {\n\t\t\t\t\tchmodSync(target, targetMode | 0o200);\n\t\t\t\t\trestoreMode = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Write source to target\n\t\t\tconst data = readFileSync(source);\n\t\t\tif (isWindows) {\n\t\t\t\t// On Windows we use a different strategy of saving the file\n\t\t\t\t// by first truncating the file and then writing with r+ mode.\n\t\t\t\t// This helps to save hidden files on Windows\n\t\t\t\t// (see https://github.com/microsoft/vscode/issues/931) and\n\t\t\t\t// prevent removing alternate data streams\n\t\t\t\t// (see https://github.com/microsoft/vscode/issues/6363)\n\t\t\t\ttruncateSync(target, 0);\n\t\t\t\twriteFileSync(target, data, { flag: 'r+' });\n\t\t\t} else {\n\t\t\t\twriteFileSync(target, data);\n\t\t\t}\n\n\t\t\t// Restore previous mode as needed\n\t\t\tif (restoreMode) {\n\t\t\t\tchmodSync(target, targetMode);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\terror.message = `Error using --file-write: ${error.message}`;\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t// Just Code\n\telse {\n\t\tconst env: IProcessEnvironment = {\n\t\t\t...process.env,\n\t\t\t'ELECTRON_NO_ATTACH_CONSOLE': '1'\n\t\t};\n\n\t\tdelete env['ELECTRON_RUN_AS_NODE'];\n\n\t\tconst processCallbacks: ((child: ChildProcess) => Promise<void>)[] = [];\n\n\t\tconst verbose = args.verbose || args.status;\n\t\tif (verbose) {\n\t\t\tenv['ELECTRON_ENABLE_LOGGING'] = '1';\n\n\t\t\tprocessCallbacks.push(async child => {\n\t\t\t\tchild.stdout!.on('data', (data: Buffer) => console.log(data.toString('utf8').trim()));\n\t\t\t\tchild.stderr!.on('data', (data: Buffer) => console.log(data.toString('utf8').trim()));\n\n\t\t\t\tawait new Promise<void>(resolve => child.once('exit', () => resolve()));\n\t\t\t});\n\t\t}\n\n\t\tconst hasReadStdinArg = args._.some(a => a === '-');\n\t\tif (hasReadStdinArg) {\n\t\t\t// remove the \"-\" argument when we read from stdin\n\t\t\targs._ = args._.filter(a => a !== '-');\n\t\t\targv = argv.filter(a => a !== '-');\n\t\t}\n\n\t\tlet stdinFilePath: string | undefined;\n\t\tif (hasStdinWithoutTty()) {\n\n\t\t\t// Read from stdin: we require a single \"-\" argument to be passed in order to start reading from\n\t\t\t// stdin. We do this because there is no reliable way to find out if data is piped to stdin. Just\n\t\t\t// checking for stdin being connected to a TTY is not enough (https://github.com/microsoft/vscode/issues/40351)\n\n\t\t\tif (hasReadStdinArg) {\n\t\t\t\tstdinFilePath = getStdinFilePath();\n\n\t\t\t\t// returns a file path where stdin input is written into (write in progress).\n\t\t\t\ttry {\n\t\t\t\t\treadFromStdin(stdinFilePath, !!verbose); // throws error if file can not be written\n\n\t\t\t\t\t// Make sure to open tmp file\n\t\t\t\t\taddArg(argv, stdinFilePath);\n\n\t\t\t\t\t// Enable --wait to get all data and ignore adding this to history\n\t\t\t\t\taddArg(argv, '--wait');\n\t\t\t\t\taddArg(argv, '--skip-add-to-recently-opened');\n\t\t\t\t\targs.wait = true;\n\n\t\t\t\t\tconsole.log(`Reading from stdin via: ${stdinFilePath}`);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log(`Failed to create file to read via stdin: ${e.toString()}`);\n\t\t\t\t\tstdinFilePath = undefined;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// If the user pipes data via stdin but forgot to add the \"-\" argument, help by printing a message\n\t\t\t\t// if we detect that data flows into via stdin after a certain timeout.\n\t\t\t\tprocessCallbacks.push(_ => stdinDataListener(1000).then(dataReceived => {\n\t\t\t\t\tif (dataReceived) {\n\t\t\t\t\t\tif (isWindows) {\n\t\t\t\t\t\t\tconsole.log(`Run with '${product.applicationName} -' to read output from another program (e.g. 'echo Hello World | ${product.applicationName} -').`);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.log(`Run with '${product.applicationName} -' to read from stdin (e.g. 'ps aux | grep code | ${product.applicationName} -').`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\n\t\t// If we are started with --wait create a random temporary file\n\t\t// and pass it over to the starting instance. We can use this file\n\t\t// to wait for it to be deleted to monitor that the edited file\n\t\t// is closed and then exit the waiting process.\n\t\tlet waitMarkerFilePath: string | undefined;\n\t\tif (args.wait) {\n\t\t\twaitMarkerFilePath = createWaitMarkerFile(verbose);\n\t\t\tif (waitMarkerFilePath) {\n\t\t\t\taddArg(argv, '--waitMarkerFilePath', waitMarkerFilePath);\n\t\t\t}\n\t\t}\n\n\t\t// If we have been started with `--prof-startup` we need to find free ports to profile\n\t\t// the main process, the renderer, and the extension host. We also disable v8 cached data\n\t\t// to get better profile traces. Last, we listen on stdout for a signal that tells us to\n\t\t// stop profiling.\n\t\tif (args['prof-startup']) {\n\t\t\tconst portMain = await findFreePort(randomPort(), 10, 3000);\n\t\t\tconst portRenderer = await findFreePort(portMain + 1, 10, 3000);\n\t\t\tconst portExthost = await findFreePort(portRenderer + 1, 10, 3000);\n\n\t\t\t// fail the operation when one of the ports couldn't be accquired.\n\t\t\tif (portMain * portRenderer * portExthost === 0) {\n\t\t\t\tthrow new Error('Failed to find free ports for profiler. Make sure to shutdown all instances of the editor first.');\n\t\t\t}\n\n\t\t\tconst filenamePrefix = join(homedir(), 'prof-' + Math.random().toString(16).slice(-4));\n\n\t\t\taddArg(argv, `--inspect-brk=${portMain}`);\n\t\t\taddArg(argv, `--remote-debugging-port=${portRenderer}`);\n\t\t\taddArg(argv, `--inspect-brk-extensions=${portExthost}`);\n\t\t\taddArg(argv, `--prof-startup-prefix`, filenamePrefix);\n\t\t\taddArg(argv, `--no-cached-data`);\n\n\t\t\twriteFileSync(filenamePrefix, argv.slice(-6).join('|'));\n\n\t\t\tprocessCallbacks.push(async _child => {\n\n\t\t\t\tclass Profiler {\n\t\t\t\t\tstatic async start(name: string, filenamePrefix: string, opts: { port: number, tries?: number, target?: (targets: Target[]) => Target }) {\n\t\t\t\t\t\tconst profiler = await import('v8-inspect-profiler');\n\n\t\t\t\t\t\tlet session: ProfilingSession;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tsession = await profiler.startProfiling(opts);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tconsole.error(`FAILED to start profiling for '${name}' on port '${opts.port}'`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tasync stop() {\n\t\t\t\t\t\t\t\tif (!session) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlet suffix = '';\n\t\t\t\t\t\t\t\tlet profile = await session.stop();\n\t\t\t\t\t\t\t\tif (!process.env['VSCODE_DEV']) {\n\t\t\t\t\t\t\t\t\t// when running from a not-development-build we remove\n\t\t\t\t\t\t\t\t\t// absolute filenames because we don't want to reveal anything\n\t\t\t\t\t\t\t\t\t// about users. We also append the `.txt` suffix to make it\n\t\t\t\t\t\t\t\t\t// easier to attach these files to GH issues\n\t\t\t\t\t\t\t\t\tprofile = profiler.rewriteAbsolutePaths(profile, 'piiRemoved');\n\t\t\t\t\t\t\t\t\tsuffix = '.txt';\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tawait profiler.writeProfile(profile, `${filenamePrefix}.${name}.cpuprofile${suffix}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\t// load and start profiler\n\t\t\t\t\tconst mainProfileRequest = Profiler.start('main', filenamePrefix, { port: portMain });\n\t\t\t\t\tconst extHostProfileRequest = Profiler.start('extHost', filenamePrefix, { port: portExthost, tries: 300 });\n\t\t\t\t\tconst rendererProfileRequest = Profiler.start('renderer', filenamePrefix, {\n\t\t\t\t\t\tport: portRenderer,\n\t\t\t\t\t\ttries: 200,\n\t\t\t\t\t\ttarget: function (targets) {\n\t\t\t\t\t\t\treturn targets.filter(target => {\n\t\t\t\t\t\t\t\tif (!target.webSocketDebuggerUrl) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (target.type === 'page') {\n\t\t\t\t\t\t\t\t\treturn target.url.indexOf('workbench/workbench.html') > 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tconst main = await mainProfileRequest;\n\t\t\t\t\tconst extHost = await extHostProfileRequest;\n\t\t\t\t\tconst renderer = await rendererProfileRequest;\n\n\t\t\t\t\t// wait for the renderer to delete the\n\t\t\t\t\t// marker file\n\t\t\t\t\tawait whenDeleted(filenamePrefix);\n\n\t\t\t\t\t// stop profiling\n\t\t\t\t\tawait main.stop();\n\t\t\t\t\tawait renderer.stop();\n\t\t\t\t\tawait extHost.stop();\n\n\t\t\t\t\t// re-create the marker file to signal that profiling is done\n\t\t\t\t\twriteFileSync(filenamePrefix, '');\n\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error('Failed to profile startup. Make sure to quit Code first.');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst jsFlags = args['js-flags'];\n\t\tif (isString(jsFlags)) {\n\t\t\tconst match = /max_old_space_size=(\\d+)/g.exec(jsFlags);\n\t\t\tif (match && !args['max-memory']) {\n\t\t\t\taddArg(argv, `--max-memory=${match[1]}`);\n\t\t\t}\n\t\t}\n\n\t\tconst options: SpawnOptions = {\n\t\t\tdetached: true,\n\t\t\tenv\n\t\t};\n\n\t\tif (!verbose) {\n\t\t\toptions['stdio'] = 'ignore';\n\t\t}\n\n\t\tif (isLinux) {\n\t\t\taddArg(argv, '--no-sandbox'); // Electron 6 introduces a chrome-sandbox that requires root to run. This can fail. Disable sandbox via --no-sandbox\n\t\t}\n\n\t\tconst child = spawn(process.execPath, argv.slice(2), options);\n\n\t\tif (args.wait && waitMarkerFilePath) {\n\t\t\treturn new Promise<void>(resolve => {\n\n\t\t\t\t// Complete when process exits\n\t\t\t\tchild.once('exit', () => resolve(undefined));\n\n\t\t\t\t// Complete when wait marker file is deleted\n\t\t\t\twhenDeleted(waitMarkerFilePath!).then(resolve, resolve);\n\t\t\t}).then(() => {\n\n\t\t\t\t// Make sure to delete the tmp stdin file if we have any\n\t\t\t\tif (stdinFilePath) {\n\t\t\t\t\tunlinkSync(stdinFilePath);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn Promise.all(processCallbacks.map(callback => callback(child)));\n\t}\n}\n\nfunction eventuallyExit(code: number): void {\n\tsetTimeout(() => process.exit(code), 0);\n}\n\nmain(process.argv)\n\t.then(() => eventuallyExit(0))\n\t.then(null, err => {\n\t\tconsole.error(err.message || err.stack || err);\n\t\teventuallyExit(1);\n\t});\n"],"mappings":"AAAA;;4DAAA,AAAA,YACA,GAAA,GAAA,CAAA,UAAA,UAAA,0BAAA,sBAAA,qBAAA,yBAAA,uBAAA,2BAAA,KAAA,KAAA,wBAAA,4BAAA,2BAAA,4BAAA,yBAAA,uBAAA,yBAAA,qBAAA,yBAAA,SAAA,0BAAA,oCAAA,0BAAA,2BAAA,8BAAA,+BAAA,uBAAA,sBAAA,mBAAA,qBAAA,gCAAA,gBAAA,2CAAA,iDAAA,wCAAA,qCAAA,oCAAA,iDAAA,iCAAA,0CAAA,qCAAA,MAAA,WAAA,SAAA,oBACA,EAAA,SAAA,GAEA,OADA,GAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,EAAA,IAEA,MAAA,ieAPA,QCoBC,cAEC,KAAK,UAAY,GAEjB,KAAK,uBAAyB,SAAU,GACvC,WAAW,KACV,KAAI,GAAE,MACC,GAAI,OAAM,EAAE,QAAU;;EAAS,EAAE,OAGlC,GACJ,IAIL,YAAY,GACX,YAAK,UAAU,KAAK,GAEb,KACN,KAAK,gBAAgB,IAIf,KAAK,GACZ,KAAK,UAAU,QAAQ,AAAC,IACvB,EAAS,KAIH,gBAAgB,GACvB,KAAK,UAAU,OAAO,KAAK,UAAU,QAAQ,GAAW,GAGzD,0BAA0B,GACzB,KAAK,uBAAyB,EAG/B,4BACC,MAAO,MAAK,uBAGb,kBAAkB,GACjB,KAAK,uBAAuB,GAC5B,KAAK,KAAK,GAIX,0BAA0B,GACzB,KAAK,uBAAuB,IApD9B,EAAA,aAAA,EAwDa,EAAA,aAAe,GAAI,GAEhC,WAA0C,GACzC,EAAA,aAAa,0BAA0B,GADxC,EAAA,0BAAA,EAIA,WAAkC,GAEjC,AAAK,EAAuB,IAC3B,EAAA,aAAa,kBAAkB,GAHjC,EAAA,kBAAA,EAQA,WAA0C,GAEzC,AAAK,EAAuB,IAC3B,EAAA,aAAa,0BAA0B,GAHzC,EAAA,0BAAA,EAiBA,WAA+C,GAC9C,GAAI,YAAiB,QACpB,GAAI,CAAE,OAAM,WAAY,EACxB,KAAM,GAAsB,EAAO,YAAoB,EAAO,MAC9D,MAAO,CACN,SAAU,GACV,OACA,UACA,SAKF,MAAO,GAbR,EAAA,+BAAA,EAkCA,KAAM,GAAe,WAKrB,WAAuC,GACtC,MAAO,aAAiB,QAAS,EAAM,OAAS,GAAgB,EAAM,UAAY,EADnF,EAAA,uBAAA,ED9IA,eCoJuC,OACtC,cACC,MAAM,GACN,KAAK,KAAO,KAAK,SAHnB,EAAA,kBAAA,EAUA,aACC,KAAM,GAAQ,GAAI,OAAM,GACxB,SAAM,KAAO,EAAM,QACZ,EAHR,EAAA,SAAA,EAMA,WAAgC,GAC/B,MAAI,GACI,GAAI,OAAM,qBAAqB,KAE/B,GAAI,OAAM,oBAJnB,EAAA,gBAAA,EAQA,WAA6B,GAC5B,MAAI,GACI,GAAI,OAAM,kBAAkB,KAE5B,GAAI,OAAM,iBAJnB,EAAA,aAAA,EAQA,WAAyB,GACxB,MAAO,GACJ,GAAI,OAAM,sBAAsB,wBAChC,GAAI,OAAM,uCAHd,EAAA,SAAA,EAMA,WAAyB,GACxB,KAAM,GAAS,GAAI,OAAM,GAAG,uBAC5B,SAAO,KAAO,WACP,EAHR,EAAA,SAAA,EAMA,WAAgC,GAC/B,MAAK,GAID,EAAI,QACA,EAAI,QAGR,EAAI,MACA,EAAI,MAAM,MAAM;GAAM,GAGvB,OAAO,GAXN,QAFT,EAAA,gBAAA,EDhMA,eCgNyC,OACxC,YAAY,GACX,MAAM,kBACN,AAAI,GACH,MAAK,QAAU,IAJlB,EAAA,oBAAA,EDhNA,eCyNuC,OACtC,YAAY,GACX,MAAM,gBACN,AAAI,GACH,MAAK,QAAU,IAJlB,EAAA,kBAAA,EDzNA,eCkOmC,OAAnC,kCACU,KAAA,WAAa,IADvB,EAAA,cAAA,EAYA,WAAmC,GAClC,KAAM,GAAY,EAElB,MAAO,aAAqB,QAAS,MAAM,QAAQ,EAAU,SAH9D,EAAA,mBAAA,EAMA,WAAuC,EAAiB,EAAyB,OAAO,OAAO,OAC9F,KAAM,GAAS,GAAI,OAAM,GAEzB,MAAI,GAAQ,SACV,GAA6B,QAAU,EAAQ,SAG1C,EAPR,EAAA,uBAAA,oHC/OA,WAAwD,GACvD,KAAM,GAAQ,KACd,GAAI,GAAU,GACV,EAEJ,MAAO,YACN,MAAI,IAIJ,GAAU,GACV,EAAS,EAAG,MAAM,EAAO,YAElB,GAbT,EAAA,KAAA,wHCAA,GAAiB,GAAjB,AAAA,UAAiB,GAEhB,WAA4B,GAC3B,MAAO,IAAS,MAAO,IAAU,UAAY,MAAO,GAAM,OAAO,WAAc,WADhE,EAAA,GAAE,EAIlB,KAAM,GAAwB,OAAO,OAAO,IAC5C,aACC,MAAO,GADQ,EAAA,MAAK,EAIrB,WAA2B,GAC1B,KAAM,GADU,EAAA,OAAM,EAIvB,WAAwB,GACvB,MAAO,IAAY,EADJ,EAAA,KAAI,EAIpB,WAA2B,GAC1B,MAAO,CAAC,GAAY,EAAS,OAAO,YAAY,OAAO,OAAS,GADjD,EAAA,QAAO,EAIvB,WAAyB,GACxB,MAAO,GAAS,OAAO,YAAY,OAAO,MAD3B,EAAA,MAAK,EAIrB,WAAwB,EAAuB,GAC9C,SAAW,KAAW,GACrB,GAAI,EAAU,GACb,MAAO,GAGT,MAAO,GANQ,EAAA,KAAI,EAWpB,WAAwB,EAAuB,GAC9C,SAAW,KAAW,GACrB,GAAI,EAAU,GACb,MAAO,GAHM,EAAA,KAAI,EAYpB,WAA2B,EAAuB,GACjD,SAAW,KAAW,GACrB,AAAI,EAAU,IACb,MAAM,IAHQ,EAAA,OAAM,EAQvB,WAA2B,EAAuB,GACjD,SAAW,KAAW,GACrB,KAAM,GAAG,GAFM,EAAA,IAAG,EAMpB,cAA8B,GAC7B,SAAW,KAAY,GACtB,SAAW,KAAW,GACrB,KAAM,GAHQ,EAAA,OAAM,EAQvB,WAAiC,GAChC,SAAW,KAAY,GACtB,SAAW,KAAW,GACrB,KAAM,GAHQ,EAAA,aAAY,EAQ7B,WAA6B,EAAuB,EAAmD,GACtG,GAAI,GAAQ,EACZ,SAAW,KAAW,GACrB,EAAQ,EAAQ,EAAO,GAExB,MAAO,GALQ,EAAA,OAAM,EAWtB,WAA0B,EAAuB,EAAc,EAAK,EAAI,QAWvE,IAVI,EAAO,GACV,IAAQ,EAAI,QAGb,AAAI,EAAK,EACR,GAAM,EAAI,OACA,EAAK,EAAI,QACnB,GAAK,EAAI,QAGH,EAAO,EAAI,IACjB,KAAM,GAAI,GAZK,EAAA,MAAK,EAoBtB,WAA2B,EAAuB,EAAiB,OAAO,mBACzE,KAAM,GAAgB,GAEtB,GAAI,IAAW,EACd,MAAO,CAAC,EAAU,GAGnB,KAAM,GAAW,EAAS,OAAO,YAEjC,OAAS,GAAI,EAAG,EAAI,EAAQ,KAC3B,KAAM,GAAO,EAAS,OAEtB,GAAI,EAAK,KACR,MAAO,CAAC,EAAU,EAAS,SAG5B,EAAS,KAAK,EAAK,OAGpB,MAAO,CAAC,EAAU,EAAG,OAAO,YAAc,MAAO,MAnBlC,EAAA,QAAO,EA0BvB,WAA0B,EAAgB,EAAgB,EAAa,CAAC,EAAO,IAAU,IAAO,GAC/F,KAAM,GAAK,EAAE,OAAO,YACd,EAAK,EAAE,OAAO,YACpB,QACC,KAAM,GAAK,EAAG,OACR,EAAK,EAAG,OAEd,GAAI,EAAG,OAAS,EAAG,KAClB,MAAO,GACD,GAAI,EAAG,KACb,MAAO,GACD,GAAI,CAAC,EAAW,EAAG,MAAO,EAAG,OACnC,MAAO,IAZM,EAAA,OAAM,IAzIN,EAAA,EAAA,UAAA,GAAA,SAAQ,iVCUzB,KAAM,GAAoB,GAC1B,GAAI,GAA+C,KAOnD,WAAqC,GACpC,EAAoB,EAGrB,GAJA,EAAA,qBAAA,EAII,GACH,KAAM,GAA4B,4BAClC,EAAoB,GAAI,OACvB,gBAAgB,GACf,KAAM,GAAQ,GAAI,OAAM,iCAAiC,MACzD,WAAW,KACV,AAAM,EAAU,IACf,QAAQ,IAAI,IAEX,KAGJ,YAAY,GACX,GAAI,GAAK,IAAM,EAAW,KACzB,IACE,EAAU,GAA6B,SACvC,OAQN,WAA4C,GAC3C,AAAI,CAAC,GAGL,EAAkB,YAAY,GAG/B,WAAuD,GACtD,MAAK,IAGL,EAAkB,gBAAgB,GAC3B,EALR,EAAA,gBAAA,EJ1DA,eIkEuC,OACtC,YACiB,GAEhB,MAAM,yDAAyD,EAAO,KAAK,UAF3D,KAAA,OAAA,GAFlB,EAAA,kBAAA,EAYA,WAA+C,GAC9C,MAAO,OAAqB,GAAO,SAAY,YAA4B,EAAO,QAAQ,SAAW,EADtG,EAAA,aAAA,EASA,WAA+C,GAC9C,GAAI,EAAA,SAAS,GAAG,IACf,GAAI,GAAgB,GAEpB,SAAW,KAAK,GACf,GAAI,GACH,EAAY,GACZ,IACC,EAAE,gBACM,GACR,EAAO,KAAK,IAKf,GAAI,EAAO,SAAW,EACrB,KAAM,GAAO,GACP,GAAI,EAAO,OAAS,EAC1B,KAAM,IAAI,GAAkB,GAG7B,MAAO,OAAM,QAAQ,GAAO,GAAK,UACvB,EACV,SAAY,GACZ,EAAI,UACG,EAzBT,EAAA,QAAA,EA8BA,cAAsC,GACrC,SAAY,QAAQ,GACb,EAAa,IAAM,EAAQ,IAFnC,EAAA,mBAAA,EAKA,WAA6B,GAC5B,KAAM,GAAO,EAAgB,CAC5B,QAAS,KACR,EAAY,GACZ,OAGF,MAAO,GAPR,EAAA,aAAA,EJ1HA,QIoIA,cAIS,KAAA,WAAa,GAAI,KACjB,KAAA,YAAc,GAOf,UACN,AAAI,KAAK,aAIT,GAAY,MACZ,KAAK,YAAc,GACnB,KAAK,SAMC,QACN,IACC,EAAQ,KAAK,WAAW,kBAExB,KAAK,WAAW,SAIX,IAA2B,GACjC,GAAI,CAAC,EACJ,MAAO,GAER,GAAK,IAAqC,KACzC,KAAM,IAAI,OAAM,2CAGjB,SAAY,GACZ,AAAI,KAAK,YACH,EAAgB,0BACpB,QAAQ,KAAK,GAAI,OAAM,uHAAuH,OAG/I,KAAK,WAAW,IAAI,GAGd,GAlDT,EAAA,gBAAA,EAEQ,EAAA,yBAA2B,GJtInC,QIgMC,cAFiB,KAAA,OAAS,GAAI,GAG7B,EAAgB,MAGV,UACN,EAAY,MAEZ,KAAK,OAAO,UAGH,UAAiC,GAC1C,GAAK,IAAgC,KACpC,KAAM,IAAI,OAAM,2CAEjB,MAAO,MAAK,OAAO,IAAI,IApBzB,EAAA,WAAA,EAEiB,EAAA,KAAO,OAAO,OAAoB,CAAE,cJ5LrD,QI4NC,cAFQ,KAAA,YAAc,GAGrB,EAAgB,SAGb,SACH,MAAO,MAAK,YAAc,OAAY,KAAK,UAGxC,OAAM,SACT,AAAI,KAAK,aAAe,IAAU,KAAK,QAIvC,IAAA,KAAK,UAAM,MAAA,IAAA,QAAA,EAAE,UACT,GACH,EAAY,GAEb,KAAK,OAAS,GAGf,QACC,KAAK,MAAQ,OAGd,gBACC,KAAK,YAAc,GACnB,EAAY,MACZ,GAAA,KAAK,UAAM,MAAA,IAAA,QAAA,EAAE,UACb,KAAK,OAAS,QAhChB,EAAA,kBAAA,EJxNA,QIgQA,cAEkB,KAAA,WAAoE,GAAI,KAEzF,QAAQ,KAAgB,GACvB,GAAI,GAAY,KAAK,WAAW,IAAI,GAEpC,AAAK,GACJ,GAAY,CAAE,QAAS,EAAG,OAAQ,KAAK,uBAAuB,EAAK,GAAG,IACtE,KAAK,WAAW,IAAI,EAAK,IAG1B,KAAM,CAAE,UAAW,EACb,EAAU,AJ7QlB,GI6QkB,EAAA,MAAK,KACpB,AAAI,EAAE,EAAW,SAAY,GAC5B,MAAK,wBAAwB,EAAK,EAAW,QAC7C,KAAK,WAAW,OAAO,MAIzB,SAAU,UAEH,CAAE,SAAQ,YAtBnB,EAAA,oBAAA,EJhQA,QI8RC,YAAmB,GAAA,KAAA,OAAA,EACnB,YAFD,EAAA,kBAAA,0HJ7RA,QKaC,YAAY,GACX,KAAK,QAAU,EACf,KAAK,KAAO,EAAK,UACjB,KAAK,KAAO,EAAK,WATF,EAAA,UAAY,GAAI,GAAU,QLP3C,QKoBA,cAES,KAAA,OAAkB,EAAK,UACvB,KAAA,MAAiB,EAAK,UACtB,KAAA,MAAgB,KAEpB,QACH,MAAO,MAAK,MAGb,UACC,MAAO,MAAK,SAAW,EAAK,UAG7B,QACC,KAAK,OAAS,EAAK,UACnB,KAAK,MAAQ,EAAK,UAClB,KAAK,MAAQ,EAGd,QAAQ,GACP,MAAO,MAAK,QAAQ,EAAS,IAG9B,KAAK,GACJ,MAAO,MAAK,QAAQ,EAAS,IAGtB,QAAQ,EAAY,GAC3B,KAAM,GAAU,GAAI,GAAK,GACzB,GAAI,KAAK,SAAW,EAAK,UACxB,KAAK,OAAS,EACd,KAAK,MAAQ,UAEH,GAEV,KAAM,GAAU,KAAK,MACrB,KAAK,MAAQ,EACb,EAAQ,KAAO,EACf,EAAQ,KAAO,OAIf,KAAM,GAAW,KAAK,OACtB,KAAK,OAAS,EACd,EAAQ,KAAO,EACf,EAAS,KAAO,EAEjB,KAAK,OAAS,EAEd,GAAI,GAAY,GAChB,MAAO,KACN,AAAK,GACJ,GAAY,GACZ,KAAK,QAAQ,KAKhB,QACC,GAAI,KAAK,SAAW,EAAK,WAGxB,KAAM,GAAM,KAAK,OAAO,QACxB,YAAK,QAAQ,KAAK,QACX,GAIT,MACC,GAAI,KAAK,QAAU,EAAK,WAGvB,KAAM,GAAM,KAAK,MAAM,QACvB,YAAK,QAAQ,KAAK,OACX,GAID,QAAQ,GACf,GAAI,EAAK,OAAS,EAAK,WAAa,EAAK,OAAS,EAAK,WAEtD,KAAM,GAAS,EAAK,KACpB,EAAO,KAAO,EAAK,KACnB,EAAK,KAAK,KAAO,MAEX,AAAI,GAAK,OAAS,EAAK,WAAa,EAAK,OAAS,EAAK,UAE7D,MAAK,OAAS,EAAK,UACnB,KAAK,MAAQ,EAAK,WAEZ,AAAI,EAAK,OAAS,EAAK,UAE7B,MAAK,MAAQ,KAAK,MAAO,KACzB,KAAK,MAAM,KAAO,EAAK,WAEb,EAAK,OAAS,EAAK,WAE7B,MAAK,OAAS,KAAK,OAAQ,KAC3B,KAAK,OAAO,KAAO,EAAK,WAIzB,KAAK,OAAS,IAGb,OAAO,YACR,GAAI,GAAO,KAAK,OAChB,KAAO,IAAS,EAAK,WACpB,KAAM,GAAK,QACX,EAAO,EAAK,MA9Gf,EAAA,WAAA,mcCfA,KAAM,GAAmB,KAEzB,GAAI,GAAa,GACb,EAAe,GACf,EAAW,GACX,EAAe,GACf,EAAY,GACZ,EAAS,GACT,EAAS,GACT,EACA,EAAoB,EACpB,EACA,EAmCS,EAAA,QAAgB,MAAO,OAAS,SAAW,KAAO,MAAO,SAAW,SAAW,OAAS,GAErG,GAAI,GACJ,AAAI,MAAO,GAAA,QAAQ,QAAW,YAE7B,EAAc,EAAA,QAAQ,OAAO,QACnB,MAAO,UAAY,aAE7B,GAAc,SAGf,KAAM,GAAqB,MAAO,IAAA,GAAW,KAAA,OAAX,EAAa,YAAQ,MAAA,IAAA,OAAA,OAAA,EAAE,WAAa,UAAY,EAAY,OAAS,WA+BvG,GA9Ba,EAAA,oBAAsB,GAAsB,IAAW,KAAA,OAAX,EAAa,WACzD,EAAA,gCAAuH,MAGnI,GAAI,EAAA,oBACH,MAAO,kBAIR,KAAM,GAAM,GAAW,KAAA,OAAX,EAAa,IAAI,4BAC7B,GAAI,MAAO,IAAQ,SAClB,MAAI,KAAQ,QAAU,IAAQ,QAAU,IAAQ,mBAAqB,IAAQ,iCACrE,EAGD,sBAKI,EAAA,4BAA8B,MAAO,GAAA,iCAAoC,SAUlF,MAAO,YAAc,UAAY,CAAC,EACrC,EAAa,UAAU,UACvB,EAAa,EAAW,QAAQ,YAAc,EAC9C,EAAe,EAAW,QAAQ,cAAgB,EAClD,EAAU,GAAW,QAAQ,cAAgB,GAAK,EAAW,QAAQ,SAAW,GAAK,EAAW,QAAQ,WAAa,IAAM,CAAC,CAAC,UAAU,gBAAkB,UAAU,eAAiB,EACpL,EAAW,EAAW,QAAQ,UAAY,EAC1C,EAAS,GACT,EAAU,UAAU,SACpB,EAAY,UAIJ,MAAO,IAAgB,UAC/B,EAAc,EAAY,WAAa,QACvC,EAAgB,EAAY,WAAa,SACzC,EAAY,EAAY,WAAa,QACrC,EAAe,GAAY,CAAC,CAAC,EAAY,IAAI,MAAW,CAAC,CAAC,EAAY,IAAI,cAC1E,EAAU,EACV,EAAY,EACZ,KAAM,GAAe,EAAY,IAAI,kBACrC,GAAI,EACH,IACC,KAAM,GAAuB,KAAK,MAAM,GAClC,EAAW,EAAU,mBAAmB,KAC9C,EAAU,EAAU,OAEpB,EAAY,GAAsB,EAClC,EAA0B,EAAU,8BAC5B,IAGV,EAAY,OAKZ,SAAQ,MAAM,+BAGf,GAAkB,GAAlB,AAAA,UAAkB,GACjB,EAAA,EAAA,IAAA,GAAA,MACA,EAAA,EAAA,IAAA,GAAA,MACA,EAAA,EAAA,MAAA,GAAA,QACA,EAAA,EAAA,QAAA,GAAA,YAJiB,EAAA,EAAA,UAAA,GAAA,SAAQ,KAM1B,WAAiC,GAChC,OAAQ,OACP,GAAmB,MAAO,UAC1B,GAAmB,MAAO,UAC1B,GAAqB,MAAO,YAC5B,GAAuB,MAAO,WALhC,EAAA,iBAAA,EASA,GAAI,GAAS,EACb,AAAI,EACH,EAAS,EACH,AAAI,EACV,EAAS,EACC,GACV,GAAS,GAGG,EAAA,UAAY,EACZ,EAAA,YAAc,EACd,EAAA,QAAU,EACV,EAAA,YAAc,EACd,EAAA,SAAW,EACX,EAAA,MAAQ,EACR,EAAA,MAAQ,EACR,EAAA,SAAW,EACX,EAAA,UAAY,EAOZ,EAAA,SAAW,EAExB,GAAiB,GAAjB,AAAA,UAAiB,GAEhB,aACC,MAAO,GAAA,SADQ,EAAA,MAAK,EAIrB,aACC,MAAI,GAAA,SAAS,SAAW,EAChB,EAAA,WAAa,KACV,EAAA,SAAS,QAAU,EACtB,EAAA,SAAS,KAAO,KAAO,EAAA,SAAS,KAAO,KAAO,EAAA,SAAS,KAAO,IAE9D,GANO,EAAA,iBAAgB,EAUhC,aACC,MAAO,GAAA,WAAa,KADL,EAAA,UAAS,IAhBT,EAAA,EAAA,UAAA,GAAA,SAAQ,KA0BZ,EAAA,OAAS,EAKT,EAAA,uBAAyB,EAMzB,EAAA,aAA+B,WAC3C,GAAI,EAAA,QAAQ,aACX,MAAO,GAAA,QAAQ,aAAa,KAAK,EAAA,SAElC,GAAI,MAAO,GAAA,QAAQ,aAAgB,YAAc,CAAC,EAAA,QAAQ,eAKzD,GAAI,GAA2B,GAC/B,EAAA,QAAQ,iBAAiB,UAAW,AAAC,IACpC,GAAI,EAAE,MAAQ,EAAE,KAAK,qBACpB,OAAS,GAAI,EAAG,EAAM,EAAQ,OAAQ,EAAI,EAAK,KAC9C,KAAM,GAAY,EAAQ,GAC1B,GAAI,EAAU,KAAO,EAAE,KAAK,sBAC3B,EAAQ,OAAO,EAAG,GAClB,EAAU,WACV,WAKJ,GAAI,GAAS,EACb,MAAO,AAAC,KACP,KAAM,GAAO,EAAE,EACf,EAAQ,KAAK,CACZ,GAAI,EACJ,SAAU,IAEX,EAAA,QAAQ,YAAY,CAAE,qBAAsB,GAAQ,MAGtD,GAAI,MAAO,IAAW,KAAA,OAAX,EAAa,WAAa,WACpC,MAAO,GAAY,SAAS,KAAK,GAElC,KAAM,GAAW,QAAQ,UACzB,MAAO,AAAC,IAA2C,EAAS,KAAK,MAGlE,GAAkB,GAAlB,AAAA,UAAkB,GACjB,EAAA,EAAA,QAAA,GAAA,UACA,EAAA,EAAA,UAAA,GAAA,YACA,EAAA,EAAA,MAAA,GAAA,UAHiB,EAAA,EAAA,iBAAA,GAAA,gBAAe,KAKpB,EAAA,GAAM,GAAgB,EAAQ,EAA8B,EAAY,EAA0B,EAE/G,GAAI,GAAkB,GAClB,EAA0B,GAC9B,aACC,GAAI,CAAC,GACJ,EAA0B,GAC1B,KAAM,GAAO,GAAI,YAAW,GAC5B,EAAK,GAAK,EACV,EAAK,GAAK,EAEV,EAAmB,AADN,GAAI,aAAY,EAAK,QACV,KAAQ,IAAK,GAAK,EAE3C,MAAO,GATR,EAAA,eAAA,mJC5PA,GAAI,GAIJ,GAAI,MAAO,GAAA,QAAQ,QAAW,aAC7B,KAAM,GAA+B,EAAA,QAAQ,OAAO,QACpD,EAAc,IACT,YAAa,MAAO,GAAe,aACnC,OAAQ,MAAO,GAAe,KAClC,MAAQ,MAAO,GAAe,OAC9B,SAAS,GAA4C,MAAO,APjB9D,GOiB8D,EAAA,cAAa,SAKtE,AAAI,OAAO,UAAY,YAC3B,EAAc,IACT,YAAa,MAAO,SAAQ,aAC5B,OAAQ,MAAO,SAAQ,KAC3B,MAAQ,MAAO,SAAQ,IAAI,YAAiB,QAAQ,OACpD,SAAS,GAA4C,MAAO,SAAQ,SAAU,KAM/E,EAAc,IAGT,YAAa,MAAO,GAAA,UAAY,QAAU,EAAA,YAAc,SAAW,SACvE,SAAS,GAA4C,MAAO,APrC9D,GOqC8D,EAAA,cAAa,OAGrE,OAAQ,MAAO,QAAO,OAAO,OACjC,MAAQ,MAAO,MAUJ,EAAA,IAAM,EAAY,IAQlB,EAAA,IAAM,EAAY,IAMlB,EAAA,SAAW,EAAY,SAMvB,EAAA,SAAW,EAAY,kRCtCpC,KAAM,GAAmB,GACnB,EAAmB,GACnB,EAAmB,GACnB,EAAmB,IACnB,EAAW,GACX,EAAqB,GACrB,EAAsB,GACtB,EAAa,GACb,EAAqB,GRzC3B,eQ2CkC,OAEjC,YAAY,EAAc,EAAkB,GAE3C,GAAI,GACJ,AAAI,MAAO,IAAa,UAAY,EAAS,QAAQ,UAAY,EAChE,GAAa,cACb,EAAW,EAAS,QAAQ,QAAS,KAErC,EAAa,UAGd,KAAM,GAAO,EAAK,QAAQ,OAAS,GAAK,WAAa,WACrD,GAAI,GAAM,QAAQ,MAAS,KAAQ,aAAsB,IAEzD,GAAO,mBAAmB,MAAO,KACjC,MAAM,GAEN,KAAK,KAAO,wBAId,WAAwB,EAAe,GACtC,GAAI,MAAO,IAAU,SACpB,KAAM,IAAI,GAAoB,EAAM,SAAU,GAIhD,WAAyB,GACxB,MAAO,KAAS,GAAsB,IAAS,EAGhD,WAA8B,GAC7B,MAAO,KAAS,EAGjB,WAA6B,GAC5B,MAAO,IAAQ,GAAoB,GAAQ,GAC1C,GAAQ,GAAoB,GAAQ,EAItC,WAAyB,EAAc,EAAyB,EAAmB,GAClF,GAAI,GAAM,GACN,EAAoB,EACpB,EAAY,GACZ,EAAO,EACP,EAAO,EACX,OAAS,GAAI,EAAG,GAAK,EAAK,OAAQ,EAAE,GACnC,GAAI,EAAI,EAAK,OACZ,EAAO,EAAK,WAAW,QAEnB,GAAI,EAAgB,GACxB,MAGA,EAAO,EAGR,GAAI,EAAgB,IACnB,GAAI,MAAc,EAAI,GAAK,IAAS,GAE7B,GAAI,IAAS,GACnB,GAAI,EAAI,OAAS,GAAK,IAAsB,GAC3C,EAAI,WAAW,EAAI,OAAS,KAAO,GACnC,EAAI,WAAW,EAAI,OAAS,KAAO,GACnC,GAAI,EAAI,OAAS,GAChB,KAAM,GAAiB,EAAI,YAAY,GACvC,AAAI,IAAmB,GACtB,GAAM,GACN,EAAoB,GAEpB,GAAM,EAAI,MAAM,EAAG,GACnB,EAAoB,EAAI,OAAS,EAAI,EAAI,YAAY,IAEtD,EAAY,EACZ,EAAO,EACP,iBACU,EAAI,SAAW,GACzB,EAAM,GACN,EAAoB,EACpB,EAAY,EACZ,EAAO,EACP,UAGF,AAAI,GACH,IAAO,EAAI,OAAS,EAAI,GAAG,MAAgB,KAC3C,EAAoB,OAGrB,AAAI,GAAI,OAAS,EAChB,GAAO,GAAG,IAAY,EAAK,MAAM,EAAY,EAAG,KAGhD,EAAM,EAAK,MAAM,EAAY,EAAG,GAEjC,EAAoB,EAAI,EAAY,EAErC,EAAY,EACZ,EAAO,MACD,AAAI,KAAS,GAAY,IAAS,GACxC,EAAE,EAEF,EAAO,GAGT,MAAO,GAGR,WAAiB,EAAa,GAC7B,GAAI,IAAe,MAAQ,MAAO,IAAe,SAChD,KAAM,IAAI,GAAoB,aAAc,SAAU,GAEvD,KAAM,GAAM,EAAW,KAAO,EAAW,KACnC,EAAO,EAAW,MACvB,GAAG,EAAW,MAAQ,KAAK,EAAW,KAAO,KAC9C,MAAK,GAGE,IAAQ,EAAW,KAAO,GAAG,IAAM,IAAS,GAAG,IAAM,IAAM,IAF1D,EA+BI,EAAA,MAAe,CAE3B,WAAW,GACV,GAAI,GAAiB,GACjB,EAAe,GACf,EAAmB,GAEvB,OAAS,GAAI,EAAa,OAAS,EAAG,GAAK,GAAI,KAC9C,GAAI,GACJ,GAAI,GAAK,GAKR,GAJA,EAAO,EAAa,GACpB,EAAe,EAAM,QAGjB,EAAK,SAAW,EACnB,aAEK,AAAI,GAAe,SAAW,EACpC,EAAO,EAAQ,MAOf,GAAO,EAAQ,IAAI,IAAI,MAAqB,EAAQ,MAIhD,KAAS,QACZ,EAAK,MAAM,EAAG,GAAG,gBAAkB,EAAe,eAClD,EAAK,WAAW,KAAO,IACvB,GAAO,GAAG,QAIZ,KAAM,GAAM,EAAK,OACjB,GAAI,GAAU,EACV,EAAS,GACT,EAAa,GACjB,KAAM,GAAO,EAAK,WAAW,GAG7B,GAAI,IAAQ,EACX,AAAI,EAAgB,IAEnB,GAAU,EACV,EAAa,YAEJ,EAAgB,GAO1B,GAFA,EAAa,GAET,EAAgB,EAAK,WAAW,KAEnC,GAAI,GAAI,EACJ,EAAO,EAEX,KAAO,EAAI,GAAO,CAAC,EAAgB,EAAK,WAAW,KAClD,IAED,GAAI,EAAI,GAAO,IAAM,GACpB,KAAM,GAAY,EAAK,MAAM,EAAM,GAInC,IAFA,EAAO,EAEA,EAAI,GAAO,EAAgB,EAAK,WAAW,KACjD,IAED,GAAI,EAAI,GAAO,IAAM,GAIpB,IAFA,EAAO,EAEA,EAAI,GAAO,CAAC,EAAgB,EAAK,WAAW,KAClD,IAED,AAAI,KAAM,GAAO,IAAM,IAEtB,GAAS,OAAO,MAAc,EAAK,MAAM,EAAM,KAC/C,EAAU,SAKb,GAAU,MAEL,AAAI,GAAoB,IAC9B,EAAK,WAAW,KAAO,GAEvB,GAAS,EAAK,MAAM,EAAG,GACvB,EAAU,EACN,EAAM,GAAK,EAAgB,EAAK,WAAW,KAG9C,GAAa,GACb,EAAU,IAIZ,GAAI,EAAO,OAAS,EACnB,GAAI,EAAe,OAAS,GAC3B,GAAI,EAAO,gBAAkB,EAAe,cAE3C,aAGD,GAAiB,EAInB,GAAI,GACH,GAAI,EAAe,OAAS,EAC3B,cAGD,EAAe,GAAG,EAAK,MAAM,OAAa,IAC1C,EAAmB,EACf,GAAc,EAAe,OAAS,EACzC,MAUH,SAAe,EAAgB,EAAc,CAAC,EAAkB,KAC/D,GAEM,EACN,GAAG,MAAmB,IACtB,GAAG,IAAiB,KAAkB,KAGxC,UAAU,GACT,EAAe,EAAM,QACrB,KAAM,GAAM,EAAK,OACjB,GAAI,IAAQ,EACX,MAAO,IAER,GAAI,GAAU,EACV,EACA,EAAa,GACjB,KAAM,GAAO,EAAK,WAAW,GAG7B,GAAI,IAAQ,EAGX,MAAO,GAAqB,GAAQ,KAAO,EAE5C,GAAI,EAAgB,GAOnB,GAFA,EAAa,GAET,EAAgB,EAAK,WAAW,KAEnC,GAAI,GAAI,EACJ,EAAO,EAEX,KAAO,EAAI,GAAO,CAAC,EAAgB,EAAK,WAAW,KAClD,IAED,GAAI,EAAI,GAAO,IAAM,GACpB,KAAM,GAAY,EAAK,MAAM,EAAM,GAInC,IAFA,EAAO,EAEA,EAAI,GAAO,EAAgB,EAAK,WAAW,KACjD,IAED,GAAI,EAAI,GAAO,IAAM,GAIpB,IAFA,EAAO,EAEA,EAAI,GAAO,CAAC,EAAgB,EAAK,WAAW,KAClD,IAED,GAAI,IAAM,EAIT,MAAO,OAAO,MAAc,EAAK,MAAM,OAExC,AAAI,IAAM,GAET,GAAS,OAAO,MAAc,EAAK,MAAM,EAAM,KAC/C,EAAU,SAKb,GAAU,MAEL,AAAI,GAAoB,IAAS,EAAK,WAAW,KAAO,GAE9D,GAAS,EAAK,MAAM,EAAG,GACvB,EAAU,EACN,EAAM,GAAK,EAAgB,EAAK,WAAW,KAG9C,GAAa,GACb,EAAU,IAIZ,GAAI,GAAO,EAAU,EACpB,EAAgB,EAAK,MAAM,GAAU,CAAC,EAAY,KAAM,GACxD,GAOD,MANI,GAAK,SAAW,GAAK,CAAC,GACzB,GAAO,KAEJ,EAAK,OAAS,GAAK,EAAgB,EAAK,WAAW,EAAM,KAC5D,IAAQ,MAEL,IAAW,OACP,EAAa,KAAK,IAAS,EAE5B,EAAa,GAAG,MAAW,IAAS,GAAG,IAAS,KAGxD,WAAW,GACV,EAAe,EAAM,QACrB,KAAM,GAAM,EAAK,OACjB,GAAI,IAAQ,EACX,MAAO,GAGR,KAAM,GAAO,EAAK,WAAW,GAC7B,MAAO,GAAgB,IAEtB,EAAM,GACN,EAAoB,IACpB,EAAK,WAAW,KAAO,GACvB,EAAgB,EAAK,WAAW,KAGlC,QAAQ,GACP,GAAI,EAAM,SAAW,EACpB,MAAO,IAGR,GAAI,GACA,EACJ,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,EAAE,GACnC,KAAM,GAAM,EAAM,GAClB,EAAe,EAAK,QAChB,EAAI,OAAS,GAChB,CAAI,IAAW,OACd,EAAS,EAAY,EAGrB,GAAU,KAAK,KAKlB,GAAI,IAAW,OACd,MAAO,IAgBR,GAAI,GAAe,GACf,EAAa,EACjB,GAAI,MAAO,IAAc,UAAY,EAAgB,EAAU,WAAW,KACzE,EAAE,EACF,KAAM,GAAW,EAAU,OAC3B,AAAI,EAAW,GAAK,EAAgB,EAAU,WAAW,KACxD,GAAE,EACE,EAAW,GACd,CAAI,EAAgB,EAAU,WAAW,IACxC,EAAE,EAGF,EAAe,KAKnB,GAAI,GAEH,KAAO,EAAa,EAAO,QAC1B,EAAgB,EAAO,WAAW,KAClC,IAID,AAAI,GAAc,GACjB,GAAS,KAAK,EAAO,MAAM,MAI7B,MAAO,GAAA,MAAM,UAAU,IAQxB,SAAS,EAAc,GAItB,GAHA,EAAe,EAAM,QACrB,EAAe,EAAI,MAEf,IAAS,EACZ,MAAO,GAGR,KAAM,GAAW,EAAA,MAAM,QAAQ,GACzB,EAAS,EAAA,MAAM,QAAQ,GAS7B,GAPI,IAAa,GAIjB,GAAO,EAAS,cAChB,EAAK,EAAO,cAER,IAAS,GACZ,MAAO,GAIR,GAAI,GAAY,EAChB,KAAO,EAAY,EAAK,QACvB,EAAK,WAAW,KAAe,GAC/B,IAGD,GAAI,GAAU,EAAK,OACnB,KAAO,EAAU,EAAI,GACpB,EAAK,WAAW,EAAU,KAAO,GACjC,IAED,KAAM,GAAU,EAAU,EAG1B,GAAI,GAAU,EACd,KAAO,EAAU,EAAG,QACnB,EAAG,WAAW,KAAa,GAC3B,IAGD,GAAI,GAAQ,EAAG,OACf,KAAO,EAAQ,EAAI,GAClB,EAAG,WAAW,EAAQ,KAAO,GAC7B,IAED,KAAM,GAAQ,EAAQ,EAGhB,EAAS,EAAU,EAAQ,EAAU,EAC3C,GAAI,GAAgB,GAChB,EAAI,EACR,KAAO,EAAI,EAAQ,KAClB,KAAM,GAAW,EAAK,WAAW,EAAY,GAC7C,GAAI,IAAa,EAAG,WAAW,EAAU,GACxC,MACM,AAAI,IAAa,GACvB,GAAgB,GAMlB,GAAI,IAAM,GACT,GAAI,IAAkB,GACrB,MAAO,QAGR,GAAI,EAAQ,GACX,GAAI,EAAG,WAAW,EAAU,KAAO,EAGlC,MAAO,GAAO,MAAM,EAAU,EAAI,GAEnC,GAAI,IAAM,EAGT,MAAO,GAAO,MAAM,EAAU,GAGhC,AAAI,EAAU,GACb,CAAI,EAAK,WAAW,EAAY,KAAO,EAGtC,EAAgB,EACN,IAAM,GAGhB,GAAgB,IAGd,IAAkB,IACrB,GAAgB,GAIlB,GAAI,GAAM,GAGV,IAAK,EAAI,EAAY,EAAgB,EAAG,GAAK,EAAS,EAAE,EACvD,AAAI,KAAM,GAAW,EAAK,WAAW,KAAO,IAC3C,IAAO,EAAI,SAAW,EAAI,KAAO,QAQnC,MAJA,IAAW,EAIP,EAAI,OAAS,EACT,GAAG,IAAM,EAAO,MAAM,EAAS,KAGnC,GAAO,WAAW,KAAa,GAClC,EAAE,EAGI,EAAO,MAAM,EAAS,KAG9B,iBAAiB,GAEhB,GAAI,MAAO,IAAS,SACnB,MAAO,GAGR,GAAI,EAAK,SAAW,EACnB,MAAO,GAGR,KAAM,GAAe,EAAA,MAAM,QAAQ,GAEnC,GAAI,EAAa,QAAU,EAC1B,MAAO,GAGR,GAAI,EAAa,WAAW,KAAO,GAElC,GAAI,EAAa,WAAW,KAAO,GAClC,KAAM,GAAO,EAAa,WAAW,GACrC,GAAI,IAAS,GAAsB,IAAS,EAE3C,MAAO,eAAe,EAAa,MAAM,cAGjC,EAAoB,EAAa,WAAW,KACtD,EAAa,WAAW,KAAO,GAC/B,EAAa,WAAW,KAAO,EAE/B,MAAO,UAAU,IAGlB,MAAO,IAGR,QAAQ,GACP,EAAe,EAAM,QACrB,KAAM,GAAM,EAAK,OACjB,GAAI,IAAQ,EACX,MAAO,IAER,GAAI,GAAU,GACV,EAAS,EACb,KAAM,GAAO,EAAK,WAAW,GAE7B,GAAI,IAAQ,EAGX,MAAO,GAAgB,GAAQ,EAAO,IAIvC,GAAI,EAAgB,IAKnB,GAFA,EAAU,EAAS,EAEf,EAAgB,EAAK,WAAW,KAEnC,GAAI,GAAI,EACJ,EAAO,EAEX,KAAO,EAAI,GAAO,CAAC,EAAgB,EAAK,WAAW,KAClD,IAED,GAAI,EAAI,GAAO,IAAM,GAIpB,IAFA,EAAO,EAEA,EAAI,GAAO,EAAgB,EAAK,WAAW,KACjD,IAED,GAAI,EAAI,GAAO,IAAM,GAIpB,IAFA,EAAO,EAEA,EAAI,GAAO,CAAC,EAAgB,EAAK,WAAW,KAClD,IAED,GAAI,IAAM,EAET,MAAO,GAER,AAAI,IAAM,GAKT,GAAU,EAAS,EAAI,UAMrB,AAAI,GAAoB,IAAS,EAAK,WAAW,KAAO,GAC9D,GAAU,EAAM,GAAK,EAAgB,EAAK,WAAW,IAAM,EAAI,EAC/D,EAAS,GAGV,GAAI,GAAM,GACN,EAAe,GACnB,OAAS,GAAI,EAAM,EAAG,GAAK,EAAQ,EAAE,EACpC,GAAI,EAAgB,EAAK,WAAW,KACnC,GAAI,CAAC,GACJ,EAAM,EACN,WAID,GAAe,GAIjB,GAAI,IAAQ,IACX,GAAI,IAAY,GACf,MAAO,IAGR,EAAM,EAEP,MAAO,GAAK,MAAM,EAAG,IAGtB,SAAS,EAAc,GACtB,AAAI,IAAQ,QACX,EAAe,EAAK,OAErB,EAAe,EAAM,QACrB,GAAI,GAAQ,EACR,EAAM,GACN,EAAe,GACf,EAWJ,GANI,EAAK,QAAU,GAClB,EAAoB,EAAK,WAAW,KACpC,EAAK,WAAW,KAAO,GACvB,GAAQ,GAGL,IAAQ,QAAa,EAAI,OAAS,GAAK,EAAI,QAAU,EAAK,QAC7D,GAAI,IAAQ,EACX,MAAO,GAER,GAAI,GAAS,EAAI,OAAS,EACtB,EAAmB,GACvB,IAAK,EAAI,EAAK,OAAS,EAAG,GAAK,EAAO,EAAE,GACvC,KAAM,GAAO,EAAK,WAAW,GAC7B,GAAI,EAAgB,IAGnB,GAAI,CAAC,GACJ,EAAQ,EAAI,EACZ,WAGD,AAAI,KAAqB,IAGxB,GAAe,GACf,EAAmB,EAAI,GAEpB,GAAU,GAEb,CAAI,IAAS,EAAI,WAAW,GACvB,EAAE,GAAW,IAGhB,GAAM,GAKP,GAAS,GACT,EAAM,IAMV,MAAI,KAAU,EACb,EAAM,EACI,IAAQ,IAClB,GAAM,EAAK,QAEL,EAAK,MAAM,EAAO,GAE1B,IAAK,EAAI,EAAK,OAAS,EAAG,GAAK,EAAO,EAAE,EACvC,GAAI,EAAgB,EAAK,WAAW,KAGnC,GAAI,CAAC,GACJ,EAAQ,EAAI,EACZ,WAEK,AAAI,KAAQ,IAGlB,GAAe,GACf,EAAM,EAAI,GAIZ,MAAI,KAAQ,GACJ,GAED,EAAK,MAAM,EAAO,IAG1B,QAAQ,GACP,EAAe,EAAM,QACrB,GAAI,GAAQ,EACR,EAAW,GACX,EAAY,EACZ,EAAM,GACN,EAAe,GAGf,EAAc,EAMlB,AAAI,EAAK,QAAU,GAClB,EAAK,WAAW,KAAO,GACvB,EAAoB,EAAK,WAAW,KACpC,GAAQ,EAAY,GAGrB,OAAS,GAAI,EAAK,OAAS,EAAG,GAAK,EAAO,EAAE,GAC3C,KAAM,GAAO,EAAK,WAAW,GAC7B,GAAI,EAAgB,IAGnB,GAAI,CAAC,GACJ,EAAY,EAAI,EAChB,MAED,SAED,AAAI,IAAQ,IAGX,GAAe,GACf,EAAM,EAAI,GAEX,AAAI,IAAS,EAEZ,AAAI,IAAa,GAChB,EAAW,EAEH,IAAgB,GACxB,GAAc,GAEL,IAAa,IAGvB,GAAc,IAIhB,MAAI,KAAa,IAChB,IAAQ,IAER,IAAgB,GAEf,IAAgB,GAChB,IAAa,EAAM,GACnB,IAAa,EAAY,EACnB,GAED,EAAK,MAAM,EAAU,IAG7B,OAAQ,EAAQ,KAAK,KAAM,MAE3B,MAAM,GACL,EAAe,EAAM,QAErB,KAAM,GAAM,CAAE,KAAM,GAAI,IAAK,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,IAC1D,GAAI,EAAK,SAAW,EACnB,MAAO,GAGR,KAAM,GAAM,EAAK,OACjB,GAAI,GAAU,EACV,EAAO,EAAK,WAAW,GAE3B,GAAI,IAAQ,EACX,MAAI,GAAgB,GAGnB,GAAI,KAAO,EAAI,IAAM,EACd,GAER,GAAI,KAAO,EAAI,KAAO,EACf,GAGR,GAAI,EAAgB,IAInB,GADA,EAAU,EACN,EAAgB,EAAK,WAAW,KAEnC,GAAI,GAAI,EACJ,EAAO,EAEX,KAAO,EAAI,GAAO,CAAC,EAAgB,EAAK,WAAW,KAClD,IAED,GAAI,EAAI,GAAO,IAAM,GAIpB,IAFA,EAAO,EAEA,EAAI,GAAO,EAAgB,EAAK,WAAW,KACjD,IAED,GAAI,EAAI,GAAO,IAAM,GAIpB,IAFA,EAAO,EAEA,EAAI,GAAO,CAAC,EAAgB,EAAK,WAAW,KAClD,IAED,AAAI,IAAM,EAET,EAAU,EACA,IAAM,GAEhB,GAAU,EAAI,cAKR,EAAoB,IAAS,EAAK,WAAW,KAAO,GAE9D,GAAI,GAAO,EAGV,SAAI,KAAO,EAAI,IAAM,EACd,EAGR,GADA,EAAU,EACN,EAAgB,EAAK,WAAW,KACnC,GAAI,IAAQ,EAGX,SAAI,KAAO,EAAI,IAAM,EACd,EAER,EAAU,GAGZ,AAAI,EAAU,GACb,GAAI,KAAO,EAAK,MAAM,EAAG,IAG1B,GAAI,GAAW,GACX,EAAY,EACZ,EAAM,GACN,EAAe,GACf,EAAI,EAAK,OAAS,EAIlB,EAAc,EAGlB,KAAO,GAAK,EAAS,EAAE,GAEtB,GADA,EAAO,EAAK,WAAW,GACnB,EAAgB,IAGnB,GAAI,CAAC,GACJ,EAAY,EAAI,EAChB,MAED,SAED,AAAI,IAAQ,IAGX,GAAe,GACf,EAAM,EAAI,GAEX,AAAI,IAAS,EAEZ,AAAI,IAAa,GAChB,EAAW,EACD,IAAgB,GAC1B,GAAc,GAEL,IAAa,IAGvB,GAAc,IAIhB,MAAI,KAAQ,IACX,CAAI,IAAa,IAEhB,IAAgB,GAEf,IAAgB,GAChB,IAAa,EAAM,GACnB,IAAa,EAAY,EAC1B,EAAI,KAAO,EAAI,KAAO,EAAK,MAAM,EAAW,GAE5C,GAAI,KAAO,EAAK,MAAM,EAAW,GACjC,EAAI,KAAO,EAAK,MAAM,EAAW,GACjC,EAAI,IAAM,EAAK,MAAM,EAAU,KAOjC,AAAI,EAAY,GAAK,IAAc,EAClC,EAAI,IAAM,EAAK,MAAM,EAAG,EAAY,GAEpC,EAAI,IAAM,EAAI,KAGR,GAGR,IAAK,KACL,UAAW,IACX,MAAO,KACP,MAAO,MAGK,EAAA,MAAe,CAE3B,WAAW,GACV,GAAI,GAAe,GACf,EAAmB,GAEvB,OAAS,GAAI,EAAa,OAAS,EAAG,GAAK,IAAM,CAAC,EAAkB,KACnE,KAAM,GAAO,GAAK,EAAI,EAAa,GAAK,EAAQ,MAKhD,AAHA,EAAe,EAAM,QAGjB,EAAK,SAAW,GAIpB,GAAe,GAAG,KAAQ,IAC1B,EAAmB,EAAK,WAAW,KAAO,GAU3C,MAHA,GAAe,EAAgB,EAAc,CAAC,EAAkB,IAC/D,GAEG,EACI,IAAI,IAEL,EAAa,OAAS,EAAI,EAAe,KAGjD,UAAU,GAGT,GAFA,EAAe,EAAM,QAEjB,EAAK,SAAW,EACnB,MAAO,IAGR,KAAM,GAAa,EAAK,WAAW,KAAO,EACpC,EACL,EAAK,WAAW,EAAK,OAAS,KAAO,EAKtC,MAFA,GAAO,EAAgB,EAAM,CAAC,EAAY,IAAK,GAE3C,EAAK,SAAW,EACf,EACI,IAED,EAAoB,KAAO,IAE/B,IACH,IAAQ,KAGF,EAAa,IAAI,IAAS,IAGlC,WAAW,GACV,SAAe,EAAM,QACd,EAAK,OAAS,GAAK,EAAK,WAAW,KAAO,GAGlD,QAAQ,GACP,GAAI,EAAM,SAAW,EACpB,MAAO,IAER,GAAI,GACJ,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,EAAE,GACnC,KAAM,GAAM,EAAM,GAClB,EAAe,EAAK,QAChB,EAAI,OAAS,GAChB,CAAI,IAAW,OACd,EAAS,EAET,GAAU,IAAI,KAIjB,MAAI,KAAW,OACP,IAED,EAAA,MAAM,UAAU,IAGxB,SAAS,EAAc,GAYtB,GAXA,EAAe,EAAM,QACrB,EAAe,EAAI,MAEf,IAAS,GAKb,GAAO,EAAA,MAAM,QAAQ,GACrB,EAAK,EAAA,MAAM,QAAQ,GAEf,IAAS,GACZ,MAAO,GAGR,KAAM,GAAY,EACZ,EAAU,EAAK,OACf,EAAU,EAAU,EACpB,EAAU,EACV,EAAQ,EAAG,OAAS,EAGpB,EAAU,EAAU,EAAQ,EAAU,EAC5C,GAAI,GAAgB,GAChB,EAAI,EACR,KAAO,EAAI,EAAQ,KAClB,KAAM,GAAW,EAAK,WAAW,EAAY,GAC7C,GAAI,IAAa,EAAG,WAAW,EAAU,GACxC,MACM,AAAI,IAAa,GACvB,GAAgB,GAGlB,GAAI,IAAM,EACT,GAAI,EAAQ,GACX,GAAI,EAAG,WAAW,EAAU,KAAO,EAGlC,MAAO,GAAG,MAAM,EAAU,EAAI,GAE/B,GAAI,IAAM,EAGT,MAAO,GAAG,MAAM,EAAU,OAErB,AAAI,GAAU,GACpB,CAAI,EAAK,WAAW,EAAY,KAAO,EAGtC,EAAgB,EACN,IAAM,GAGhB,GAAgB,IAKnB,GAAI,GAAM,GAGV,IAAK,EAAI,EAAY,EAAgB,EAAG,GAAK,EAAS,EAAE,EACvD,AAAI,KAAM,GAAW,EAAK,WAAW,KAAO,IAC3C,IAAO,EAAI,SAAW,EAAI,KAAO,OAMnC,MAAO,GAAG,IAAM,EAAG,MAAM,EAAU,MAGpC,iBAAiB,GAEhB,MAAO,IAGR,QAAQ,GAEP,GADA,EAAe,EAAM,QACjB,EAAK,SAAW,EACnB,MAAO,IAER,KAAM,GAAU,EAAK,WAAW,KAAO,EACvC,GAAI,GAAM,GACN,EAAe,GACnB,OAAS,GAAI,EAAK,OAAS,EAAG,GAAK,EAAG,EAAE,EACvC,GAAI,EAAK,WAAW,KAAO,GAC1B,GAAI,CAAC,GACJ,EAAM,EACN,WAID,GAAe,GAIjB,MAAI,KAAQ,GACJ,EAAU,IAAM,IAEpB,GAAW,IAAQ,EACf,KAED,EAAK,MAAM,EAAG,IAGtB,SAAS,EAAc,GACtB,AAAI,IAAQ,QACX,EAAe,EAAK,OAErB,EAAe,EAAM,QAErB,GAAI,GAAQ,EACR,EAAM,GACN,EAAe,GACf,EAEJ,GAAI,IAAQ,QAAa,EAAI,OAAS,GAAK,EAAI,QAAU,EAAK,QAC7D,GAAI,IAAQ,EACX,MAAO,GAER,GAAI,GAAS,EAAI,OAAS,EACtB,EAAmB,GACvB,IAAK,EAAI,EAAK,OAAS,EAAG,GAAK,EAAG,EAAE,GACnC,KAAM,GAAO,EAAK,WAAW,GAC7B,GAAI,IAAS,GAGZ,GAAI,CAAC,GACJ,EAAQ,EAAI,EACZ,WAGD,AAAI,KAAqB,IAGxB,GAAe,GACf,EAAmB,EAAI,GAEpB,GAAU,GAEb,CAAI,IAAS,EAAI,WAAW,GACvB,EAAE,GAAW,IAGhB,GAAM,GAKP,GAAS,GACT,EAAM,IAMV,MAAI,KAAU,EACb,EAAM,EACI,IAAQ,IAClB,GAAM,EAAK,QAEL,EAAK,MAAM,EAAO,GAE1B,IAAK,EAAI,EAAK,OAAS,EAAG,GAAK,EAAG,EAAE,EACnC,GAAI,EAAK,WAAW,KAAO,GAG1B,GAAI,CAAC,GACJ,EAAQ,EAAI,EACZ,WAEK,AAAI,KAAQ,IAGlB,GAAe,GACf,EAAM,EAAI,GAIZ,MAAI,KAAQ,GACJ,GAED,EAAK,MAAM,EAAO,IAG1B,QAAQ,GACP,EAAe,EAAM,QACrB,GAAI,GAAW,GACX,EAAY,EACZ,EAAM,GACN,EAAe,GAGf,EAAc,EAClB,OAAS,GAAI,EAAK,OAAS,EAAG,GAAK,EAAG,EAAE,GACvC,KAAM,GAAO,EAAK,WAAW,GAC7B,GAAI,IAAS,GAGZ,GAAI,CAAC,GACJ,EAAY,EAAI,EAChB,MAED,SAED,AAAI,IAAQ,IAGX,GAAe,GACf,EAAM,EAAI,GAEX,AAAI,IAAS,EAEZ,AAAI,IAAa,GAChB,EAAW,EAEH,IAAgB,GACxB,GAAc,GAEL,IAAa,IAGvB,GAAc,IAIhB,MAAI,KAAa,IAChB,IAAQ,IAER,IAAgB,GAEf,IAAgB,GAChB,IAAa,EAAM,GACnB,IAAa,EAAY,EACnB,GAED,EAAK,MAAM,EAAU,IAG7B,OAAQ,EAAQ,KAAK,KAAM,KAE3B,MAAM,GACL,EAAe,EAAM,QAErB,KAAM,GAAM,CAAE,KAAM,GAAI,IAAK,GAAI,KAAM,GAAI,IAAK,GAAI,KAAM,IAC1D,GAAI,EAAK,SAAW,EACnB,MAAO,GAER,KAAM,GAAa,EAAK,WAAW,KAAO,EAC1C,GAAI,GACJ,AAAI,EACH,GAAI,KAAO,IACX,EAAQ,GAER,EAAQ,EAET,GAAI,GAAW,GACX,EAAY,EACZ,EAAM,GACN,EAAe,GACf,EAAI,EAAK,OAAS,EAIlB,EAAc,EAGlB,KAAO,GAAK,EAAO,EAAE,GACpB,KAAM,GAAO,EAAK,WAAW,GAC7B,GAAI,IAAS,GAGZ,GAAI,CAAC,GACJ,EAAY,EAAI,EAChB,MAED,SAED,AAAI,IAAQ,IAGX,GAAe,GACf,EAAM,EAAI,GAEX,AAAI,IAAS,EAEZ,AAAI,IAAa,GAChB,EAAW,EACD,IAAgB,GAC1B,GAAc,GAEL,IAAa,IAGvB,GAAc,IAIhB,GAAI,IAAQ,IACX,KAAM,GAAQ,IAAc,GAAK,EAAa,EAAI,EAClD,AAAI,IAAa,IAEhB,IAAgB,GAEf,IAAgB,GAChB,IAAa,EAAM,GACnB,IAAa,EAAY,EAC1B,EAAI,KAAO,EAAI,KAAO,EAAK,MAAM,EAAO,GAExC,GAAI,KAAO,EAAK,MAAM,EAAO,GAC7B,EAAI,KAAO,EAAK,MAAM,EAAO,GAC7B,EAAI,IAAM,EAAK,MAAM,EAAU,IAIjC,MAAI,GAAY,EACf,EAAI,IAAM,EAAK,MAAM,EAAG,EAAY,GAC1B,GACV,GAAI,IAAM,KAGJ,GAGR,IAAK,IACL,UAAW,IACX,MAAO,KACP,MAAO,MAGR,EAAA,MAAM,MAAQ,EAAA,MAAM,MAAQ,EAAA,MAC5B,EAAA,MAAM,MAAQ,EAAA,MAAM,MAAQ,EAAA,MAEf,EAAA,UAAa,EAAQ,WAAa,QAAU,EAAA,MAAM,UAAY,EAAA,MAAM,UACpE,EAAA,WAAc,EAAQ,WAAa,QAAU,EAAA,MAAM,WAAa,EAAA,MAAM,WACtE,EAAA,KAAQ,EAAQ,WAAa,QAAU,EAAA,MAAM,KAAO,EAAA,MAAM,KAC1D,EAAA,QAAW,EAAQ,WAAa,QAAU,EAAA,MAAM,QAAU,EAAA,MAAM,QAChE,EAAA,SAAY,EAAQ,WAAa,QAAU,EAAA,MAAM,SAAW,EAAA,MAAM,SAClE,EAAA,QAAW,EAAQ,WAAa,QAAU,EAAA,MAAM,QAAU,EAAA,MAAM,QAChE,EAAA,SAAY,EAAQ,WAAa,QAAU,EAAA,MAAM,SAAW,EAAA,MAAM,SAClE,EAAA,QAAW,EAAQ,WAAa,QAAU,EAAA,MAAM,QAAU,EAAA,MAAM,QAChE,EAAA,OAAU,EAAQ,WAAa,QAAU,EAAA,MAAM,OAAS,EAAA,MAAM,OAC9D,EAAA,MAAS,EAAQ,WAAa,QAAU,EAAA,MAAM,MAAQ,EAAA,MAAM,MAC5D,EAAA,iBAAoB,EAAQ,WAAa,QAAU,EAAA,MAAM,iBAAmB,EAAA,MAAM,iBAClF,EAAA,IAAO,EAAQ,WAAa,QAAU,EAAA,MAAM,IAAM,EAAA,MAAM,IACxD,EAAA,UAAa,EAAQ,WAAa,QAAU,EAAA,MAAM,UAAY,EAAA,MAAM,qIC19CjF,KAAM,GAAqB,EAAA,QAAQ,aAAe,MAAO,GAAA,QAAQ,YAAY,KAAQ,WTPrF,QSmBC,YAAY,GACX,KAAK,gBAAkB,GAAqB,EAC5C,KAAK,WAAa,KAAK,OACvB,KAAK,UAAY,SAPJ,QAAO,EAA0B,IAC9C,MAAO,IAAI,GAAU,GASf,OACN,KAAK,UAAY,KAAK,OAGhB,UACN,MAAI,MAAK,YAAc,GACf,KAAK,UAAY,KAAK,WAEvB,KAAK,OAAS,KAAK,WAGnB,OACP,MAAO,MAAK,gBAAkB,EAAA,QAAQ,YAAY,MAAQ,KAAK,OA5BjE,EAAA,UAAA,sPCUA,GAAiB,GAAjB,AAAA,UAAiB,GACH,EAAA,KAAmB,IAAM,EAAA,WAAW,KAKjD,WAAwB,GACvB,MAAO,CAAC,EAAU,EAAW,KAAM,KAElC,GAAI,GAAU,GACV,EACJ,SAAS,EAAM,IACd,GAAI,GAEG,MAAI,GACV,EAAO,UAEP,EAAU,GAGJ,EAAS,KAAK,EAAU,IAC7B,KAAM,GAEL,GACH,EAAO,UAGD,GArBO,EAAA,KAAI,EA6BpB,WAA0B,EAAiB,GAC1C,MAAO,GAAS,CAAC,EAAU,EAAW,KAAM,IAAiB,EAAM,GAAK,EAAS,KAAK,EAAU,EAAI,IAAK,KAAM,IADhG,EAAA,IAAG,EAQnB,WAA2B,EAAiB,GAC3C,MAAO,GAAS,CAAC,EAAU,EAAW,KAAM,IAAiB,EAAM,IAAO,EAAK,GAAI,EAAS,KAAK,EAAU,IAAO,KAAM,IADzG,EAAA,QAAO,EAUvB,WAA0B,EAAiB,GAC1C,MAAO,GAAS,CAAC,EAAU,EAAW,KAAM,IAAiB,EAAM,GAAK,EAAO,IAAM,EAAS,KAAK,EAAU,GAAI,KAAM,IADxG,EAAA,OAAM,EAOtB,WAA0B,GACzB,MAAO,GADQ,EAAA,OAAM,EAUtB,cAA0B,GACzB,MAAO,CAAC,EAAU,EAAW,KAAM,IAAiB,AV1FtD,GU0FsD,EAAA,oBAAmB,GAAG,EAAO,IAAI,GAAS,EAAM,GAAK,EAAS,KAAK,EAAU,GAAI,KAAM,KAD5H,EAAA,IAAG,EAQnB,WAA6B,EAAiB,EAA6C,GAC1F,GAAI,GAAwB,EAE5B,MAAO,GAAU,EAAO,GACvB,GAAS,EAAM,EAAQ,GAChB,IALO,EAAA,OAAM,EActB,WAA4B,GAC3B,GAAI,GACJ,KAAM,GAAU,GAAI,GAAW,CAC9B,qBACC,EAAW,EAAM,EAAQ,KAAM,IAEhC,uBACC,EAAS,aAIX,MAAO,GAAQ,MAXA,EAAA,SAAQ,EAyBxB,WAA+B,EAAiB,EAA6C,EAAgB,IAAK,EAAU,GAAO,GAElI,GAAI,GACA,EACA,EACA,EAAoB,EAExB,KAAM,GAAU,GAAI,GAAW,CAC9B,uBACA,qBACC,EAAe,EAAM,IACpB,IACA,EAAS,EAAM,EAAQ,GAEnB,GAAW,CAAC,GACf,GAAQ,KAAK,GACb,EAAS,QAGV,aAAa,GACb,EAAS,WAAW,KACnB,KAAM,IAAU,EAChB,EAAS,OACT,EAAS,OACL,EAAC,GAAW,EAAoB,IACnC,EAAQ,KAAK,IAGd,EAAoB,GAClB,MAGL,uBACC,EAAa,aAIf,MAAO,GAAQ,MArCA,EAAA,SAAQ,EA6CxB,WAA6B,GAC5B,KAAM,GAAQ,GAAI,QAAO,UACzB,MAAO,GAAI,EAAK,GAAQ,GAAK,GAAI,QAAO,UAAY,GAFrC,EAAA,UAAS,EASzB,WAAyB,GACxB,GAAI,GAAY,GACZ,EAEJ,MAAO,GAAO,EAAO,IACpB,KAAM,GAAa,GAAa,IAAU,EAC1C,SAAY,GACZ,EAAQ,EACD,IARO,EAAA,MAAK,EAkCrB,WAA0B,EAAiB,EAAW,GAAO,EAAe,IAC3E,GAAI,GAAqB,EAAQ,QAE7B,EAA+B,EAAM,IACxC,AAAI,EACH,EAAO,KAAK,GAEZ,EAAQ,KAAK,KAIf,KAAM,GAAQ,KACb,AAAI,GACH,EAAO,QAAQ,GAAK,EAAQ,KAAK,IAElC,EAAS,MAGJ,EAAU,GAAI,GAAW,CAC9B,qBACC,AAAK,GACJ,GAAW,EAAM,GAAK,EAAQ,KAAK,MAIrC,wBACC,AAAI,GACH,CAAI,EACH,WAAW,GAEX,MAKH,uBACC,AAAI,GACH,EAAS,UAEV,EAAW,QAIb,MAAO,GAAQ,MA3CA,EAAA,OAAM,EVhOvB,QU8RE,YAAqB,GAAA,KAAA,MAAA,EAErB,IAAO,GACN,MAAO,IAAI,GAAe,EAAI,KAAK,MAAO,IAG3C,QAAQ,GACP,MAAO,IAAI,GAAe,EAAQ,KAAK,MAAO,IAK/C,OAAO,GACN,MAAO,IAAI,GAAe,EAAO,KAAK,MAAO,IAG9C,OAAU,EAA6C,GACtD,MAAO,IAAI,GAAe,EAAO,KAAK,MAAO,EAAO,IAGrD,QACC,MAAO,IAAI,GAAe,EAAM,KAAK,QAKtC,SAAY,EAA6C,EAAgB,IAAK,EAAU,GAAO,GAC9F,MAAO,IAAI,GAAe,EAAS,KAAK,MAAO,EAAO,EAAO,EAAS,IAGvE,GAAG,EAAyB,EAAe,GAC1C,MAAO,MAAK,MAAM,EAAU,EAAU,GAGvC,KAAK,EAAyB,EAAe,GAC5C,MAAO,GAAK,KAAK,OAAO,EAAU,EAAU,IAI9C,WAAyB,GACxB,MAAO,IAAI,GAAe,GADX,EAAA,MAAK,EASrB,WAAwC,EAA2B,EAAmB,EAA6B,GAAM,GACxH,KAAM,GAAK,IAAI,IAAgB,EAAO,KAAK,EAAI,GAAG,IAC5C,EAAqB,IAAM,EAAQ,GAAG,EAAW,GACjD,EAAuB,IAAM,EAAQ,eAAe,EAAW,GAC/D,EAAS,GAAI,GAAW,CAAE,qBAAoB,yBAEpD,MAAO,GAAO,MANC,EAAA,qBAAoB,EAcpC,WAAuC,EAA0B,EAAmB,EAA6B,GAAM,GACtH,KAAM,GAAK,IAAI,IAAgB,EAAO,KAAK,EAAI,GAAG,IAC5C,EAAqB,IAAM,EAAQ,iBAAiB,EAAW,GAC/D,EAAuB,IAAM,EAAQ,oBAAoB,EAAW,GACpE,EAAS,GAAI,GAAW,CAAE,qBAAoB,yBAEpD,MAAO,GAAO,MANC,EAAA,oBAAmB,EASnC,YAAqC,GACpC,KAAM,GAAU,GAAI,GACpB,GAAI,GAAa,GAEjB,SACE,KAAK,OAAW,IAAM,MACtB,KAAK,KACL,AAAK,EAGJ,EAAQ,KAAK,QAFb,WAAW,IAAM,EAAQ,KAAK,QAAY,KAM7C,EAAa,GACN,EAAQ,MAfA,EAAA,YAAW,GAkB3B,YAA6B,GAC5B,MAAO,IAAI,SAAQ,GAAW,EAAK,GAAO,IAD3B,EAAA,UAAS,KApWT,EAAA,EAAA,OAAA,GAAA,MAAK,KVnBtB,QUoZC,YAAY,GAJJ,KAAA,eAAyB,EACzB,KAAA,iBAAmB,EACnB,KAAA,gBAAkB,EAGzB,KAAK,MAAQ,GAAG,KAAQ,EAAe,YAGxC,MAAM,GACL,KAAK,WAAa,GAAI,GAAA,UAAU,IAChC,KAAK,eAAiB,EAGvB,OACC,GAAI,KAAK,YACR,KAAM,GAAU,KAAK,WAAW,UAChC,KAAK,iBAAmB,EACxB,KAAK,kBAAoB,EAEzB,QAAQ,KAAK,YAAY,KAAK,sBAAsB,EAAQ,QAAQ,iBAAiB,KAAK,oCAAoC,KAAK,gBAAgB,QAAQ,oBAAoB,KAAK,qBACpL,KAAK,WAAa,SAxBL,EAAA,QAAU,EA6B1B,GAAI,GAA8B,GAClC,WAA8C,GAC7C,KAAM,GAAW,EACjB,SAA8B,EACvB,CACN,UACC,EAA8B,IALjC,EAAA,8BAAA,EV1aA,QUybC,YACU,EACA,EAAe,KAAK,SAAS,SAAS,IAAI,MAAM,EAAG,IADnD,KAAA,gBAAA,EACA,KAAA,KAAA,EAJF,KAAA,eAAyB,EAOjC,UACC,AAAI,KAAK,SACR,KAAK,QAAQ,QAIf,MAAM,GAEL,GAAI,GAAY,EAKhB,GAJI,MAAO,MAAK,iBAAoB,UACnC,GAAY,KAAK,iBAGd,KAAa,GAAK,EAAgB,IAItC,AAAK,KAAK,SACT,MAAK,QAAU,GAAI,MAEpB,KAAM,GAAQ,GAAI,SAAQ,MAAO,MAAM;GAAM,MAAM,GAAG,KAAK;GACrD,EAAS,KAAK,QAAQ,IAAI,IAAU,EAI1C,GAHA,KAAK,QAAQ,IAAI,EAAO,EAAQ,GAChC,KAAK,gBAAkB,EAEnB,KAAK,gBAAkB,GAG1B,KAAK,eAAiB,EAAY,GAGlC,GAAI,GACA,EAAmB,EACvB,SAAW,CAAC,EAAO,IAAU,MAAK,QACjC,AAAI,EAAC,GAAY,EAAW,IAC3B,GAAW,EACX,EAAW,GAIb,QAAQ,KAAK,IAAI,KAAK,kDAAkD,gDAA4D,OACpI,QAAQ,KAAK,GAGd,MAAO,KACN,KAAM,GAAS,KAAK,QAAS,IAAI,IAAU,EAC3C,KAAK,QAAS,IAAI,EAAO,EAAQ,MV5epC,QUkhBC,YAAY,SALJ,KAAA,UAAqB,GAM5B,KAAK,SAAW,EAChB,KAAK,YAAc,EAA8B,EAAI,GAAI,GAAe,KAAK,UAAY,KAAK,SAAS,sBAAwB,OAC/H,KAAK,SAAW,IAAA,KAAK,YAAQ,MAAA,IAAA,OAAA,OAAA,EAAE,WAAY,GAAI,GAAe,KAAK,SAAS,WAAa,UAOtF,SACH,MAAK,MAAK,QACT,MAAK,OAAS,CAAC,EAAyB,EAAgB,WACvD,AAAK,KAAK,YACT,MAAK,WAAa,GAAI,GAAA,YAGvB,KAAM,GAAgB,KAAK,WAAW,UAEtC,AAAI,GAAiB,KAAK,UAAY,KAAK,SAAS,oBACnD,KAAK,SAAS,mBAAmB,MAGlC,KAAM,GAAS,KAAK,WAAW,KAAK,AAAC,EAAsB,CAAC,EAAU,GAAtB,GAEhD,AAAI,GAAiB,KAAK,UAAY,KAAK,SAAS,uBACnD,KAAK,SAAS,sBAAsB,MAGjC,KAAK,UAAY,KAAK,SAAS,kBAClC,KAAK,SAAS,iBAAiB,KAAM,EAAU,GAIhD,KAAM,GAAgB,GAAA,KAAK,eAAW,MAAA,IAAA,OAAA,OAAA,EAAE,MAAM,KAAK,WAAW,MAE9D,GAAI,GACJ,SAAS,CACR,QAAS,KACR,AAAI,GACH,IAED,EAAO,QAAU,EAAQ,MACpB,KAAK,WACT,KACI,KAAK,UAAY,KAAK,SAAS,sBAE7B,CADiB,KAAK,YAAc,CAAC,KAAK,WAAW,WAEzD,KAAK,SAAS,qBAAqB,UAMxC,AAAI,YAAuB,GAAA,gBAC1B,EAAY,IAAI,GACN,MAAM,QAAQ,IACxB,EAAY,KAAK,GAGX,IAGF,KAAK,OAOb,KAAK,WACJ,GAAI,KAAK,YAKR,AAAK,KAAK,gBACT,MAAK,eAAiB,GAAI,GAAA,YAG3B,OAAS,KAAY,MAAK,WACzB,KAAK,eAAe,KAAK,CAAC,EAAU,IAMrC,IAFA,GAAA,KAAK,YAAQ,MAAA,IAAA,QAAA,EAAE,MAAM,KAAK,eAAe,MAElC,KAAK,eAAe,KAAO,IACjC,KAAM,CAAC,EAAU,GAAS,KAAK,eAAe,QAC9C,IACC,AAAI,MAAO,IAAa,WACvB,EAAS,KAAK,OAAW,GAEzB,EAAS,GAAG,KAAK,EAAS,GAAI,SAEvB,GACR,AAAA,AVlnBL,GUknBK,EAAA,mBAAkB,IAIpB,AAAA,GAAA,KAAK,YAAQ,MAAA,IAAA,QAAA,EAAE,QAIjB,oBACC,AAAA,GAAA,KAAK,cAAU,MAAA,IAAA,QAAA,EAAE,QACjB,GAAA,KAAK,kBAAc,MAAA,IAAA,QAAA,EAAE,QACrB,GAAA,KAAK,eAAW,MAAA,IAAA,QAAA,EAAE,UAClB,KAAK,UAAY,IAxHnB,EAAA,QAAA,EAEyB,EAAA,MAAQ,aVxgBjC,eUkoByC,GAMxC,YAAY,GACX,MAAM,GALC,KAAA,UAAY,EACZ,KAAA,YAAc,GAAI,GAAA,WAKzB,KAAK,SAAW,GAAO,KAAA,OAAP,EAAS,MAG1B,QACC,KAAK,YAGN,SACC,GAAI,KAAK,YAAc,GAAK,EAAE,KAAK,WAAc,EAChD,GAAI,KAAK,UAGR,KAAM,GAAS,MAAM,KAAK,KAAK,aAC/B,KAAK,YAAY,QACjB,MAAM,KAAK,KAAK,SAAS,QAKzB,MAAO,CAAC,KAAK,WAAa,KAAK,YAAY,OAAS,GACnD,MAAM,KAAK,KAAK,YAAY,SAMvB,KAAK,GACb,AAAI,KAAK,YACR,CAAI,KAAK,YAAc,EACtB,KAAK,YAAY,KAAK,GAEtB,MAAM,KAAK,KAvCf,EAAA,iBAAA,EVloBA,QUqrBC,cAHQ,KAAA,aAAe,GACf,KAAA,OAA+D,GAGtE,KAAK,QAAU,GAAI,GAAW,CAC7B,mBAAoB,IAAM,KAAK,qBAC/B,qBAAsB,IAAM,KAAK,4BAI/B,SACH,MAAO,MAAK,QAAQ,MAGrB,IAAI,GACH,KAAM,GAAI,CAAE,MAAO,EAAO,SAAU,MACpC,KAAK,OAAO,KAAK,GAEb,KAAK,cACR,KAAK,KAAK,GAGX,KAAM,GAAU,KACf,AAAI,KAAK,cACR,KAAK,OAAO,GAGb,KAAM,GAAM,KAAK,OAAO,QAAQ,GAChC,KAAK,OAAO,OAAO,EAAK,IAGzB,MAAO,AVjtBT,GUitBS,EAAA,cAAa,AVjtBtB,GUitBsB,EAAA,MAAO,IAGpB,qBACP,KAAK,aAAe,GACpB,KAAK,OAAO,QAAQ,GAAK,KAAK,KAAK,IAG5B,uBACP,KAAK,aAAe,GACpB,KAAK,OAAO,QAAQ,GAAK,KAAK,OAAO,IAG9B,KAAK,GACZ,EAAE,SAAW,EAAE,MAAM,GAAK,KAAK,QAAQ,KAAK,IAGrC,OAAO,GACd,AAAI,EAAE,UACL,EAAE,SAAS,UAEZ,EAAE,SAAW,KAGd,UACC,KAAK,QAAQ,WA3Df,EAAA,iBAAA,EV/qBA,QUkwBA,cAES,KAAA,QAAwB,GAEhC,UAAa,GACZ,MAAO,CAAC,EAAU,EAAW,IACrB,EAAM,IACZ,KAAM,GAAS,KAAK,QAAQ,KAAK,QAAQ,OAAS,GAElD,AAAI,EACH,EAAO,KAAK,IAAM,EAAS,KAAK,EAAU,IAE1C,EAAS,KAAK,EAAU,IAEvB,OAAW,GAIhB,aAAuB,GACtB,KAAM,GAAyB,GAC/B,KAAK,QAAQ,KAAK,GAClB,KAAM,GAAI,IACV,YAAK,QAAQ,MACb,EAAO,QAAQ,GAAS,KACjB,GAxBT,EAAA,cAAA,EVlwBA,QUoyBA,cAES,KAAA,UAAY,GACZ,KAAA,WAAuB,EAAM,KAC7B,KAAA,mBAAkC,EAAA,WAAW,KAEpC,KAAA,QAAU,GAAI,GAAW,CACzC,sBAAuB,KACtB,KAAK,UAAY,GACjB,KAAK,mBAAqB,KAAK,WAAW,KAAK,QAAQ,KAAM,KAAK,UAEnE,qBAAsB,KACrB,KAAK,UAAY,GACjB,KAAK,mBAAmB,aAIjB,KAAA,MAAkB,KAAK,QAAQ,SAEpC,OAAM,GACT,KAAK,WAAa,EAEd,KAAK,WACR,MAAK,mBAAmB,UACxB,KAAK,mBAAqB,EAAM,KAAK,QAAQ,KAAM,KAAK,UAI1D,UACC,KAAK,mBAAmB,UACxB,KAAK,QAAQ,WA9Bf,EAAA,MAAA,gKC1wBA,KAAM,GAA4B,OAAO,OAAO,SAAU,EAAU,GACnE,KAAM,GAAS,WAAW,EAAS,KAAK,GAAU,GAClD,MAAO,CAAE,UAAY,aAAa,OAGnC,GAAiB,GAAjB,AAAA,UAAiB,GAEhB,WAAoC,GAInC,MAHI,KAAU,EAAkB,MAAQ,IAAU,EAAkB,WAGhE,YAAiB,GACb,GAEJ,CAAC,GAAS,MAAO,IAAU,SACvB,GAED,MAAQ,GAA4B,yBAA4B,WACnE,MAAQ,GAA4B,yBAA4B,WAXrD,EAAA,oBAAmB,EAetB,EAAA,KAA0B,OAAO,OAAO,CACpD,wBAAyB,GACzB,wBAAyB,EAAA,MAAM,OAGnB,EAAA,UAA+B,OAAO,OAAO,CACzD,wBAAyB,GACzB,wBAAyB,MAxBV,EAAA,EAAA,mBAAA,GAAA,kBAAiB,KX/BlC,QW2DA,cAES,KAAA,aAAwB,GACxB,KAAA,SAAgC,KAEjC,SACN,AAAK,KAAK,cACT,MAAK,aAAe,GAChB,KAAK,UACR,MAAK,SAAS,KAAK,QACnB,KAAK,eAKJ,2BACH,MAAO,MAAK,gBAGT,2BACH,MAAI,MAAK,aACD,EAEH,MAAK,UACT,MAAK,SAAW,GAAI,GAAA,SAEd,KAAK,SAAS,OAGf,UACN,AAAI,KAAK,UACR,MAAK,SAAS,UACd,KAAK,SAAW,OX3FnB,QWqGC,YAAY,GAHJ,KAAA,OAA6B,OAC7B,KAAA,gBAAgC,OAGvC,KAAK,gBAAkB,GAAU,EAAO,wBAAwB,KAAK,OAAQ,SAG1E,SACH,MAAK,MAAK,QAGT,MAAK,OAAS,GAAI,IAEZ,KAAK,OAGb,SACC,AAAK,KAAK,OAMC,KAAK,iBAAkB,IAEjC,KAAK,OAAO,SAJZ,KAAK,OAAS,EAAkB,UAQlC,QAAQ,EAAkB,IACzB,AAAI,GACH,KAAK,SAEF,KAAK,iBACR,KAAK,gBAAgB,UAEtB,AAAK,KAAK,OAIC,KAAK,iBAAkB,IAEjC,KAAK,OAAO,UAJZ,KAAK,OAAS,EAAkB,MAxCnC,EAAA,wBAAA,mtCCxFA,WAAoC,GACnC,MAAI,CAAC,GAAO,MAAO,IAAQ,SACnB,GAED,EAAI,OAAO,SAAW,EAJ9B,EAAA,oBAAA,EAOA,KAAM,GAAgB,WAQtB,WAAuB,KAAkB,GACxC,MAAI,GAAK,SAAW,EACZ,EAED,EAAM,QAAQ,EAAe,SAAU,EAAO,GACpD,KAAM,GAAM,SAAS,EAAO,IAC5B,MAAO,OAAM,IAAQ,EAAM,GAAK,GAAO,EAAK,OAC3C,EACA,EAAK,KARR,EAAA,OAAA,EAgBA,WAAuB,GACtB,MAAO,GAAK,QAAQ,SAAU,SAAU,GACvC,OAAQ,OACF,IAAK,MAAO,WACZ,IAAK,MAAO,WACZ,IAAK,MAAO,gBACR,MAAO,MANnB,EAAA,OAAA,EAcA,WAAuC,GACtC,MAAO,GAAM,QAAQ,kCAAmC,QADzD,EAAA,uBAAA,EAOA,WAAsB,EAAe,GACpC,GAAI,GAAS,EACb,KAAM,GAAK,EAAU,WAAW,GAChC,OAAS,GAAI,EAAM,OAAS,EAAG,GAAK,EAAG,IACtC,AAAI,EAAM,WAAW,KAAO,GAC3B,IAGF,MAAO,GARR,EAAA,MAAA,EAWA,WAAyB,EAAe,EAAmB,EAAS,UACnE,MAAI,GAAM,QAAU,EACZ,EAGD,GAAG,EAAM,OAAO,EAAG,KAAa,IALxC,EAAA,SAAA,EAaA,WAAqB,EAAkB,EAAiB,KACvD,KAAM,GAAU,EAAM,EAAU,GAChC,MAAO,GAAM,EAAS,GAFvB,EAAA,KAAA,EAUA,WAAsB,EAAkB,GACvC,GAAI,CAAC,GAAY,CAAC,EACjB,MAAO,GAGR,KAAM,GAAY,EAAO,OACzB,GAAI,IAAc,GAAK,EAAS,SAAW,EAC1C,MAAO,GAGR,GAAI,GAAS,EAEb,KAAO,EAAS,QAAQ,EAAQ,KAAY,GAC3C,EAAS,EAAS,EAEnB,MAAO,GAAS,UAAU,GAf3B,EAAA,MAAA,EAuBA,WAAsB,EAAkB,GACvC,GAAI,CAAC,GAAY,CAAC,EACjB,MAAO,GAGR,KAAM,GAAY,EAAO,OACxB,EAAc,EAAS,OAExB,GAAI,IAAc,GAAK,IAAgB,EACtC,MAAO,GAGR,GAAI,GAAS,EACZ,EAAM,GAEP,KACC,EAAM,EAAS,YAAY,EAAQ,EAAS,GACxC,MAAQ,IAAM,EAAM,IAAc,KAGtC,GAAI,IAAQ,EACX,MAAO,GAER,EAAS,EAGV,MAAO,GAAS,UAAU,EAAG,GA1B9B,EAAA,MAAA,EA6BA,WAA4C,GAC3C,MAAO,GAAQ,QAAQ,wCAAyC,QAAQ,QAAQ,QAAS,MAD1F,EAAA,4BAAA,EAIA,WAA+B,GAC9B,MAAO,GAAQ,QAAQ,MAAO,IAD/B,EAAA,eAAA,EAYA,WAA6B,EAAsB,EAAkB,EAAyB,IAC7F,GAAI,CAAC,EACJ,KAAM,IAAI,OAAM,yCAEjB,AAAK,GACJ,GAAe,EAAuB,IAEnC,EAAQ,WACN,MAAK,KAAK,EAAa,OAAO,KAClC,GAAe,MAAQ,GAEnB,KAAK,KAAK,EAAa,OAAO,EAAa,OAAS,KACxD,GAAe,EAAe,QAGhC,GAAI,GAAY,GAChB,MAAI,GAAQ,QACX,IAAa,KAET,EAAQ,WACZ,IAAa,KAEV,EAAQ,WACX,IAAa,KAEV,EAAQ,SACX,IAAa,KAGP,GAAI,QAAO,EAAc,GA7BjC,EAAA,aAAA,EAgCA,WAAyC,GAGxC,MAAI,GAAO,SAAW,KAAO,EAAO,SAAW,MAAQ,EAAO,SAAW,KAAO,EAAO,SAAW,SAC1F,GAMD,CAAC,CAAE,CADI,EAAO,KAAK,KACP,EAAO,YAAc,GAVzC,EAAA,yBAAA,EAaA,WAA4C,GAC3C,MAAO,CAAC,CAAC,EAAY,MAAM,yBAD5B,EAAA,4BAAA,EAIA,WAA4B,GAC3B,MAAQ,GAAO,OAAS,IAAM,IAC1B,GAAO,WAAa,IAAM,IAC1B,GAAO,UAAY,IAAM,IACxB,GAAmD,QAAU,IAAM,IAJzE,EAAA,YAAA,EAOA,WAA2B,GAC1B,MAAO,GAAI,MAAM,cADlB,EAAA,WAAA,EAQA,WAAwC,GACvC,OAAS,GAAI,EAAG,EAAM,EAAI,OAAQ,EAAI,EAAK,KAC1C,KAAM,GAAS,EAAI,WAAW,GAC9B,GAAI,IAAM,IAAuB,IAAM,EACtC,MAAO,GAGT,MAAO,GAPR,EAAA,wBAAA,EAcA,WAAqC,EAAa,EAAgB,EAAG,EAAc,EAAI,QACtF,OAAS,GAAI,EAAO,EAAI,EAAK,KAC5B,KAAM,GAAS,EAAI,WAAW,GAC9B,GAAI,IAAM,IAAuB,IAAM,EACtC,MAAO,GAAI,UAAU,EAAO,GAG9B,MAAO,GAAI,UAAU,EAAO,GAP7B,EAAA,qBAAA,EAcA,WAAuC,EAAa,EAAqB,EAAI,OAAS,GACrF,OAAS,GAAI,EAAY,GAAK,EAAG,KAChC,KAAM,GAAS,EAAI,WAAW,GAC9B,GAAI,IAAM,IAAuB,IAAM,EACtC,MAAO,GAGT,MAAO,GAPR,EAAA,uBAAA,EAUA,WAAwB,EAAW,GAClC,MAAI,GAAI,EACA,GACG,EAAI,EACP,EAEA,EANT,EAAA,QAAA,EAUA,WAAiC,EAAW,EAAW,EAAiB,EAAG,EAAe,EAAE,OAAQ,EAAiB,EAAG,EAAe,EAAE,QACxI,KAAO,EAAS,GAAQ,EAAS,EAAM,IAAU,KAChD,GAAI,IAAQ,EAAE,WAAW,GACrB,GAAQ,EAAE,WAAW,GACzB,GAAI,GAAQ,GACX,MAAO,GACD,GAAI,GAAQ,GAClB,MAAO,GAGT,KAAM,GAAO,EAAO,EACd,GAAO,EAAO,EACpB,MAAI,GAAO,GACH,GACG,EAAO,GACV,EAED,EAjBR,EAAA,iBAAA,EAoBA,WAAkC,EAAW,GAC5C,MAAO,GAA2B,EAAG,EAAG,EAAG,EAAE,OAAQ,EAAG,EAAE,QAD3D,EAAA,kBAAA,EAIA,WAA2C,EAAW,EAAW,EAAiB,EAAG,EAAe,EAAE,OAAQ,EAAiB,EAAG,EAAe,EAAE,QAElJ,KAAO,EAAS,GAAQ,EAAS,EAAM,IAAU,KAEhD,GAAI,IAAQ,EAAE,WAAW,GACrB,GAAQ,EAAE,WAAW,GAEzB,GAAI,KAAU,IAKd,KAAM,IAAO,GAAQ,GACrB,GAAI,OAAS,IAAM,EAAmB,MAG3B,OAAS,KAAO,EAAmB,KAI9C,MAAI,GAAmB,KAAU,EAAmB,IAE5C,GAGA,EAAiB,EAAE,cAAe,EAAE,cAAe,EAAQ,EAAM,EAAQ,IAIlF,KAAM,GAAO,EAAO,EACd,GAAO,EAAO,EAEpB,MAAI,GAAO,GACH,GACG,EAAO,GACV,EAGD,EAtCR,EAAA,2BAAA,EAyCA,WAAmC,GAClC,MAAO,IAAI,IAAkB,GAAI,IADlC,EAAA,mBAAA,EAIA,WAAmC,GAClC,MAAO,IAAI,IAAkB,GAAI,GADlC,EAAA,mBAAA,EAIA,WAAuB,GACtB,MAAO,GAAmB,IAAS,EAAmB,GAGvD,WAAiC,EAAW,GAC3C,MAAO,GAAE,SAAW,EAAE,QAAU,EAAmB,EAAG,GADvD,EAAA,iBAAA,EAIA,WAA4B,EAAW,EAAW,EAAS,EAAE,QAC5D,OAAS,GAAI,EAAG,EAAI,EAAQ,KAC3B,KAAM,GAAQ,EAAE,WAAW,GACrB,EAAQ,EAAE,WAAW,GAE3B,GAAI,IAAU,GAKd,GAAI,EAAc,IAAU,EAAc,IACzC,KAAM,GAAO,KAAK,IAAI,EAAQ,GAC9B,GAAI,IAAS,GAAK,IAAS,GAC1B,MAAO,WAMJ,OAAO,aAAa,GAAO,gBAAkB,OAAO,aAAa,GAAO,cAC3E,MAAO,IAKV,MAAO,GAGR,WAAqC,EAAa,GACjD,KAAM,GAAkB,EAAU,OAClC,MAAI,GAAU,OAAS,EAAI,OACnB,GAGD,EAAmB,EAAK,EAAW,GAN3C,EAAA,qBAAA,EAYA,WAAmC,EAAW,GAE7C,GAAI,GACH,EAAM,KAAK,IAAI,EAAE,OAAQ,EAAE,QAE5B,IAAK,EAAI,EAAG,EAAI,EAAK,IACpB,GAAI,EAAE,WAAW,KAAO,EAAE,WAAW,GACpC,MAAO,GAIT,MAAO,GAXR,EAAA,mBAAA,EAiBA,WAAmC,EAAW,GAE7C,GAAI,GACH,EAAM,KAAK,IAAI,EAAE,OAAQ,EAAE,QAE5B,KAAM,GAAa,EAAE,OAAS,EACxB,EAAa,EAAE,OAAS,EAE9B,IAAK,EAAI,EAAG,EAAI,EAAK,IACpB,GAAI,EAAE,WAAW,EAAa,KAAO,EAAE,WAAW,EAAa,GAC9D,MAAO,GAIT,MAAO,GAdR,EAAA,mBAAA,EAoBA,YAAgC,GAC/B,MAAQ,QAAU,GAAY,GAAY,MAD3C,EAAA,gBAAA,GAOA,YAA+B,GAC9B,MAAQ,QAAU,GAAY,GAAY,MAD3C,EAAA,eAAA,GAOA,WAAiC,EAAuB,GACvD,MAAS,GAAgB,OAAW,IAAO,GAAe,OAAU,MADrE,EAAA,iBAAA,EAOA,WAAiC,EAAa,EAAa,GAC1D,KAAM,GAAW,EAAI,WAAW,GAChC,GAAI,GAAgB,IAAa,EAAS,EAAI,GAC7C,KAAM,GAAe,EAAI,WAAW,EAAS,GAC7C,GAAI,GAAe,GAClB,MAAO,GAAiB,EAAU,GAGpC,MAAO,GARR,EAAA,iBAAA,EAcA,WAA0B,EAAa,GACtC,KAAM,GAAW,EAAI,WAAW,EAAS,GACzC,GAAI,GAAe,IAAa,EAAS,GACxC,KAAM,GAAe,EAAI,WAAW,EAAS,GAC7C,GAAI,GAAgB,GACnB,MAAO,GAAiB,EAAc,GAGxC,MAAO,GAGR,WAA+B,EAAa,GAC3C,KAAM,GAAoB,GAAkB,cACtC,EAAgB,EAChB,EAAM,EAAI,OAEV,EAAmB,EAAiB,EAAK,EAAK,GACpD,GAAW,GAAgB,MAAkD,EAAI,EAEjF,GAAI,GAAoB,EAAkB,qBAAqB,GAC/D,KAAO,EAAS,IACf,KAAM,IAAgB,EAAiB,EAAK,EAAK,GAC3C,GAAwB,EAAkB,qBAAqB,IACrE,GAAI,GAA8B,EAAmB,IACpD,MAED,GAAW,IAAa,MAAkD,EAAI,EAC9E,EAAoB,GAGrB,MAAQ,GAAS,EAnBlB,EAAA,eAAA,EAsBA,WAA+B,EAAa,GAC3C,KAAM,GAAoB,GAAkB,cACtC,EAAgB,EAEhB,EAAmB,EAAiB,EAAK,GAC/C,GAAW,GAAgB,MAAkD,EAAI,EAEjF,GAAI,GAAoB,EAAkB,qBAAqB,GAC/D,KAAO,EAAS,IACf,KAAM,GAAgB,EAAiB,EAAK,GACtC,GAAwB,EAAkB,qBAAqB,GACrE,GAAI,GAA8B,GAAuB,GACxD,MAED,GAAW,GAAa,MAAkD,EAAI,EAC9E,EAAoB,GAGrB,MAAQ,GAAgB,EAlBzB,EAAA,eAAA,EAqBA,WAAkC,EAAa,GAC9C,KAAM,GAAoB,GAAkB,cACtC,EAAM,EAAI,OACV,EAAgB,EAChB,EAAmB,EAAiB,EAAK,EAAK,GAC9C,EAA2B,EAAkB,qBAAqB,GACxE,GAAW,GAAgB,MAAkD,EAAI,EAGjF,GAAI,IAAoB,EACxB,KAAO,EAAS,IACf,KAAM,IAAgB,EAAiB,EAAK,EAAK,GAC3C,GAAwB,EAAkB,qBAAqB,IACrE,GAAI,GAA8B,GAAmB,IACpD,MAED,GAAW,IAAa,MAAkD,EAAI,EAC9E,GAAoB,GAErB,KAAM,IAAY,EAKlB,IAFA,EAAS,EACT,GAAoB,EACb,EAAS,IACf,KAAM,IAAgB,EAAiB,EAAK,GACtC,GAAwB,EAAkB,qBAAqB,IACrE,GAAI,GAA8B,GAAuB,IACxD,MAED,GAAW,IAAa,MAAkD,EAAI,EAC9E,GAAoB,GAGrB,MAAO,CAAC,EAAQ,IAGjB,WAAwC,EAAa,GACpD,MAAI,GAAS,GAAK,GAAe,EAAI,WAAW,IACxC,EAAyB,EAAK,EAAS,GAExC,EAAyB,EAAK,GAJtC,EAAA,wBAAA,EAWA,WAA2B,GAC1B,KAAM,GAAS,EAAI,OAKnB,GAAI,GAAa,EACb,EAAY,EAChB,KAAO,EAAY,IAClB,KAAM,GAAY,EAAiB,EAAK,EAAQ,GAChD,GAAc,GAAS,MAAkD,EAAI,EAE7E,AAAI,EAAY,IACf,GAAc,EACR,AAAI,EAAY,KACtB,GAAc,EACR,AAAI,EAAY,MACtB,GAAc,EAEd,GAAc,EAKhB,KAAM,GAAM,GAAI,YAAW,GAC3B,EAAY,EACZ,GAAI,GAAY,EAChB,KAAO,EAAY,IAClB,KAAM,GAAY,EAAiB,EAAK,EAAQ,GAChD,GAAc,GAAS,MAAkD,EAAI,EAE7E,AAAI,EAAY,IACf,EAAI,KAAe,EACb,AAAI,EAAY,KACtB,GAAI,KAAe,IAAe,GAAY,QAAwC,EACtF,EAAI,KAAe,IAAe,GAAY,MAAwC,GAChF,AAAI,EAAY,MACtB,GAAI,KAAe,IAAe,GAAY,SAAwC,GACtF,EAAI,KAAe,IAAe,GAAY,QAAwC,EACtF,EAAI,KAAe,IAAe,GAAY,MAAwC,GAEtF,GAAI,KAAe,IAAe,GAAY,WAAwC,GACtF,EAAI,KAAe,IAAe,GAAY,UAAwC,GACtF,EAAI,KAAe,IAAe,GAAY,QAAwC,EACtF,EAAI,KAAe,IAAe,GAAY,MAAwC,GAIxF,MAAO,GAhDR,EAAA,WAAA,EAuDA,WAA2B,GAG1B,KAAM,GAAM,EAAO,WACb,EAAmB,GACzB,GAAI,GAAS,EACb,KAAO,EAAS,IACf,KAAM,GAAK,EAAO,GAClB,GAAI,GA2BJ,GA1BA,AAAI,GAAM,KAAc,EAAS,EAAI,EAEpC,EACI,GAAO,KAAY,IAAe,KAAQ,EACxC,GAAO,KAAY,KAAe,KAAQ,EAC1C,GAAO,KAAY,KAAe,IAAO,EACzC,GAAO,KAAY,KAAe,IAAO,EAEzC,AAAI,GAAM,KAAc,EAAS,EAAI,EAE3C,EACI,GAAO,KAAY,KAAe,KAAQ,EACxC,GAAO,KAAY,KAAe,IAAO,EACzC,GAAO,KAAY,KAAe,IAAO,EAEzC,AAAI,GAAM,KAAc,EAAS,EAAI,EAE3C,EACI,GAAO,KAAY,KAAe,IAAO,EACvC,GAAO,KAAY,KAAe,IAAO,EAI/C,EAAY,EAAO,KAGf,GAAa,GAAK,GAAa,OAAY,GAAa,OAAU,GAAa,MAEnF,EAAO,KAAK,OAAO,aAAa,YACtB,GAAa,OAAY,GAAa,SAEhD,KAAM,GAAS,EAAY,MACrB,GAAK,MAAW,IAAS,WAA4B,IACrD,GAAK,MAAW,IAAS,QAA4B,GAC3D,EAAO,KAAK,OAAO,aAAa,KAChC,EAAO,KAAK,OAAO,aAAa,SAGhC,GAAO,KAAK,OAAO,aAAa,QAIlC,MAAO,GAAO,KAAK,IAnDpB,EAAA,WAAA,EAyDA,KAAM,GAAe,2eAKrB,WAA4B,GAC3B,MAAO,GAAa,KAAK,GAD1B,EAAA,YAAA,EAOA,KAAM,IAAiB,gLAEvB,YAA8B,GAC7B,MAAO,IAAe,KAAK,GAD5B,EAAA,cAAA,GAIA,KAAM,IAAiB,uBAIvB,YAA6B,GAC5B,MAAO,IAAe,KAAK,GAD5B,EAAA,aAAA,GAIa,EAAA,yBAA2B,iBAIxC,YAA+C,GAC9C,MAAO,GAAA,yBAAyB,KAAK,GADtC,EAAA,+BAAA,GAIA,YAA2C,GAC1C,OAAS,GAAI,EAAG,EAAM,EAAI,OAAQ,EAAI,EAAK,IAC1C,GAAI,GAAqB,EAAI,WAAW,IACvC,MAAO,GAGT,MAAO,GANR,EAAA,2BAAA,GASA,YAAqC,GAuCpC,SAAW,CAAC,EAEV,GAAY,OAAU,GAAY,OAC/B,GAAY,OAAU,GAAY,OAClC,GAAY,OAAU,GAAY,MA3CxC,EAAA,qBAAA,GAmDA,YAAiC,GAChC,MACE,IAAK,QAAW,GAAK,QAAa,IAAM,MAAU,IAAM,MAAU,IAAM,MACrE,IAAM,MAAU,GAAK,MAAQ,GAAK,OAAW,IAAM,OAAW,IAAM,OACpE,GAAK,QAAU,GAAK,QAAY,GAAK,QAAU,GAAK,QACpD,GAAK,QAAU,GAAK,QAAY,GAAK,QAAU,GAAK,QACpD,GAAK,QAAU,GAAK,OAN1B,EAAA,iBAAA,GAcA,YAAqB,EAAc,GAClC,GAAI,EAAK,OAAS,EACjB,MAAO,GAGR,KAAM,GAAK,MACX,GAAI,GAAI,EACR,KAAO,EAAG,KAAK,IACV,IAAK,OAAS,EAAG,UAAY,IAIjC,EAAI,EAAG,UACP,EAAG,WAAa,EAGjB,MAAO,GAAK,UAAU,GAAG,QAAQ,MAAO,IAhBzC,EAAA,KAAA,GAqBA,KAAM,IAAK,kBACL,GAAc,cACd,GAAY,aAElB,YAAsC,GACrC,MAAI,IACH,GAAM,EAAI,QAAQ,GAAI,IACtB,EAAM,EAAI,QAAQ,GAAa,IAC/B,EAAM,EAAI,QAAQ,GAAW,KAGvB,EAPR,EAAA,sBAAA,GAYa,EAAA,mBAAqB,OAAO,aAAY,OAErD,YAAkC,GACjC,MAAO,CAAC,CAAE,IAAO,EAAI,OAAS,GAAK,EAAI,WAAW,KAAE,OADrD,EAAA,kBAAA,GAIA,YAA6B,GAC5B,MAAO,IAAkB,GAAO,EAAI,OAAO,GAAK,EADjD,EAAA,aAAA,GAQA,YAA8B,EAAgB,GAK7C,GAJI,CAAC,GAAU,CAAC,GAIZ,EAAO,OAAS,EAAM,OACzB,MAAO,GAGR,KAAM,GAAW,EAAM,OACjB,EAAc,EAAO,cAE3B,GAAI,GAAQ,EACR,EAAc,GAClB,KAAO,EAAQ,IACd,KAAM,GAAU,EAAY,QAAQ,EAAM,GAAQ,EAAc,GAChE,GAAI,EAAU,EACb,MAAO,GAGR,EAAc,EAEd,IAGD,MAAO,GAzBR,EAAA,cAAA,GA4BA,YAA2C,EAAgB,EAAqB,IAC/E,MAAK,GAID,IACH,GAAS,EAAO,QAAQ,OAAQ,KAG1B,EAAO,gBAAkB,GAPxB,GAFT,EAAA,2BAAA,GAYA,YAAqC,GACpC,MAAO,GAAI,OAAO,GAAG,cAAgB,EAAI,MAAM,GADhD,EAAA,qBAAA,GAIA,YAA0B,EAAa,EAAI,GAC1C,GAAI,IAAM,EACT,MAAO,GAGR,GAAI,GAAM,GACV,EACC,GAAM,EAAI,QAAQ;EAAM,EAAM,GAC9B,UACQ,EAAI,GAAK,GAAO,GAEzB,MAAI,KAAQ,GACJ,EAGJ,GAAI,EAAM,KAAO,MACpB,IAGM,EAAI,OAAO,EAAG,IAnBtB,EAAA,UAAA,GAyBA,YAAiC,GAChC,KAAM,GAAe,GAAA,GAA0B,EAI/C,MAFA,GAAI,EAAK,GAAI,GAET,EAAI,EACA,OAAO,aAAa,GAAa,GAGlC,OAAO,aAAa,GAAa,EAAI,GAT7C,EAAA,iBAAA,GAcA,YAAqC,GAEpC,MAAO,AADmB,IAAkB,cACnB,qBAAqB,GAF/C,EAAA,qBAAA,GAKA,YAA8C,EAA+B,GAI5E,MAAI,KAAU,EAEL,IAAU,GAAiC,IAAU,EAO1D,IAAU,GACT,IAAU,EACN,GAGL,IAAU,GAAkC,IAAU,GAA6B,IAAU,GAG7F,IAAU,GAAkC,IAAU,GAA6B,IAAU,EACzF,GAOJ,MAAU,GACT,KAAU,GAA4B,IAAU,GAA4B,IAAU,IAA6B,IAAU,KAI9H,KAAU,IAA6B,IAAU,IAChD,KAAU,GAA4B,IAAU,KAIjD,KAAU,IAA8B,IAAU,KACjD,IAAU,IAOX,IAAU,GAAiC,IAAU,IAQrD,IAAU,GAGV,IAAU,GAMV,IAAU,IAA8B,IAAU,IAOlD,IAAU,GAA6C,IAAU,GAvEtE,EAAA,8BAAA,GAgFA,GAAkB,IAAlB,AAAA,UAAkB,GACjB,EAAA,EAAA,MAAA,GAAA,QACA,EAAA,EAAA,QAAA,GAAA,UACA,EAAA,EAAA,GAAA,GAAA,KACA,EAAA,EAAA,GAAA,GAAA,KACA,EAAA,EAAA,QAAA,GAAA,UACA,EAAA,EAAA,OAAA,GAAA,SACA,EAAA,EAAA,mBAAA,GAAA,qBACA,EAAA,EAAA,YAAA,GAAA,cACA,EAAA,EAAA,EAAA,GAAA,IACA,EAAA,EAAA,EAAA,GAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,GAAA,IAAA,KACA,EAAA,EAAA,IAAA,IAAA,MACA,EAAA,EAAA,IAAA,IAAA,MACA,EAAA,EAAA,sBAAA,IAAA,0BAfiB,GAAA,EAAA,mBAAA,GAAA,kBAAiB,KZh/BnC,SY8gCC,cACC,KAAK,MAAQ,WAVA,eACb,MAAK,IAAkB,WACtB,IAAkB,UAAY,GAAI,KAE5B,GAAkB,UASnB,qBAAqB,GAE3B,GAAI,EAAY,GACf,MAAI,KAAS,GACZ,EAEG,IAAS,GACZ,EAED,EAGD,GAAI,EAAY,IACf,MAAA,GAGD,KAAM,GAAO,KAAK,MACZ,EAAY,EAAK,OAAS,EAChC,GAAI,GAAY,EAChB,KAAO,GAAa,GACnB,GAAI,EAAY,EAAK,EAAI,GAExB,EAAY,EAAI,UACN,EAAY,EAAK,EAAI,EAAY,GAE3C,EAAY,EAAI,EAAY,MAG5B,OAAO,GAAK,EAAI,EAAY,GAI9B,MAAA,IA9Cc,GAAA,UAAsC,KAkDtD,cAEC,MAAO,MAAK,MAAM,ypwBC9iCnB,WAAwB,GACvB,MAAO,OAAM,QAAQ,GADtB,EAAA,QAAA,EAOA,WAAyB,GACxB,MAAQ,OAAO,IAAQ,SADxB,EAAA,SAAA,EAOA,WAA8B,GAC7B,MAAO,OAAM,QAAQ,IAAsB,EAAO,MAAM,GAAQ,EAAS,IAD1E,EAAA,cAAA,EASA,WAAyB,GAIxB,MAAO,OAAO,IAAQ,UAClB,IAAQ,MACR,CAAC,MAAM,QAAQ,IACf,CAAE,aAAe,UACjB,CAAE,aAAe,OARtB,EAAA,SAAA,EAeA,WAAyB,GACxB,MAAQ,OAAO,IAAQ,UAAY,CAAC,MAAM,GAD3C,EAAA,SAAA,EAOA,WAA8B,GAC7B,MAAO,CAAC,CAAC,GAAO,MAAQ,GAAY,OAAO,WAAc,WAD1D,EAAA,WAAA,EAOA,WAA0B,GACzB,MAAQ,KAAQ,IAAQ,IAAQ,GADjC,EAAA,UAAA,EAOA,WAA4B,GAC3B,MAAQ,OAAO,IAAQ,YADxB,EAAA,YAAA,EAOA,WAA6B,GAC5B,MAAO,CAAC,EAAkB,GAD3B,EAAA,UAAA,EAOA,WAAkC,GACjC,MAAQ,GAAY,IAAQ,IAAQ,KADrC,EAAA,kBAAA,EAKA,WAA2B,EAAoB,GAC9C,GAAI,CAAC,EACJ,KAAM,IAAI,OAAM,EAAO,8BAA8B,KAAU,mBAFjE,EAAA,WAAA,EASA,WAAmC,GAClC,GAAI,EAAkB,GACrB,KAAM,IAAI,OAAM,mDAGjB,MAAO,GALR,EAAA,gBAAA,EAcA,cAAoC,GACnC,KAAM,GAAS,GAEf,OAAS,GAAI,EAAG,EAAI,EAAK,OAAQ,KAChC,KAAM,GAAM,EAAK,GAEjB,GAAI,EAAkB,GACrB,KAAM,IAAI,OAAM,uCAAuC,0BAGxD,EAAO,KAAK,GAGb,MAAO,GAbR,EAAA,iBAAA,EAgBA,KAAM,GAAiB,OAAO,UAAU,eAKxC,WAA8B,GAC7B,GAAI,CAAC,EAAS,GACb,MAAO,GAGR,OAAS,KAAO,GACf,GAAI,EAAe,KAAK,EAAK,GAC5B,MAAO,GAIT,MAAO,GAXR,EAAA,cAAA,EAiBA,WAA2B,GAC1B,MAAQ,OAAO,IAAQ,WADxB,EAAA,WAAA,EAOA,cAAgC,GAC/B,MAAO,GAAQ,OAAS,GAAK,EAAQ,MAAM,GAD5C,EAAA,aAAA,EAMA,WAAoC,EAAiB,GACpD,KAAM,GAAM,KAAK,IAAI,EAAK,OAAQ,EAAY,QAC9C,OAAS,GAAI,EAAG,EAAI,EAAK,IACxB,EAAmB,EAAK,GAAI,EAAY,IAH1C,EAAA,oBAAA,EAOA,WAAmC,EAAc,GAEhD,GAAI,EAAS,IACZ,GAAI,MAAO,KAAQ,EAClB,KAAM,IAAI,OAAM,8CAA8C,aAErD,EAAW,IACrB,IACC,GAAI,YAAe,GAClB,aAEA,IAMF,GAHI,CAAC,EAAkB,IAAS,EAAY,cAAgB,GAGxD,EAAW,SAAW,GAAK,EAAW,KAAK,OAAW,KAAS,GAClE,OAED,KAAM,IAAI,OAAM,8IApBlB,EAAA,mBAAA,EAwBA,WAAoC,GACnC,GAAI,GAAgB,GAChB,EAAQ,OAAO,eAAe,GAClC,KAAO,OAAO,YAAc,GAC3B,EAAM,EAAI,OAAO,OAAO,oBAAoB,IAC5C,EAAQ,OAAO,eAAe,GAE/B,MAAO,GAPR,EAAA,oBAAA,EAUA,WAAkC,GACjC,KAAM,GAAoB,GAC1B,SAAW,KAAQ,GAAoB,GACtC,AAAI,MAAQ,GAAY,IAAU,YACjC,EAAQ,KAAK,GAGf,MAAO,GAPR,EAAA,kBAAA,EAUA,WAAoD,EAAuB,GAC1E,KAAM,GAAoB,AAAC,GACnB,WACN,KAAM,GAAO,MAAM,UAAU,MAAM,KAAK,UAAW,GACnD,MAAO,GAAO,EAAQ,IAIxB,GAAI,GAAS,GACb,SAAW,KAAc,GAClB,EAAQ,GAAc,EAAkB,GAE/C,MAAO,GAZR,EAAA,kBAAA,EAkBA,WAAuC,GACtC,MAAO,KAAM,KAAO,OAAY,EADjC,EAAA,oBAAA,EAOA,WAAuC,GACtC,MAAO,OAAO,IAAM,YAAc,KAAO,EAD1C,EAAA,oBAAA,EAoCA,WAAuC,GACtC,MAAY,OACX,cACC,MAAO,IAAI,OAAM,GAAI,CACpB,IAAI,EAAa,GAChB,GAAI,EAAO,GACV,MAAO,GAAO,GAEf,KAAM,IAAI,OAAM,oBAAoB,MAAS,OAAO,WARzD,EAAA,oBAAA,EAeA,WAA4B,GAC3B,KAAM,IAAI,OAAM,eADjB,EAAA,YAAA,qWCtRA,WAAgC,GAC/B,MAAO,KAAI,IAAuB,IAAI,GADvC,EAAA,gBAAA,EASA,WAA0B,GACzB,MAAO,GAAO,QAAQ,SAAU,EAAA,MAAM,KADvC,EAAA,UAAA,EASA,WAAwB,EAAc,EAAc,EAAA,MAAM,KACzD,GAAI,CAAC,EACJ,MAAO,GAGR,KAAM,GAAM,EAAK,OACX,EAAc,EAAK,WAAW,GACpC,GAAI,EAAgB,IACnB,GAAI,EAAgB,EAAK,WAAW,KAG/B,CAAC,EAAgB,EAAK,WAAW,KACpC,GAAI,GAAM,EACV,KAAM,GAAQ,EACd,KAAO,EAAM,GACR,GAAgB,EAAK,WAAW,IADnB,IACjB,CAID,GAAI,IAAU,GAAO,CAAC,EAAgB,EAAK,WAAW,EAAM,KAE3D,IADA,GAAO,EACA,EAAM,EAAK,IACjB,GAAI,EAAgB,EAAK,WAAW,IACnC,MAAO,GAAK,MAAM,EAAG,EAAM,GACzB,QAAQ,SAAU,IASzB,MAAO,WAEG,EAAqB,IAG3B,EAAK,WAAW,KAAE,GACrB,MAAI,GAAgB,EAAK,WAAW,IAG5B,EAAK,MAAM,EAAG,GAAK,EAInB,EAAK,MAAM,EAAG,GAQxB,GAAI,GAAM,EAAK,QAAQ,OACvB,GAAI,IAAQ,IAEX,IADA,GAAO,EACA,EAAM,EAAK,IACjB,GAAI,EAAgB,EAAK,WAAW,IACnC,MAAO,GAAK,MAAM,EAAG,EAAM,GAK9B,MAAO,GAhER,EAAA,QAAA,EA0EA,WAAsB,GAMrB,GALI,CAAC,EAAA,WAKD,CAAC,GAAQ,EAAK,OAAS,EAE1B,MAAO,GAGR,GAAI,GAAO,EAAK,WAAW,GAK3B,GAJI,IAAI,IAGR,GAAO,EAAK,WAAW,GACnB,IAAI,IACP,MAAO,GAER,GAAI,GAAM,EACV,KAAM,GAAQ,EACd,KAAO,EAAM,EAAK,QACjB,GAAO,EAAK,WAAW,GACnB,IAAI,IAFiB,IAEzB,CAQD,MAJI,MAAU,GAGd,GAAO,EAAK,WAAW,EAAM,GACzB,MAAM,IAAS,IAAI,KA/BxB,EAAA,MAAA,EAsCA,KAAM,GAA6B,mBAC7B,EAA0B,SAC1B,EAA0B,2DAChC,WAAgC,EAAiC,EAAuB,EAAA,WACvF,KAAM,GAAmB,EAAc,EAA6B,EA2BpE,MAzBI,GAAC,GAAQ,EAAK,SAAW,GAAK,QAAQ,KAAK,IAI/C,GAAiB,UAAY,EACzB,EAAiB,KAAK,KAItB,GAAe,EAAwB,KAAK,IAI5C,IAAS,KAAO,IAAS,MAIzB,GAAe,EAAK,EAAK,OAAS,KAAO,KAIzC,GAAe,EAAK,SAAW,EAAK,OAAO,QAI3C,EAAK,OAAS,KA5BnB,EAAA,gBAAA,EAmCA,WAAwB,EAAe,EAAe,GACrD,KAAM,GAAkB,IAAU,EAClC,MAAI,CAAC,GAAc,EACX,EAGJ,CAAC,GAAS,CAAC,EACP,GAGD,Ad7LR,Gc6LQ,EAAA,kBAAiB,EAAO,GAVhC,EAAA,QAAA,EAaA,WAAgC,EAAc,EAAyB,EAAsB,EAAY,EAAA,KACxG,GAAI,IAAS,EACZ,MAAO,GAOR,GAJI,CAAC,GAAQ,CAAC,GAIV,EAAgB,OAAS,EAAK,OACjC,MAAO,GAGR,GAAI,GAEH,GAAI,CADe,Ad9MrB,Gc8MqB,EAAA,sBAAqB,EAAM,GAE7C,MAAO,GAGR,GAAI,EAAgB,SAAW,EAAK,OACnC,MAAO,GAGR,GAAI,GAAY,EAAgB,OAChC,MAAI,GAAgB,OAAO,EAAgB,OAAS,KAAO,GAC1D,IAGM,EAAK,OAAO,KAAe,EAGnC,MAAI,GAAgB,OAAO,EAAgB,OAAS,KAAO,GAC1D,IAAmB,GAGb,EAAK,QAAQ,KAAqB,EAnC1C,EAAA,gBAAA,EAsCA,WAAqC,GACpC,MAAO,IAAK,IAAkB,GAAK,IAAkB,GAAK,IAAkB,GAAK,IADlF,EAAA,qBAAA,EAIA,WAAiC,EAAmB,GAGnD,MAAI,GAAA,WAAa,EAAU,SAAS,MACnC,IAAa,EAAA,KAIT,AdlPN,GckPM,EAAA,YAAW,IACf,GAAY,AdnPd,GcmPc,EAAA,MAAK,EAAK,IAIvB,EAAY,AdvPb,GcuPa,EAAA,WAAU,GAGtB,AAAI,EAAA,UACH,GAAY,Ad3Pd,Gc2Pc,EAAA,OAAM,EAAW,EAAA,KAGzB,EAAU,SAAS,MACtB,IAAa,EAAA,MAId,GAAY,AdnQd,GcmQc,EAAA,OAAM,EAAW,EAAA,KAGxB,GACJ,GAAY,EAAA,MAIP,EAjCR,EAAA,iBAAA,EAoCA,WAAoC,GACnC,KAAM,GAAiB,Ad/QxB,Gc+QwB,EAAA,WAAU,GAEjC,MAAI,GAAA,UACC,EAAK,OAAS,EACV,GAGD,EAAe,IACpB,GAAK,SAAW,GAAK,EAAe,WAAW,KAAE,IAG7C,IAAmB,EAAA,MAAM,IAZjC,EAAA,oBAAA,EAeA,WAA+B,GAC9B,MAAI,GAAA,UACI,EAAqB,EAAK,WAAW,KAAO,EAAK,WAAW,KAAE,GAG/D,GALR,EAAA,eAAA,EAQA,WAA+B,GAC9B,MAAO,GAAe,GAAQ,EAAK,GAAK,OADzC,EAAA,eAAA,EAIA,WAA4B,EAAc,EAAmB,GAC5D,MAAI,GAAU,OAAS,EAAK,OACpB,GAGJ,IAAS,EACL,EAGJ,IACH,GAAO,EAAK,cACZ,EAAY,EAAU,eAGhB,EAAK,QAAQ,IAdrB,EAAA,YAAA,EAuBA,WAAwC,GACvC,KAAM,GAAW,EAAQ,MAAM,KAE/B,GAAI,GACA,EACA,EAaJ,GAXA,EAAS,QAAQ,IAChB,KAAM,GAAkB,OAAO,GAC/B,AAAK,AdzUP,GcyUO,EAAA,UAAS,GAEP,AAAI,IAAS,OACnB,EAAO,EACG,IAAW,QACrB,GAAS,GAJT,EAAO,AAAE,EAAO,CAAC,EAAM,GAAS,KAAK,KAAO,IAQ1C,CAAC,EACJ,KAAM,IAAI,OAAM,uDAGjB,MAAO,CACN,OACA,KAAM,IAAS,OAAY,EAAO,OAClC,OAAQ,IAAW,OAAY,EAAS,IAAS,OAAY,EAAI,QAzBnE,EAAA,wBAAA,wICvTA,KAAM,GAAiB,iBACjB,EAAoB,MACpB,EAAoB,QAE1B,WAAsB,EAAU,GAG/B,GAAI,CAAC,EAAI,QAAU,EAClB,KAAM,IAAI,OAAM,2DAA2D,EAAI,sBAAsB,EAAI,kBAAkB,EAAI,sBAAsB,EAAI,cAK1J,GAAI,EAAI,QAAU,CAAC,EAAe,KAAK,EAAI,QAC1C,KAAM,IAAI,OAAM,mDAQjB,GAAI,EAAI,MACP,GAAI,EAAI,WACP,GAAI,CAAC,EAAkB,KAAK,EAAI,MAC/B,KAAM,IAAI,OAAM,oJAGb,EAAkB,KAAK,EAAI,MAC9B,KAAM,IAAI,OAAM,8HAUpB,WAAoB,EAAgB,GACnC,MAAI,CAAC,GAAU,CAAC,EACR,OAED,EAIR,WAA8B,EAAgB,GAM7C,OAAQ,OACF,YACA,WACA,OACJ,AAAK,EAEM,EAAK,KAAO,GACtB,GAAO,EAAS,GAFhB,EAAO,EAIR,MAEF,MAAO,GAGR,KAAM,GAAS,GACT,EAAS,IACT,EAAU,+Df9EhB,Qe2JC,YAAsB,EAAsC,EAAoB,EAAe,EAAgB,EAAmB,EAAmB,IAEpJ,AAAI,MAAO,IAAiB,SAC3B,MAAK,OAAS,EAAa,QAAU,EACrC,KAAK,UAAY,EAAa,WAAa,EAC3C,KAAK,KAAO,EAAa,MAAQ,EACjC,KAAK,MAAQ,EAAa,OAAS,EACnC,KAAK,SAAW,EAAa,UAAY,GAKzC,MAAK,OAAS,EAAW,EAAc,GACvC,KAAK,UAAY,GAAa,EAC9B,KAAK,KAAO,EAAqB,KAAK,OAAQ,GAAQ,GACtD,KAAK,MAAQ,GAAS,EACtB,KAAK,SAAW,GAAY,EAE5B,EAAa,KAAM,UA3Ed,OAAM,GACZ,MAAI,aAAiB,GACb,GAEH,EAGE,MAAa,GAAO,WAAc,UACrC,MAAa,GAAO,UAAa,UACjC,MAAa,GAAO,MAAS,UAC7B,MAAa,GAAO,OAAU,UAC9B,MAAa,GAAO,QAAW,UAC/B,MAAa,GAAO,QAAW,UAC/B,MAAa,GAAO,MAAS,YAC7B,MAAa,GAAO,UAAa,WAT7B,MAoGL,UAIH,MAAO,GAAY,KAAM,IAK1B,KAAK,GAEJ,GAAI,CAAC,EACJ,MAAO,MAGR,GAAI,CAAE,SAAQ,YAAW,OAAM,QAAO,YAAa,EA2BnD,MA1BA,AAAI,KAAW,OACd,EAAS,KAAK,OACJ,IAAW,MACrB,GAAS,GAEV,AAAI,IAAc,OACjB,EAAY,KAAK,UACP,IAAc,MACxB,GAAY,GAEb,AAAI,IAAS,OACZ,EAAO,KAAK,KACF,IAAS,MACnB,GAAO,GAER,AAAI,IAAU,OACb,EAAQ,KAAK,MACH,IAAU,MACpB,GAAQ,GAET,AAAI,IAAa,OAChB,EAAW,KAAK,SACN,IAAa,MACvB,GAAW,GAGR,IAAW,KAAK,QAChB,IAAc,KAAK,WACnB,IAAS,KAAK,MACd,IAAU,KAAK,OACf,IAAa,KAAK,SAEd,KAGD,GAAI,GAAI,EAAQ,EAAW,EAAM,EAAO,SAWzC,OAAM,EAAe,EAAmB,IAC9C,KAAM,GAAQ,EAAQ,KAAK,GAC3B,MAAK,GAGE,GAAI,GACV,EAAM,IAAM,EACZ,EAAc,EAAM,IAAM,GAC1B,EAAc,EAAM,IAAM,GAC1B,EAAc,EAAM,IAAM,GAC1B,EAAc,EAAM,IAAM,GAC1B,GARO,GAAI,GAAI,EAAQ,EAAQ,EAAQ,EAAQ,SAiC1C,MAAK,GAEX,GAAI,GAAY,EAWhB,GANI,EAAA,WACH,GAAO,EAAK,QAAQ,MAAO,IAKxB,EAAK,KAAO,GAAU,EAAK,KAAO,GACrC,KAAM,GAAM,EAAK,QAAQ,EAAQ,GACjC,AAAI,IAAQ,GACX,GAAY,EAAK,UAAU,GAC3B,EAAO,GAEP,GAAY,EAAK,UAAU,EAAG,GAC9B,EAAO,EAAK,UAAU,IAAQ,GAIhC,MAAO,IAAI,GAAI,OAAQ,EAAW,EAAM,EAAQ,SAG1C,MAAK,GACX,MAAO,IAAI,GACV,EAAW,OACX,EAAW,UACX,EAAW,KACX,EAAW,MACX,EAAW,gBAWN,UAAS,KAAa,GAC5B,GAAI,CAAC,EAAI,KACR,KAAM,IAAI,OAAM,wDAEjB,GAAI,GACJ,MAAI,GAAA,WAAa,EAAI,SAAW,OAC/B,EAAU,EAAI,KAAK,EAAM,MAAM,KAAK,EAAY,EAAK,IAAO,GAAG,IAAe,KAE9E,EAAU,EAAM,MAAM,KAAK,EAAI,KAAM,GAAG,GAElC,EAAI,KAAK,CAAE,KAAM,IAgBzB,SAAS,EAAwB,IAChC,MAAO,GAAa,KAAM,GAG3B,SACC,MAAO,YAOD,QAAO,GACb,GAAK,GAEE,GAAI,YAAgB,GAC1B,MAAO,GACD,CACN,KAAM,GAAS,GAAI,GAAI,GACvB,SAAO,WAAwB,EAAM,SACrC,EAAO,QAAqB,EAAM,OAAS,EAA4B,EAAM,OAAS,KAC/E,OAPP,OAAO,IAjSV,EAAA,IAAA,EA4TA,KAAM,GAAiB,EAAA,UAAY,EAAI,Of5ZvC,ee+ZkB,GAAlB,kCAEC,KAAA,WAA4B,KAC5B,KAAA,QAAyB,QAEZ,UACZ,MAAK,MAAK,SACT,MAAK,QAAU,EAAY,KAAM,KAE3B,KAAK,QAGJ,SAAS,EAAwB,IACzC,MAAK,GAOG,EAAa,KAAM,IANrB,MAAK,YACT,MAAK,WAAa,EAAa,KAAM,KAE/B,KAAK,YAOL,SACR,KAAM,GAAgB,CACrB,KAAM,GAGP,MAAI,MAAK,SACR,GAAI,OAAS,KAAK,QAClB,EAAI,KAAO,GAER,KAAK,YACR,GAAI,SAAW,KAAK,YAGjB,KAAK,MACR,GAAI,KAAO,KAAK,MAEb,KAAK,QACR,GAAI,OAAS,KAAK,QAEf,KAAK,WACR,GAAI,UAAY,KAAK,WAElB,KAAK,OACR,GAAI,MAAQ,KAAK,OAEd,KAAK,UACR,GAAI,SAAW,KAAK,UAEd,GAKT,KAAM,GAAwC,EAC7C,IAAkB,OAClB,IAAkB,OAClB,IAAyB,OACzB,IAAiB,OACjB,IAA8B,OAC9B,IAA+B,OAC/B,IAAmB,OAEnB,IAA4B,OAC5B,IAAuB,OACvB,IAAsB,OACtB,IAAwB,OACxB,IAAsB,OACtB,IAAuB,OACvB,IAAqB,OACrB,IAAiB,OACjB,IAAkB,OAClB,IAAsB,OACtB,IAAmB,OAEnB,IAAkB,OAGnB,WAAgC,EAAsB,GACrD,GAAI,GACA,EAAkB,GAEtB,OAAS,GAAM,EAAG,EAAM,EAAa,OAAQ,KAC5C,KAAM,GAAO,EAAa,WAAW,GAGrC,GACE,GAAI,IAAkB,GAAI,KACvB,GAAI,IAAkB,GAAI,IAC1B,GAAI,IAAuB,GAAI,IAChC,IAAI,IACJ,IAAI,IACJ,IAAI,IACJ,IAAI,KACH,GAAc,IAAI,GAGtB,AAAI,IAAoB,IACvB,IAAO,mBAAmB,EAAa,UAAU,EAAiB,IAClE,EAAkB,IAGf,IAAQ,QACX,IAAO,EAAa,OAAO,SAK5B,AAAI,IAAQ,QACX,GAAM,EAAa,OAAO,EAAG,IAI9B,KAAM,GAAU,EAAY,GAC5B,AAAI,IAAY,OAGX,KAAoB,IACvB,IAAO,mBAAmB,EAAa,UAAU,EAAiB,IAClE,EAAkB,IAInB,GAAO,GAEG,IAAoB,IAE9B,GAAkB,IAKrB,MAAI,KAAoB,IACvB,IAAO,mBAAmB,EAAa,UAAU,KAG3C,IAAQ,OAAY,EAAM,EAGlC,WAAmC,GAClC,GAAI,GACJ,OAAS,GAAM,EAAG,EAAM,EAAK,OAAQ,KACpC,KAAM,GAAO,EAAK,WAAW,GAC7B,AAAI,IAAI,IAAsB,IAAI,GAC7B,KAAQ,QACX,GAAM,EAAK,OAAO,EAAG,IAEtB,GAAO,EAAY,IAEf,IAAQ,QACX,IAAO,EAAK,IAIf,MAAO,KAAQ,OAAY,EAAM,EAMlC,WAA4B,EAAU,GAErC,GAAI,GACJ,MAAI,GAAI,WAAa,EAAI,KAAK,OAAS,GAAK,EAAI,SAAW,OAE1D,EAAQ,KAAK,EAAI,YAAY,EAAI,OAC3B,AACN,EAAI,KAAK,WAAW,KAAE,IAClB,GAAI,KAAK,WAAW,IAAE,IAAkB,EAAI,KAAK,WAAW,IAAE,IAAkB,EAAI,KAAK,WAAW,IAAE,IAAkB,EAAI,KAAK,WAAW,IAAE,MAC/I,EAAI,KAAK,WAAW,KAAE,GAEzB,AAAK,EAIJ,EAAQ,EAAI,KAAK,OAAO,GAFxB,EAAQ,EAAI,KAAK,GAAG,cAAgB,EAAI,KAAK,OAAO,GAMrD,EAAQ,EAAI,KAET,EAAA,WACH,GAAQ,EAAM,QAAQ,MAAO,OAEvB,EAxBR,EAAA,YAAA,EA8BA,WAAsB,EAAU,GAE/B,KAAM,GAAU,AAAC,EAEd,EADA,EAGH,GAAI,GAAM,GACN,CAAE,SAAQ,YAAW,OAAM,QAAO,YAAa,EASnD,GARI,GACH,IAAO,EACP,GAAO,KAEJ,IAAa,IAAW,SAC3B,IAAO,EACP,GAAO,GAEJ,GACH,GAAI,GAAM,EAAU,QAAQ,KAC5B,GAAI,IAAQ,IAEX,KAAM,IAAW,EAAU,OAAO,EAAG,GACrC,EAAY,EAAU,OAAO,EAAM,GACnC,EAAM,GAAS,QAAQ,KACvB,AAAI,IAAQ,GACX,GAAO,EAAQ,GAAU,IAGzB,IAAO,EAAQ,GAAS,OAAO,EAAG,GAAM,IACxC,GAAO,IACP,GAAO,EAAQ,GAAS,OAAO,EAAM,GAAI,KAE1C,GAAO,IAER,EAAY,EAAU,cACtB,EAAM,EAAU,QAAQ,KACxB,AAAI,IAAQ,GACX,GAAO,EAAQ,EAAW,IAG1B,IAAO,EAAQ,EAAU,OAAO,EAAG,GAAM,IACzC,GAAO,EAAU,OAAO,IAG1B,GAAI,GAEH,GAAI,EAAK,QAAU,GAAK,EAAK,WAAW,KAAE,IAAuB,EAAK,WAAW,KAAE,IAClF,KAAM,GAAO,EAAK,WAAW,GAC7B,AAAI,GAAI,IAAkB,GAAI,IAC7B,GAAO,IAAI,OAAO,aAAa,EAAO,OAAO,EAAK,OAAO,cAEhD,EAAK,QAAU,GAAK,EAAK,WAAW,KAAE,IAChD,KAAM,GAAO,EAAK,WAAW,GAC7B,AAAI,GAAI,IAAkB,GAAI,IAC7B,GAAO,GAAG,OAAO,aAAa,EAAO,OAAO,EAAK,OAAO,MAI1D,GAAO,EAAQ,EAAM,IAEtB,MAAI,IACH,IAAO,IACP,GAAO,EAAQ,EAAO,KAEnB,GACH,IAAO,IACP,GAAO,AAAC,EAAyD,EAA1C,EAAuB,EAAU,KAElD,EAKR,WAAoC,GACnC,IACC,MAAO,oBAAmB,SACzB,GACD,MAAI,GAAI,OAAS,EACT,EAAI,OAAO,EAAG,GAAK,EAA2B,EAAI,OAAO,IAEzD,GAKV,KAAM,GAAiB,8BAEvB,WAAuB,GACtB,MAAK,GAAI,MAAM,GAGR,EAAI,QAAQ,EAAgB,AAAC,GAAU,EAA2B,IAFjE,+hCC/qBT,WAA+B,EAAgB,EAAQ,GACtD,GAAI,GAAS,EAAI,IAAI,GACrB,MAAI,KAAW,QACd,GAAS,EACT,EAAI,IAAI,EAAK,IAGP,EAPR,EAAA,SAAA,EAUA,WAAkC,GACjC,KAAM,GAAoB,GAC1B,SAAI,QAAQ,CAAC,EAAO,KACnB,EAAQ,KAAK,GAAG,QAAU,OAGpB,OAAO,EAAI,UAAU,EAAQ,KAAK,SAN1C,EAAA,YAAA,EASA,WAA+B,GAC9B,KAAM,GAAe,GACrB,SAAI,QAAQ,IACX,EAAQ,KAAK,KAGP,OAAO,EAAI,UAAU,EAAQ,KAAK,SAN1C,EAAA,YAAA,EhB5BA,QgB8CA,cAES,KAAA,OAAiB,GACjB,KAAA,KAAe,EAEvB,MAAM,GACL,YAAK,OAAS,EACd,KAAK,KAAO,EACL,KAGR,OACC,YAAK,MAAQ,EACN,KAGR,UACC,MAAO,MAAK,KAAO,KAAK,OAAO,OAAS,EAGzC,IAAI,GACH,KAAM,GAAQ,EAAE,WAAW,GACrB,EAAW,KAAK,OAAO,WAAW,KAAK,MAC7C,MAAO,GAAQ,EAGhB,QACC,MAAO,MAAK,OAAO,KAAK,OA3B1B,EAAA,eAAA,EhB9CA,QgBmFC,YACkB,EAA0B,IAA1B,KAAA,eAAA,EAGlB,MAAM,GACL,YAAK,OAAS,EACd,KAAK,MAAQ,EACb,KAAK,IAAM,EACJ,KAAK,OAGb,UACC,MAAO,MAAK,IAAM,KAAK,OAAO,OAG/B,OAEC,KAAK,MAAQ,KAAK,IAClB,GAAI,GAAW,GACf,KAAO,KAAK,IAAM,KAAK,OAAO,OAAQ,KAAK,MAE1C,GAAI,AADO,KAAK,OAAO,WAAW,KAAK,OACjC,GACL,GAAI,EACH,KAAK,YAEL,WAGD,GAAW,GAGb,MAAO,MAGR,IAAI,GACH,MAAO,MAAK,eACT,AhBvHL,GgBuHK,EAAA,kBAAiB,EAAG,KAAK,OAAQ,EAAG,EAAE,OAAQ,KAAK,MAAO,KAAK,KAC/D,AhBxHL,GgBwHK,EAAA,4BAA2B,EAAG,KAAK,OAAQ,EAAG,EAAE,OAAQ,KAAK,MAAO,KAAK,KAG7E,QACC,MAAO,MAAK,OAAO,UAAU,KAAK,MAAO,KAAK,MA/ChD,EAAA,mBAAA,EhB7EA,QgBsIC,YACkB,EAA6B,GAC7B,EAA0B,IAD1B,KAAA,kBAAA,EACA,KAAA,eAAA,EAGlB,MAAM,GACL,YAAK,OAAS,EAAI,QAAQ,UAAW,IACrC,KAAK,MAAQ,EACb,KAAK,IAAM,EACJ,KAAK,OAGb,UACC,MAAO,MAAK,IAAM,KAAK,OAAO,OAG/B,OAEC,KAAK,MAAQ,KAAK,IAClB,GAAI,GAAW,GACf,KAAO,KAAK,IAAM,KAAK,OAAO,OAAQ,KAAK,OAC1C,KAAM,GAAK,KAAK,OAAO,WAAW,KAAK,KACvC,GAAI,IAAE,IAAuB,KAAK,mBAAqB,IAAE,GACxD,GAAI,EACH,KAAK,YAEL,WAGD,GAAW,GAGb,MAAO,MAGR,IAAI,GACH,MAAO,MAAK,eACT,AhB3KL,GgB2KK,EAAA,kBAAiB,EAAG,KAAK,OAAQ,EAAG,EAAE,OAAQ,KAAK,MAAO,KAAK,KAC/D,AhB5KL,GgB4KK,EAAA,4BAA2B,EAAG,KAAK,OAAQ,EAAG,EAAE,OAAQ,KAAK,MAAO,KAAK,KAG7E,QACC,MAAO,MAAK,OAAO,UAAU,KAAK,MAAO,KAAK,MAhDhD,EAAA,aAAA,EAoDA,GAAW,GAAX,AAAA,UAAW,GACV,EAAA,EAAA,OAAA,GAAA,SAAY,EAAA,EAAA,UAAA,GAAA,YAAe,EAAA,EAAA,KAAA,GAAA,OAAU,EAAA,EAAA,MAAA,GAAA,QAAW,EAAA,EAAA,SAAA,GAAA,aADtC,GAAA,GAAgB,KhBpL3B,QgB+LC,YAA6B,GAAA,KAAA,kBAAA,EAHrB,KAAA,QAA8B,GAC9B,KAAA,UAAoB,EAI5B,MAAM,GACL,YAAK,OAAS,EACd,KAAK,QAAU,GACX,KAAK,OAAO,QACf,KAAK,QAAQ,KAAI,GAEd,KAAK,OAAO,WACf,KAAK,QAAQ,KAAI,GAEd,KAAK,OAAO,MACf,MAAK,cAAgB,GAAI,GAAa,GAAO,CAAC,KAAK,kBAAkB,IACrE,KAAK,cAAc,MAAM,EAAI,MACzB,KAAK,cAAc,SACtB,KAAK,QAAQ,KAAI,IAGf,KAAK,OAAO,OACf,KAAK,QAAQ,KAAI,GAEd,KAAK,OAAO,UACf,KAAK,QAAQ,KAAI,GAElB,KAAK,UAAY,EACV,KAGR,OACC,MAAI,MAAK,QAAQ,KAAK,aAAU,GAA8B,KAAK,cAAc,UAChF,KAAK,cAAc,OAEnB,KAAK,WAAa,EAEZ,KAGR,UACC,MAAQ,MAAK,QAAQ,KAAK,aAAU,GAA8B,KAAK,cAAc,WACjF,KAAK,UAAY,KAAK,QAAQ,OAAS,EAG5C,IAAI,GACH,GAAI,KAAK,QAAQ,KAAK,aAAU,EAC/B,MAAO,AhB3OV,GgB2OU,EAAA,mBAAkB,EAAG,KAAK,OAAO,QAClC,GAAI,KAAK,QAAQ,KAAK,aAAU,EACtC,MAAO,AhB7OV,GgB6OU,EAAA,mBAAkB,EAAG,KAAK,OAAO,WAClC,GAAI,KAAK,QAAQ,KAAK,aAAU,EACtC,MAAO,MAAK,cAAc,IAAI,GACxB,GAAI,KAAK,QAAQ,KAAK,aAAU,EACtC,MAAO,AhBjPV,GgBiPU,EAAA,SAAQ,EAAG,KAAK,OAAO,OACxB,GAAI,KAAK,QAAQ,KAAK,aAAU,EACtC,MAAO,AhBnPV,GgBmPU,EAAA,SAAQ,EAAG,KAAK,OAAO,UAE/B,KAAM,IAAI,OAGX,QACC,GAAI,KAAK,QAAQ,KAAK,aAAU,EAC/B,MAAO,MAAK,OAAO,OACb,GAAI,KAAK,QAAQ,KAAK,aAAU,EACtC,MAAO,MAAK,OAAO,UACb,GAAI,KAAK,QAAQ,KAAK,aAAU,EACtC,MAAO,MAAK,cAAc,QACpB,GAAI,KAAK,QAAQ,KAAK,aAAU,EACtC,MAAO,MAAK,OAAO,MACb,GAAI,KAAK,QAAQ,KAAK,aAAU,EACtC,MAAO,MAAK,OAAO,SAEpB,KAAM,IAAI,QA5EZ,EAAA,YAAA,EhBxLA,QgBgRC,UACC,MAAO,CAAC,KAAK,MAAQ,CAAC,KAAK,KAAO,CAAC,KAAK,OAAS,CAAC,KAAK,OhBjRzD,QgB0SC,YAAY,GACX,KAAK,MAAQ,QApBP,SAAW,EAA0C,IAAM,IACjE,MAAO,IAAI,GAA0B,GAAI,GAAY,UAG/C,YACN,MAAO,IAAI,GAA6B,GAAI,UAGtC,cACN,MAAO,IAAI,GAA6B,GAAI,UAGtC,iBACN,MAAO,IAAI,GAA6B,GAAI,IAU7C,QACC,KAAK,MAAQ,OAGd,IAAI,EAAQ,GACX,KAAM,GAAO,KAAK,MAAM,MAAM,GAC9B,GAAI,GAQJ,IANK,KAAK,OACT,MAAK,MAAQ,GAAI,GACjB,KAAK,MAAM,QAAU,EAAK,SAG3B,EAAO,KAAK,SAEX,KAAM,GAAM,EAAK,IAAI,EAAK,SAC1B,GAAI,EAAM,EAET,AAAK,EAAK,MACT,GAAK,KAAO,GAAI,GAChB,EAAK,KAAK,QAAU,EAAK,SAE1B,EAAO,EAAK,aAEF,EAAM,EAEhB,AAAK,EAAK,OACT,GAAK,MAAQ,GAAI,GACjB,EAAK,MAAM,QAAU,EAAK,SAE3B,EAAO,EAAK,cAEF,EAAK,UAEf,EAAK,OACA,EAAK,KACT,GAAK,IAAM,GAAI,GACf,EAAK,IAAI,QAAU,EAAK,SAEzB,EAAO,EAAK,QAEZ,OAGF,KAAM,GAAa,EAAK,MACxB,SAAK,MAAQ,EACb,EAAK,IAAM,EACJ,EAGR,IAAI,SACH,MAAO,GAAA,KAAK,SAAS,MAAI,MAAA,IAAA,OAAA,OAAA,EAAE,MAGpB,SAAS,GAChB,KAAM,GAAO,KAAK,MAAM,MAAM,GAC9B,GAAI,GAAO,KAAK,MAChB,KAAO,IACN,KAAM,GAAM,EAAK,IAAI,EAAK,SAC1B,GAAI,EAAM,EAET,EAAO,EAAK,aACF,EAAM,EAEhB,EAAO,EAAK,cACF,EAAK,UAEf,EAAK,OACL,EAAO,EAAK,QAEZ,OAGF,MAAO,GAGR,IAAI,GACH,KAAM,GAAO,KAAK,SAAS,GAC3B,MAAO,CAAE,KAAI,KAAA,OAAJ,EAAM,SAAU,QAAa,IAAI,KAAA,OAAJ,EAAM,OAAQ,QAGrD,OAAO,GACN,MAAO,MAAK,QAAQ,EAAK,IAG1B,eAAe,GACd,MAAO,MAAK,QAAQ,EAAK,IAGlB,QAAQ,EAAQ,GACvB,KAAM,GAAO,KAAK,MAAM,MAAM,GACxB,EAAqD,GAC3D,GAAI,GAAO,KAAK,MAGhB,KAAO,IACN,KAAM,GAAM,EAAK,IAAI,EAAK,SAC1B,GAAI,EAAM,EAET,EAAM,KAAK,CAAC,EAAG,IACf,EAAO,EAAK,aACF,EAAM,EAEhB,EAAM,KAAK,CAAC,GAAI,IAChB,EAAO,EAAK,cACF,EAAK,UAEf,EAAK,OACL,EAAM,KAAK,CAAC,EAAG,IACf,EAAO,EAAK,SAaZ,IAXA,AAAI,EAEH,GAAK,KAAO,OACZ,EAAK,IAAM,OACX,EAAK,MAAQ,QAGb,EAAK,MAAQ,OAIP,EAAM,OAAS,GAAK,EAAK,YAC/B,GAAI,CAAC,EAAK,GAAU,EAAM,MAC1B,OAAQ,OACF,GAAG,EAAO,KAAO,OAAW,UAC5B,GAAG,EAAO,IAAM,OAAW,UAC3B,GAAI,EAAO,MAAQ,OAAW,MAEpC,EAAO,EAER,QAKH,WAAW,GACV,KAAM,GAAO,KAAK,MAAM,MAAM,GAC9B,GAAI,GAAO,KAAK,MACZ,EACJ,KAAO,IACN,KAAM,GAAM,EAAK,IAAI,EAAK,SAC1B,GAAI,EAAM,EAET,EAAO,EAAK,aACF,EAAM,EAEhB,EAAO,EAAK,cACF,EAAK,UAEf,EAAK,OACL,EAAY,EAAK,OAAS,EAC1B,EAAO,EAAK,QAEZ,OAGF,MAAO,IAAQ,EAAK,OAAS,EAG9B,aAAa,GACZ,KAAM,GAAO,KAAK,MAAM,MAAM,GAC9B,GAAI,GAAO,KAAK,MAChB,KAAO,IACN,KAAM,GAAM,EAAK,IAAI,EAAK,SAC1B,GAAI,EAAM,EAET,EAAO,EAAK,aACF,EAAM,EAEhB,EAAO,EAAK,cACF,EAAK,UAEf,EAAK,OACL,EAAO,EAAK,QAGZ,OAAK,GAAK,IAGF,KAAK,SAAS,EAAK,KAF1B,QASJ,QAAQ,GACP,SAAW,CAAC,EAAK,IAAU,MAC1B,EAAS,EAAO,KAIhB,OAAO,YACR,MAAO,KAAK,SAAS,KAAK,QAGlB,SAAS,GACjB,AAAI,GAEH,OAAO,KAAK,SAAS,EAAK,MAGtB,EAAK,OAER,MAAM,CAAC,EAAK,IAAK,EAAK,QAGvB,MAAO,KAAK,SAAS,EAAK,KAG1B,MAAO,KAAK,SAAS,EAAK,SA5O7B,EAAA,kBAAA,EhBrRA,QgBgiBC,YAAY,EAAgD,GAlBnD,KAAA,GAAuB,cAmB/B,AAAI,YAAsB,GACzB,MAAK,IAAM,GAAI,KAAI,EAAW,KAC9B,KAAK,MAAQ,GAAK,KAAL,EAAS,EAAY,cAElC,MAAK,IAAM,GAAI,KACf,KAAK,MAAQ,GAAU,KAAV,EAAc,EAAY,cAIzC,IAAI,EAAe,GAClB,YAAK,IAAI,IAAI,KAAK,MAAM,GAAW,GAC5B,KAGR,IAAI,GACH,MAAO,MAAK,IAAI,IAAI,KAAK,MAAM,IAGhC,IAAI,GACH,MAAO,MAAK,IAAI,IAAI,KAAK,MAAM,OAG5B,QACH,MAAO,MAAK,IAAI,KAGjB,QACC,KAAK,IAAI,QAGV,OAAO,GACN,MAAO,MAAK,IAAI,OAAO,KAAK,MAAM,IAGnC,QAAQ,EAAqD,GAC5D,AAAI,MAAO,IAAY,aACtB,GAAM,EAAI,KAAK,IAEhB,OAAS,CAAC,EAAO,IAAU,MAAK,IAC/B,EAAI,EAAO,EAAA,IAAI,MAAM,GAAa,MAIpC,SACC,MAAO,MAAK,IAAI,UAGhB,OACA,OAAS,KAAO,MAAK,IAAI,OACxB,KAAM,GAAA,IAAI,MAAM,IAIjB,UACA,OAAS,KAAS,MAAK,IAAI,UAC1B,KAAM,CAAC,EAAA,IAAI,MAAM,EAAM,IAAK,EAAM,MAInC,GA9ES,OAAO,YA8Ef,OAAO,aACR,OAAS,KAAQ,MAAK,IACrB,KAAM,CAAC,EAAA,IAAI,MAAM,EAAK,IAAK,EAAK,KApFnC,EAAA,YAAA,EAEyB,EAAA,aAAe,AAAC,GAAkB,EAAS,WA8FpE,GAAkB,GAAlB,AAAA,UAAkB,GACjB,EAAA,EAAA,KAAA,GAAA,OACA,EAAA,EAAA,MAAA,GAAA,QACA,EAAA,EAAA,MAAA,GAAA,UAHiB,EAAA,EAAA,OAAA,GAAA,MAAK,KhB1mBvB,QgB2nBC,cATS,KAAA,GAAuB,YAU/B,KAAK,KAAO,GAAI,KAChB,KAAK,MAAQ,OACb,KAAK,MAAQ,OACb,KAAK,MAAQ,EACb,KAAK,OAAS,EAGf,QACC,KAAK,KAAK,QACV,KAAK,MAAQ,OACb,KAAK,MAAQ,OACb,KAAK,MAAQ,EACb,KAAK,SAGN,UACC,MAAO,CAAC,KAAK,OAAS,CAAC,KAAK,SAGzB,QACH,MAAO,MAAK,SAGT,eACH,MAAO,GAAA,KAAK,SAAK,MAAA,IAAA,OAAA,OAAA,EAAE,SAGhB,cACH,MAAO,GAAA,KAAK,SAAK,MAAA,IAAA,OAAA,OAAA,EAAE,MAGpB,IAAI,GACH,MAAO,MAAK,KAAK,IAAI,GAGtB,IAAI,EAAQ,EAAA,GACX,KAAM,GAAO,KAAK,KAAK,IAAI,GAC3B,GAAI,EAAC,EAGL,MAAI,KAAK,GACR,KAAK,MAAM,EAAM,GAEX,EAAK,MAGb,IAAI,EAAQ,EAAU,EAAA,GACrB,GAAI,GAAO,KAAK,KAAK,IAAI,GACzB,GAAI,EACH,EAAK,MAAQ,EACT,IAAK,GACR,KAAK,MAAM,EAAM,QAIlB,OADA,EAAO,CAAE,MAAK,QAAO,KAAM,OAAW,SAAU,QACxC,OACP,GACC,KAAK,YAAY,GACjB,UACD,GACC,KAAK,aAAa,GAClB,UACD,GACC,KAAK,YAAY,GACjB,cAEA,KAAK,YAAY,GACjB,MAEF,KAAK,KAAK,IAAI,EAAK,GACnB,KAAK,QAEN,MAAO,MAGR,OAAO,GACN,MAAO,CAAC,CAAC,KAAK,OAAO,GAGtB,OAAO,GACN,KAAM,GAAO,KAAK,KAAK,IAAI,GAC3B,GAAI,EAAC,EAGL,YAAK,KAAK,OAAO,GACjB,KAAK,WAAW,GAChB,KAAK,QACE,EAAK,MAGb,QACC,GAAI,GAAC,KAAK,OAAS,CAAC,KAAK,QAGzB,GAAI,CAAC,KAAK,OAAS,CAAC,KAAK,MACxB,KAAM,IAAI,OAAM,gBAEjB,KAAM,GAAO,KAAK,MAClB,YAAK,KAAK,OAAO,EAAK,KACtB,KAAK,WAAW,GAChB,KAAK,QACE,EAAK,OAGb,QAAQ,EAA8D,GACrE,KAAM,GAAQ,KAAK,OACnB,GAAI,GAAU,KAAK,MACnB,KAAO,IAMN,GALA,AAAI,EACH,EAAW,KAAK,GAAS,EAAQ,MAAO,EAAQ,IAAK,MAErD,EAAW,EAAQ,MAAO,EAAQ,IAAK,MAEpC,KAAK,SAAW,EACnB,KAAM,IAAI,OAAM,4CAEjB,EAAU,EAAQ,MAIpB,OACC,KAAM,GAAM,KACN,EAAQ,KAAK,OACnB,GAAI,GAAU,KAAK,MACnB,KAAM,GAAgC,EACpC,OAAO,YACP,MAAO,IAER,OACC,GAAI,EAAI,SAAW,EAClB,KAAM,IAAI,OAAM,4CAEjB,GAAI,GACH,KAAM,GAAS,CAAE,MAAO,EAAQ,IAAK,KAAM,IAC3C,SAAU,EAAQ,KACX,MAEP,OAAO,CAAE,MAAO,OAAW,KAAM,MAIpC,MAAO,GAGR,SACC,KAAM,GAAM,KACN,EAAQ,KAAK,OACnB,GAAI,GAAU,KAAK,MACnB,KAAM,GAAgC,EACpC,OAAO,YACP,MAAO,IAER,OACC,GAAI,EAAI,SAAW,EAClB,KAAM,IAAI,OAAM,4CAEjB,GAAI,GACH,KAAM,GAAS,CAAE,MAAO,EAAQ,MAAO,KAAM,IAC7C,SAAU,EAAQ,KACX,MAEP,OAAO,CAAE,MAAO,OAAW,KAAM,MAIpC,MAAO,GAGR,UACC,KAAM,GAAM,KACN,EAAQ,KAAK,OACnB,GAAI,GAAU,KAAK,MACnB,KAAM,GAAqC,EACzC,OAAO,YACP,MAAO,IAER,OACC,GAAI,EAAI,SAAW,EAClB,KAAM,IAAI,OAAM,4CAEjB,GAAI,GACH,KAAM,GAAiC,CAAE,MAAO,CAAC,EAAQ,IAAK,EAAQ,OAAQ,KAAM,IACpF,SAAU,EAAQ,KACX,MAEP,OAAO,CAAE,MAAO,OAAW,KAAM,MAIpC,MAAO,IAGR,GA1MU,OAAO,YA0MhB,OAAO,aACP,MAAO,MAAK,UAGH,QAAQ,GACjB,GAAI,KAAW,KAAK,OAGpB,GAAI,IAAY,GACf,KAAK,QACL,OAED,GAAI,GAAU,KAAK,MACf,EAAc,KAAK,KACvB,KAAO,GAAW,EAAc,GAC/B,KAAK,KAAK,OAAO,EAAQ,KACzB,EAAU,EAAQ,KAClB,IAED,KAAK,MAAQ,EACb,KAAK,MAAQ,EACT,GACH,GAAQ,SAAW,QAEpB,KAAK,UAGE,aAAa,GAEpB,GAAI,CAAC,KAAK,OAAS,CAAC,KAAK,MACxB,KAAK,MAAQ,UACF,KAAK,MAGhB,EAAK,KAAO,KAAK,MACjB,KAAK,MAAM,SAAW,MAHtB,MAAM,IAAI,OAAM,gBAKjB,KAAK,MAAQ,EACb,KAAK,SAGE,YAAY,GAEnB,GAAI,CAAC,KAAK,OAAS,CAAC,KAAK,MACxB,KAAK,MAAQ,UACF,KAAK,MAGhB,EAAK,SAAW,KAAK,MACrB,KAAK,MAAM,KAAO,MAHlB,MAAM,IAAI,OAAM,gBAKjB,KAAK,MAAQ,EACb,KAAK,SAGE,WAAW,GAClB,GAAI,IAAS,KAAK,OAAS,IAAS,KAAK,MACxC,KAAK,MAAQ,OACb,KAAK,MAAQ,eAEL,IAAS,KAAK,OAGtB,GAAI,CAAC,EAAK,KACT,KAAM,IAAI,OAAM,gBAEjB,EAAK,KAAK,SAAW,OACrB,KAAK,MAAQ,EAAK,aAEV,IAAS,KAAK,OAGtB,GAAI,CAAC,EAAK,SACT,KAAM,IAAI,OAAM,gBAEjB,EAAK,SAAS,KAAO,OACrB,KAAK,MAAQ,EAAK,cAGlB,KAAM,GAAO,EAAK,KACZ,EAAW,EAAK,SACtB,GAAI,CAAC,GAAQ,CAAC,EACb,KAAM,IAAI,OAAM,gBAEjB,EAAK,SAAW,EAChB,EAAS,KAAO,EAEjB,EAAK,KAAO,OACZ,EAAK,SAAW,OAChB,KAAK,SAGE,MAAM,EAAkB,GAC/B,GAAI,CAAC,KAAK,OAAS,CAAC,KAAK,MACxB,KAAM,IAAI,OAAM,gBAEjB,GAAK,MAAK,GAAoB,IAAK,IAInC,GAAI,IAAK,GACR,GAAI,IAAS,KAAK,MACjB,OAGD,KAAM,GAAO,EAAK,KACZ,EAAW,EAAK,SAGtB,AAAI,IAAS,KAAK,MAGjB,GAAU,KAAO,OACjB,KAAK,MAAQ,GAIb,GAAM,SAAW,EACjB,EAAU,KAAO,GAIlB,EAAK,SAAW,OAChB,EAAK,KAAO,KAAK,MACjB,KAAK,MAAM,SAAW,EACtB,KAAK,MAAQ,EACb,KAAK,iBACK,IAAK,GACf,GAAI,IAAS,KAAK,MACjB,OAGD,KAAM,GAAO,EAAK,KACZ,EAAW,EAAK,SAGtB,AAAI,IAAS,KAAK,MAGjB,GAAM,SAAW,OACjB,KAAK,MAAQ,GAGb,GAAM,SAAW,EACjB,EAAU,KAAO,GAElB,EAAK,KAAO,OACZ,EAAK,SAAW,KAAK,MACrB,KAAK,MAAM,KAAO,EAClB,KAAK,MAAQ,EACb,KAAK,WAIP,SACC,KAAM,GAAiB,GAEvB,YAAK,QAAQ,CAAC,EAAO,KACpB,EAAK,KAAK,CAAC,EAAK,MAGV,EAGR,SAAS,GACR,KAAK,QAEL,SAAW,CAAC,EAAK,IAAU,GAC1B,KAAK,IAAI,EAAK,IApXjB,EAAA,UAAA,EhBhnBA,egBy+BoC,GAKnC,YAAY,EAAe,EAAgB,GAC1C,QACA,KAAK,OAAS,EACd,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAAG,GAAQ,MAGxC,SACH,MAAO,MAAK,UAGT,OAAM,GACT,KAAK,OAAS,EACd,KAAK,eAGF,SACH,MAAO,MAAK,UAGT,OAAM,GACT,KAAK,OAAS,KAAK,IAAI,KAAK,IAAI,EAAG,GAAQ,GAC3C,KAAK,YAGG,IAAI,EAAQ,EAAA,GACpB,MAAO,OAAM,IAAI,EAAK,GAGvB,KAAK,GACJ,MAAO,OAAM,IAAI,EAAG,GAGZ,IAAI,EAAQ,GACpB,aAAM,IAAI,EAAK,EAAK,GACpB,KAAK,YACE,KAGA,YACP,AAAI,KAAK,KAAO,KAAK,QACpB,KAAK,QAAQ,KAAK,MAAM,KAAK,OAAS,KAAK,UA7C9C,EAAA,SAAA,EhBz+BA,QgBsiCC,YAAY,GANZ,EAAA,IAAA,KAAA,QAOC,GAAA,KAAI,EAAW,EAAM,QALX,QACV,MAAO,IAAA,KAAI,EAAA,KAAS,KAOrB,QAAQ,EAAgE,GACvE,GAAA,KAAI,EAAA,KAAS,QAAQ,EAAY,GAGlC,IAAI,GACH,MAAO,IAAA,KAAI,EAAA,KAAS,IAAI,GAGzB,IAAI,GACH,MAAO,IAAA,KAAI,EAAA,KAAS,IAAI,GAGzB,UACC,MAAO,IAAA,KAAI,EAAA,KAAS,UAGrB,OACC,MAAO,IAAA,KAAI,EAAA,KAAS,OAGrB,SACC,MAAO,IAAA,KAAI,EAAA,KAAS,UAGrB,GAAA,GAAA,SAAC,OAAO,aACP,MAAO,IAAA,KAAI,EAAA,KAAS,WApCtB,EAAA,gBAAA,gKCvhCA,GAAiB,GAAjB,AAAA,UAAiB,GAMH,EAAA,SAAW,WAKX,EAAA,OAAS,SAKT,EAAA,SAAW,UAKX,EAAA,YAAc,cAKd,EAAA,mBAAqB,qBAErB,EAAA,KAAO,OAEP,EAAA,MAAQ,QAER,EAAA,KAAO,OAEP,EAAA,OAAS,SAET,EAAA,SAAW,WAEX,EAAA,KAAO,OAEP,EAAA,QAAU,UAEV,EAAA,aAAe,gBAEf,EAAA,qBAAuB,yBAEvB,EAAA,SAAW,kBAEX,EAAA,mBAAqB,uBAErB,EAAA,eAAiB,kBAEjB,EAAA,mBAAqB,uBAErB,EAAA,2BAA6B,gCAE7B,EAAA,eAAiB,kBAEjB,EAAA,qBAAuB,yBAEvB,EAAA,eAAiB,kBAEjB,EAAA,aAAe,gBAKf,EAAA,cAAgB,iBAKhB,EAAA,UAAY,YAMZ,EAAA,mBAAqB,cAKrB,EAAA,IAAM,QAnFH,EAAA,EAAA,SAAA,GAAA,QAAO,KjBRxB,QiB8FA,cACkB,KAAA,OAAuD,OAAO,OAAO,MACrE,KAAA,OAAuD,OAAO,OAAO,MACrE,KAAA,kBAAkE,OAAO,OAAO,MACzF,KAAA,oBAAwC,OACxC,KAAA,UAAwC,KAEhD,sBAAsB,GACrB,KAAK,oBAAsB,EAG5B,YAAY,GACX,KAAK,UAAY,EAGlB,IAAI,EAAmB,EAAc,GACpC,KAAK,OAAO,GAAa,EACzB,KAAK,OAAO,GAAa,EAG1B,mBAAmB,EAAmB,GACrC,KAAK,kBAAkB,GAAa,EAGrC,QAAQ,GACP,GAAI,KAAK,UACR,MAAO,MAAK,UAAU,GAEvB,KAAM,GAAY,EAAI,UACtB,GAAI,GAAO,KAAK,OAAO,GACvB,AAAI,GAAQ,EAAK,QAAQ,OAAS,IACjC,GAAO,IAAI,MAEZ,KAAM,GAAO,KAAK,OAAO,GACnB,EAAkB,KAAK,kBAAkB,GAC/C,GAAI,GAAQ,QAAQ,mBAAmB,EAAI,QAC3C,MAAI,OAAO,IAAoB,UAC9B,IAAS,QAAQ,mBAAmB,MAE9B,EAAA,IAAI,KAAK,CACf,OAAQ,EAAS,MAAQ,KAAK,oBAAsB,EAAQ,qBAC5D,UAAW,GAAG,KAAQ,IACtB,KAAM,0BACN,WAKU,EAAA,kBAAoB,GAAI,GjB9IrC,QiBgJA,cAEkB,KAAA,mBAAqB,aAUtC,aAAa,EAA2B,EAAqD,GAC5F,KAAM,GAAM,KAAK,MAAM,EAAa,GAGpC,MAAI,GAAI,SAAW,EAAQ,aACnB,EAAA,kBAAkB,QAAQ,GAK9B,EAAS,UAAa,IAAsB,EAAS,8BAAgC,EAAI,SAAW,EAAQ,KACxG,EAAI,KAAK,CACf,OAAQ,EAAQ,mBAKhB,UAAW,EAAI,WAAa,KAAK,mBACjC,MAAO,KACP,SAAU,OAIL,EASR,UAAU,EAA2B,GACpC,KAAM,GAAM,KAAK,MAAM,EAAa,GAGpC,MAAI,GAAI,SAAW,EAAQ,mBACnB,EAAI,KAAK,CACf,OAAQ,EAAQ,KAIhB,UAAW,EAAI,YAAc,KAAK,mBAAqB,EAAI,UAAY,KACvE,MAAO,KACP,SAAU,OAIL,EAGA,MAAM,EAA2B,GACxC,MAAI,GAAA,IAAI,MAAM,GACN,EAGD,EAAA,IAAI,MAAM,EAAe,MAAM,KAI3B,EAAA,WAAa,GAAI,gLC3MjB,EAAA,aAAe,MAAQ,QAAO,UAAsD,WAAc,WAE/G,KAAM,GAAW,GAAI,GAAA,SAAyB,KAC9C,WAA6B,GAC5B,MAAO,GAAU,EAAK,MAAO,GAD9B,EAAA,aAAA,EAIA,KAAM,GAAW,GAAI,GAAA,SAAyB,KAC9C,WAA6B,GAC5B,MAAO,GAAU,EAAK,MAAO,GAD9B,EAAA,aAAA,EAIA,KAAM,GAA4B,mBAClC,WAAmB,EAAa,EAAc,GAC7C,GAAI,CAAC,EAAA,cAAgB,CAAC,EACrB,MAAO,GAGR,KAAM,GAAS,EAAgB,IAAI,GACnC,GAAI,EACH,MAAO,GAGR,GAAI,GACJ,MAAI,GAA0B,KAAK,GAClC,EAAY,EAAK,UAAU,GAE3B,EAAM,EAIP,EAAgB,IAAI,EAAK,GAElB,EAGK,EAAA,cAA0C,WACtD,GAAK,EAAA,cAMJ,KAAM,GAAQ,mBACd,MAAO,UAAU,GAChB,MAAO,GAAa,GAAK,QAAQ,EAAO,SANzC,OAAO,UAAU,GAAe,MAAO,oiBCvCzC,WAA+B,GAC9B,MAAO,AnBdR,GmBcQ,EAAA,aAAY,EAAK,IADzB,EAAA,eAAA,EnBbA,QmB4IC,YAAoB,GAAA,KAAA,kBAAA,EAEpB,QAAQ,EAAW,EAAW,EAA0B,IACvD,MAAI,KAAS,EACL,EAED,AnBlJT,GmBkJS,EAAA,SAAW,KAAK,iBAAiB,EAAM,GAAiB,KAAK,iBAAiB,EAAM,IAG5F,QAAQ,EAAuB,EAAuB,EAA0B,IAC/E,MAAI,KAAS,EACL,GAEJ,CAAC,GAAQ,CAAC,EACN,GAED,KAAK,iBAAiB,EAAM,KAAoB,KAAK,iBAAiB,EAAM,GAGpF,iBAAiB,EAAU,EAA0B,IACpD,MAAO,GAAI,KAAK,CACf,KAAM,KAAK,kBAAkB,GAAO,EAAI,KAAK,cAAgB,OAC7D,SAAU,EAAiB,KAAO,SAChC,WAGJ,iBAAiB,GAChB,MAAO,MAAK,kBAAkB,GAG/B,gBAAgB,EAAW,EAAsB,EAA0B,IAC1E,GAAI,EAAK,SAAW,EAAgB,QACnC,GAAI,EAAK,SAAW,EAAA,QAAQ,KAC3B,MAAO,GAAQ,gBAAgB,EAAe,GAAO,EAAe,GAAkB,KAAK,kBAAkB,KAAU,EAAK,QAAU,EAAgB,OAAU,IAAkB,EAAK,WAAa,EAAgB,UAErN,GAAI,AnB/KP,GmB+KO,EAAA,kBAAiB,EAAK,UAAW,EAAgB,WACpD,MAAO,GAAQ,gBAAgB,EAAK,KAAM,EAAgB,KAAM,KAAK,kBAAkB,GAAO,MAAQ,EAAK,QAAU,EAAgB,OAAU,IAAkB,EAAK,WAAa,EAAgB,UAGrM,MAAO,GAKR,SAAS,KAAkB,GAC1B,MAAO,GAAA,IAAI,SAAS,EAAU,GAAG,GAGlC,oBAAoB,GACnB,MAAO,AnB7LT,GmB6LS,EAAA,UAAS,IAAa,EAAS,UAGvC,SAAS,GACR,MAAO,GAAM,MAAM,SAAS,EAAS,MAGtC,QAAQ,GACP,MAAO,GAAM,MAAM,QAAQ,EAAS,MAGrC,QAAQ,GACP,GAAI,EAAS,KAAK,SAAW,EAC5B,MAAO,GAER,GAAI,GACJ,MAAI,GAAS,SAAW,EAAA,QAAQ,KAC/B,EAAU,EAAA,IAAI,KAAK,EAAM,QAAQ,EAAe,KAAY,KAE5D,GAAU,EAAM,MAAM,QAAQ,EAAS,MACnC,EAAS,WAAa,EAAQ,QAAU,EAAQ,WAAW,KAAE,IAChE,SAAQ,MAAM,YAAY,EAAS,0CACnC,EAAU,MAGL,EAAS,KAAK,CACpB,KAAM,IAIR,cAAc,GACb,GAAI,CAAC,EAAS,KAAK,OAClB,MAAO,GAER,GAAI,GACJ,MAAI,GAAS,SAAW,EAAA,QAAQ,KAC/B,EAAiB,EAAA,IAAI,KAAK,EAAM,UAAU,EAAe,KAAY,KAErE,EAAiB,EAAM,MAAM,UAAU,EAAS,MAE1C,EAAS,KAAK,CACpB,KAAM,IAIR,aAAa,EAAW,GACvB,GAAI,IAAK,SAAW,EAAG,QAAU,CAAC,AnB3OpC,GmB2OoC,EAAA,kBAAiB,EAAK,UAAW,EAAG,aAGtE,GAAI,EAAK,SAAW,EAAA,QAAQ,MAC3B,KAAM,GAAe,EAAM,SAAS,EAAe,GAAO,EAAe,IACzE,MAAO,GAAA,UAAY,EAAQ,UAAU,GAAgB,EAEtD,GAAI,GAAW,EAAK,MAAQ,IAAK,EAAS,EAAG,MAAQ,IACrD,GAAI,KAAK,kBAAkB,IAE1B,GAAI,GAAI,EACR,SAAW,GAAM,KAAK,IAAI,EAAS,OAAQ,EAAO,QAAS,EAAI,GAC1D,IAAS,WAAW,KAAO,EAAO,WAAW,IAC5C,EAAS,OAAO,GAAG,gBAAkB,EAAO,OAAO,GAAG,eAFQ,IACnE,CAMD,EAAW,EAAO,OAAO,EAAG,GAAK,EAAS,OAAO,GAElD,MAAO,GAAM,MAAM,SAAS,EAAU,IAGvC,YAAY,EAAW,GACtB,GAAI,EAAK,SAAW,EAAA,QAAQ,MAC3B,KAAM,GAAS,EAAA,IAAI,KAAK,EAAM,QAAQ,EAAe,GAAO,IAC5D,MAAO,GAAK,KAAK,CAChB,UAAW,EAAO,UAClB,KAAM,EAAO,OAGf,MAAI,GAAK,QAAQ,OAAS,IACzB,GAAO,EAAQ,UAAU,GACrB,mBAAmB,KAAK,IAC3B,GAAO,IAAM,IAGR,EAAK,KAAK,CAChB,KAAM,EAAM,MAAM,QAAQ,EAAK,KAAM,KAMvC,eAAe,GACd,MAAO,CAAC,CAAC,EAAS,MAAQ,EAAS,KAAK,KAAO,IAGhD,iBAAiB,EAAY,GAC5B,MAAO,KAAO,GAAM,AnB5RtB,GmB4RsB,EAAA,kBAAiB,EAAI,GAG1C,yBAAyB,EAAe,EAAc,EAAM,KAC3D,GAAI,EAAS,SAAW,EAAA,QAAQ,MAC/B,KAAM,GAAM,EAAe,GAC3B,MAAO,GAAI,OAAS,EAAQ,QAAQ,GAAK,QAAU,EAAI,EAAI,OAAS,KAAO,OAE3E,KAAM,GAAI,EAAS,KACnB,MAAQ,GAAE,OAAS,GAAK,EAAE,WAAW,EAAE,OAAS,KAAE,IAAwB,CAAE,sBAAsB,KAAK,EAAS,SAIlH,4BAA4B,EAAe,EAAc,EAAM,KAE9D,MAAI,AnB3SN,GmB2SM,EAAA,0BAAyB,EAAU,GAC/B,EAAS,KAAK,CAAE,KAAM,EAAS,KAAK,OAAO,EAAG,EAAS,KAAK,OAAS,KAEtE,EAGR,yBAAyB,EAAe,EAAc,EAAM,KAC3D,GAAI,GAAqB,GACzB,GAAI,EAAS,SAAW,EAAA,QAAQ,MAC/B,KAAM,GAAM,EAAe,GAC3B,EAAc,IAAQ,QAAe,EAAI,SAAW,EAAQ,QAAQ,GAAK,QAAY,EAAI,EAAI,OAAS,KAAO,OAE7G,EAAM,IACN,KAAM,GAAI,EAAS,KACnB,EAAY,EAAE,SAAW,GAAK,EAAE,WAAW,EAAE,OAAS,KAAE,GAEzD,MAAI,CAAC,GAAa,CAAC,AnB3TrB,GmB2TqB,EAAA,0BAAyB,EAAU,GAC9C,EAAS,KAAK,CAAE,KAAM,EAAS,KAAO,MAEvC,GApLT,EAAA,OAAA,EAgMa,EAAA,OAAS,GAAI,GAAO,IAAM,IAa1B,EAAA,2BAA6B,GAAI,GAAO,GAG7C,EAAI,SAAW,EAAA,QAAQ,KAAO,CAAC,EAAA,QAAU,IAepC,EAAA,qBAAuB,GAAI,GAAO,GAAK,IAEvC,EAAA,QAAU,EAAA,OAAO,QAAQ,KAAK,EAAA,QAC9B,EAAA,gBAAkB,EAAA,OAAO,gBAAgB,KAAK,EAAA,QAC9C,EAAA,iBAAmB,EAAA,OAAO,iBAAiB,KAAK,EAAA,QAChD,EAAA,oBAAsB,EAAA,OAAO,oBAAoB,KAAK,EAAA,QACtD,EAAA,SAAW,EAAA,OAAO,SAAS,KAAK,EAAA,QAChC,EAAA,QAAU,EAAA,OAAO,QAAQ,KAAK,EAAA,QAC9B,EAAA,QAAU,EAAA,OAAO,QAAQ,KAAK,EAAA,QAC9B,EAAA,SAAW,EAAA,OAAO,SAAS,KAAK,EAAA,QAChC,EAAA,cAAgB,EAAA,OAAO,cAAc,KAAK,EAAA,QAC1C,EAAA,aAAe,EAAA,OAAO,aAAa,KAAK,EAAA,QACxC,EAAA,YAAc,EAAA,OAAO,YAAY,KAAK,EAAA,QACtC,EAAA,eAAiB,EAAA,OAAO,eAAe,KAAK,EAAA,QAC5C,EAAA,iBAAmB,EAAA,OAAO,iBAAiB,KAAK,EAAA,QAChD,EAAA,yBAA2B,EAAA,OAAO,yBAAyB,KAAK,EAAA,QAChE,EAAA,4BAA8B,EAAA,OAAO,4BAA4B,KAAK,EAAA,QACtE,EAAA,yBAA2B,EAAA,OAAO,yBAAyB,KAAK,EAAA,QAI7E,WAAmC,EAAY,GAC9C,KAAM,GAAuB,GAC7B,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,KACjC,KAAM,GAAoB,EAAiB,EAAM,IACjD,AAAI,EAAM,KAAK,CAAC,EAAW,IACtB,IAAU,EACN,GAGD,AnBvYV,GmBuYU,EAAA,iBAAgB,EAAmB,EAAiB,MAK5D,EAAgB,KAAK,EAAM,IAG5B,MAAO,GAjBR,EAAA,gBAAA,EAuBA,GAAiB,GAAjB,AAAA,UAAiB,GAEH,EAAA,gBAAkB,QAClB,EAAA,sBAAwB,cACxB,EAAA,eAAiB,OACjB,EAAA,eAAiB,OAE9B,WAA8B,GAC7B,KAAM,GAAW,GAAI,KAKrB,AADa,EAAQ,KAAK,UAAU,EAAQ,KAAK,QAAQ,KAAO,EAAG,EAAQ,KAAK,YAAY,MACvF,MAAM,KAAK,QAAQ,IACvB,KAAM,CAAC,EAAK,GAAS,EAAS,MAAM,KACpC,AAAI,GAAO,GACV,EAAS,IAAI,EAAK,KAMpB,KAAM,GAAO,EAAQ,KAAK,UAAU,EAAG,EAAQ,KAAK,QAAQ,MAC5D,MAAI,IACH,EAAS,IAAI,EAAA,eAAgB,GAGvB,EApBQ,EAAA,cAAa,IAPb,EAAA,EAAA,SAAA,GAAA,QAAO,KA+BxB,WAAgC,EAAe,EAA+B,GAC7E,GAAI,GACH,GAAI,GAAO,EAAS,KACpB,MAAI,IAAQ,EAAK,KAAO,EAAM,MAAM,KACnC,GAAO,EAAM,MAAM,IAAM,GAGnB,EAAS,KAAK,CAAE,OAAQ,EAAa,YAAW,SAGxD,MAAO,GAAS,KAAK,CAAE,OAAQ,IAVhC,EAAA,gBAAA,moBCvaA,WAA8B,GAC7B,MAAO,CAAC,CAAC,GAAO,MAAQ,GAA8B,MAAS,WADhE,EAAA,WAAA,EAQA,WAA2C,GAC1C,KAAM,GAAS,GAAI,GAAA,wBAEb,EAAW,EAAS,EAAO,OAC3B,EAAU,GAAI,SAAW,CAAC,EAAS,KACxC,EAAO,MAAM,wBAAwB,KACpC,EAAO,ApB3BV,GoB2BU,EAAA,eAER,QAAQ,QAAQ,GAAU,KAAK,KAC9B,EAAO,UACP,EAAQ,KACN,KACF,EAAO,UACP,EAAO,QAIT,MAA6B,IAAI,OAChC,SACC,EAAO,SAER,KAAqC,EAA2E,GAC/G,MAAO,GAAQ,KAAK,EAAS,GAE9B,MAAuB,GACtB,MAAO,MAAK,KAAK,OAAW,GAE7B,QAAQ,GACP,MAAO,GAAQ,QAAQ,KA5B1B,EAAA,wBAAA,EAmCA,WAAoC,EAAqB,EAA0B,GAClF,MAAO,SAAQ,KAAK,CAAC,EAAS,GAAI,SAAuB,GAAW,EAAM,wBAAwB,IAAM,EAAQ,OADjH,EAAA,iBAAA,EAOO,iBAA0C,GAChD,GAAI,GAAuB,GAC3B,KAAM,GAAW,EAAoB,IAAI,CAAC,EAAS,IAAU,EAAQ,KAAK,IAAY,GAAuB,EAAc,MACrH,EAAS,KAAM,SAAQ,KAAK,GAClC,SAAoB,QAAQ,CAAC,EAAoB,KAChD,AAAI,IAAU,GACb,EAAmB,WAGd,EATR,EAAA,wBAAA,EAYA,WAA+B,EAAqB,EAAiB,GACpE,GAAI,GAEJ,KAAM,GAAQ,WAAW,KACxB,GAAc,MAAd,EAAiB,QACjB,GAAS,MAAT,KACE,GAEH,MAAO,SAAQ,KAAK,CACnB,EAAQ,QAAQ,IAAM,aAAa,IACnC,GAAI,SAAuB,GAAW,EAAiB,KAVzD,EAAA,YAAA,EAcA,WAA6B,GAC5B,MAAO,IAAI,SAAW,CAAC,EAAS,KAC/B,KAAM,GAAO,IACb,AAAI,EAAc,GACjB,EAAK,KAAK,EAAS,GAEnB,EAAQ,KANX,EAAA,UAAA,EpBzFA,QoBwIC,cACC,KAAK,cAAgB,KACrB,KAAK,cAAgB,KACrB,KAAK,qBAAuB,KAG7B,MAAS,GACR,GAAI,KAAK,eAGR,GAFA,KAAK,qBAAuB,EAExB,CAAC,KAAK,eACT,KAAM,GAAa,KAClB,KAAK,cAAgB,KAErB,KAAM,GAAS,KAAK,MAAM,KAAK,sBAC/B,YAAK,qBAAuB,KAErB,GAGR,KAAK,cAAgB,GAAI,SAAQ,IAChC,KAAK,cAAe,KAAK,EAAY,GAAY,KAAK,KAIxD,MAAO,IAAI,SAAQ,CAAC,EAAS,KAC5B,KAAK,cAAe,KAAK,EAAS,KAIpC,YAAK,cAAgB,IAEd,GAAI,SAAQ,CAAC,EAAS,KAC5B,KAAK,cAAe,KAAK,AAAC,IACzB,KAAK,cAAgB,KACrB,EAAQ,IACN,AAAC,IACH,KAAK,cAAgB,KACrB,EAAO,QA5CX,EAAA,UAAA,EpBlIA,QoBoLA,cAES,KAAA,QAA4B,QAAQ,QAAQ,MAEpD,MAAS,GACR,MAAO,MAAK,QAAU,KAAK,QAAQ,KAAK,IAAM,IAAe,IAAM,MALrE,EAAA,UAAA,EpBpLA,QoB6LA,cAES,KAAA,WAAa,GAAI,KAEzB,MAAS,EAAW,SAEnB,KAAM,GAAa,AADI,IAAA,KAAK,WAAW,IAAI,MAAI,MAAA,IAAA,OAAA,EAAI,QAAQ,WAEzD,MAAM,QACN,KAAK,GACL,QAAQ,KACR,AAAI,KAAK,WAAW,IAAI,KAAS,GAChC,KAAK,WAAW,OAAO,KAG1B,YAAK,WAAW,IAAI,EAAK,GAClB,GAfT,EAAA,eAAA,EpB7LA,QoB+OC,YAAmB,GAAA,KAAA,aAAA,EAClB,KAAK,QAAU,KACf,KAAK,kBAAoB,KACzB,KAAK,UAAY,KACjB,KAAK,SAAW,KAChB,KAAK,KAAO,KAGb,QAAQ,EAA6B,EAAgB,KAAK,cACzD,YAAK,KAAO,EACZ,KAAK,gBAEA,KAAK,mBACT,MAAK,kBAAoB,GAAI,SAAQ,CAAC,EAAS,KAC9C,KAAK,UAAY,EACjB,KAAK,SAAW,IACd,KAAK,KAGP,GAFA,KAAK,kBAAoB,KACzB,KAAK,UAAY,KACb,KAAK,MACR,KAAM,GAAO,KAAK,KAClB,YAAK,KAAO,KACL,QAMV,KAAK,QAAU,WAAW,KACzB,KAAK,QAAU,KACX,KAAK,WACR,KAAK,UAAU,OAEd,GAEI,KAAK,kBAGb,cACC,MAAO,MAAK,UAAY,KAGzB,SACC,KAAK,gBAED,KAAK,mBACJ,MAAK,UACR,KAAK,SAAS,ApB9RlB,GoB8RkB,EAAA,aAEf,KAAK,kBAAoB,MAInB,gBACP,AAAI,KAAK,UAAY,MACpB,cAAa,KAAK,SAClB,KAAK,QAAU,MAIjB,UACC,KAAK,iBArEP,EAAA,QAAA,EpBvOA,QoB8TC,YAAY,GACX,KAAK,QAAU,GAAI,GAAQ,GAC3B,KAAK,UAAY,GAAI,GAGtB,QAAQ,EAAmC,GAC1C,MAAO,MAAK,QAAQ,QAAQ,IAAM,KAAK,UAAU,MAAM,GAAiB,GAGzE,cACC,MAAO,MAAK,QAAQ,cAGrB,SACC,KAAK,QAAQ,SAGd,UACC,KAAK,QAAQ,WAvBf,EAAA,iBAAA,EpBzTA,QoB6VC,cACC,KAAK,QAAU,GACf,KAAK,SAAW,GAAI,SAAiB,CAAC,EAAG,KACxC,KAAK,iBAAmB,IAI1B,SACC,MAAO,MAAK,QAGb,OACC,KAAK,QAAU,GACf,KAAK,iBAAiB,IAGvB,OACC,MAAO,MAAK,UAvBd,EAAA,QAAA,EpBvVA,eoBsXqC,GAIpC,YAAY,GACX,QACA,KAAK,SAAW,WAAW,IAAM,KAAK,OAAQ,GAGtC,OACR,aAAa,KAAK,UAClB,MAAM,QAXR,EAAA,gBAAA,EAiBA,WAAwB,EAAgB,GACvC,MAAK,GAIE,GAAI,SAAQ,CAAC,EAAS,KAC5B,KAAM,GAAS,WAAW,EAAS,GACnC,EAAM,wBAAwB,KAC7B,aAAa,GACb,EAAO,ApBhZV,GoBgZU,EAAA,iBAPD,EAAwB,GAAS,EAAQ,EAAQ,IAF1D,EAAA,QAAA,EAcA,WAAkC,EAAqB,EAAU,GAChE,KAAM,GAAQ,WAAW,EAAS,GAClC,MAAO,ApBvZR,GoBuZQ,EAAA,cAAa,IAAM,aAAa,IAFxC,EAAA,kBAAA,EAKA,WAAgC,GAC/B,MAAO,GAAQ,KAAK,OAAW,OADhC,EAAA,aAAA,EASA,WAA4B,GAC3B,KAAM,GAAe,GACrB,GAAI,GAAQ,EACZ,KAAM,GAAM,EAAiB,OAE7B,aACC,MAAO,GAAQ,EAAM,EAAiB,OAAa,KAGpD,WAAqB,IACpB,AAAI,AAAwB,IAAW,MACtC,EAAQ,KAAK,IAGd,KAAM,IAAI,IACV,MAAI,IACI,GAAE,KAAK,GAGR,QAAQ,QAAQ,GAGxB,MAAO,SAAQ,QAAQ,MAAM,KAAK,GAtBnC,EAAA,SAAA,EAyBA,WAAyB,EAAuC,EAAgC,GAAK,CAAC,CAAC,EAAG,EAAyB,MAClI,GAAI,GAAQ,EACZ,KAAM,GAAM,EAAiB,OAEvB,EAAgC,KACrC,GAAI,GAAS,EACZ,MAAO,SAAQ,QAAQ,GAGxB,KAAM,IAAU,EAAiB,KAGjC,MAAO,AAFS,SAAQ,QAAQ,MAEjB,KAAK,IACf,EAAW,IACP,QAAQ,QAAQ,IAGjB,MAIT,MAAO,KArBR,EAAA,MAAA,EA8BA,WAAiC,EAA2B,EAAgC,GAAK,CAAC,CAAC,EAAG,EAAyB,MAC9H,GAAI,EAAY,SAAW,EAC1B,MAAO,SAAQ,QAAQ,GAGxB,GAAI,GAAO,EAAY,OACvB,KAAM,GAAS,cACd,EAAO,GACP,SAAW,MAAW,GACrB,AAAA,IAAA,GAAC,IAA0C,UAAM,MAAA,KAAA,QAAA,GAAA,KAAA,IAInD,MAAO,IAAI,SAAkB,CAAC,EAAS,MACtC,SAAW,MAAW,GACrB,GAAQ,KAAK,KACZ,AAAI,EAAE,GAAQ,GAAK,EAAW,IAC7B,KACA,EAAQ,KACE,IAAS,GACnB,EAAQ,KAGR,MAAM,KACN,AAAI,EAAE,GAAQ,GACb,KACA,GAAO,SA1Bb,EAAA,cAAA,EpB1dA,QoB6gBC,YAAY,GANJ,KAAA,MAAQ,EAOf,KAAK,uBAAyB,EAC9B,KAAK,oBAAsB,GAC3B,KAAK,gBAAkB,EACvB,KAAK,YAAc,GAAI,GAAA,WAGpB,cACH,MAAO,MAAK,YAAY,SAGrB,QACH,MAAO,MAAK,MAIb,MAAM,GACL,YAAK,QAEE,GAAI,SAAW,CAAC,EAAG,KACzB,KAAK,oBAAoB,KAAK,CAAE,UAAS,IAAG,MAC5C,KAAK,YAIC,UACP,KAAO,KAAK,oBAAoB,QAAU,KAAK,gBAAkB,KAAK,yBACrE,KAAM,GAAe,KAAK,oBAAoB,QAC9C,KAAK,kBAEL,KAAM,GAAU,EAAa,UAC7B,EAAQ,KAAK,EAAa,EAAG,EAAa,GAC1C,EAAQ,KAAK,IAAM,KAAK,WAAY,IAAM,KAAK,aAIzC,WACP,KAAK,QACL,KAAK,kBAEL,AAAI,KAAK,oBAAoB,OAAS,EACrC,KAAK,UAEL,KAAK,YAAY,OAInB,UACC,KAAK,YAAY,WAxDnB,EAAA,QAAA,EpBrgBA,eoBokB8B,GAE7B,cACC,MAAM,IAHR,EAAA,MAAA,EpBpkBA,QoB+kBA,cAEkB,KAAA,OAAS,GAAI,KAE9B,SAAS,EAAe,EAAkB,EAAA,QACzC,KAAM,GAAM,EAAO,iBAAiB,GAEpC,GAAI,GAAQ,KAAK,OAAO,IAAI,GAC5B,MAAK,IACJ,GAAQ,GAAI,GACZ,EAAA,MAAM,KAAK,EAAM,YAAY,KAC5B,GAAK,MAAL,EAAO,UACP,KAAK,OAAO,OAAO,KAGpB,KAAK,OAAO,IAAI,EAAK,IAGf,EAGR,UACC,KAAK,OAAO,QAAQ,GAAS,EAAM,WACnC,KAAK,OAAO,SAvBd,EAAA,cAAA,EpB/kBA,QoB+mBC,YAAY,EAAqB,GAChC,KAAK,OAAS,GAEV,MAAO,IAAW,YAAc,MAAO,IAAY,UACtD,KAAK,YAAY,EAAQ,GAI3B,UACC,KAAK,SAGN,SACC,AAAI,KAAK,SAAW,IACnB,cAAa,KAAK,QAClB,KAAK,OAAS,IAIhB,aAAa,EAAoB,GAChC,KAAK,SACL,KAAK,OAAS,WAAW,KACxB,KAAK,OAAS,GACd,KACE,GAGJ,YAAY,EAAoB,GAC/B,AAAI,KAAK,SAAW,IAIpB,MAAK,OAAS,WAAW,KACxB,KAAK,OAAS,GACd,KACE,KAxCL,EAAA,aAAA,EpB1mBA,QoB0pBC,cACC,KAAK,OAAS,GAGf,UACC,KAAK,SAGN,SACC,AAAI,KAAK,SAAW,IACnB,eAAc,KAAK,QACnB,KAAK,OAAS,IAIhB,aAAa,EAAoB,GAChC,KAAK,SACL,KAAK,OAAS,YAAY,KACzB,KACE,IAvBL,EAAA,cAAA,EpBtpBA,QoByrBC,YAAY,EAAkC,GAC7C,KAAK,aAAe,GACpB,KAAK,OAAS,EACd,KAAK,QAAU,EACf,KAAK,eAAiB,KAAK,UAAU,KAAK,MAM3C,UACC,KAAK,SACL,KAAK,OAAS,KAMf,SACC,AAAI,KAAK,eACR,cAAa,KAAK,cAClB,KAAK,aAAe,IAOtB,SAAS,EAAQ,KAAK,SACrB,KAAK,SACL,KAAK,aAAe,WAAW,KAAK,eAAgB,MAGjD,SACH,MAAO,MAAK,WAGT,OAAM,GACT,KAAK,QAAU,EAMhB,cACC,MAAO,MAAK,eAAiB,GAGtB,YACP,KAAK,aAAe,GAChB,KAAK,QACR,KAAK,QAIG,QACT,AAAI,KAAK,QACR,KAAK,UAjER,EAAA,iBAAA,EpBjrBA,eoBuvBsC,GAGrC,YAAY,EAA8B,GACzC,MAAM,EAAQ,GAHP,KAAA,MAAa,GAMrB,KAAK,GACJ,KAAK,MAAM,KAAK,GAEX,KAAK,eACT,KAAK,WAIY,QAClB,KAAM,GAAQ,KAAK,MACnB,KAAK,MAAQ,GAET,KAAK,QACR,KAAK,OAAO,GAIL,UACR,KAAK,MAAQ,GAEb,MAAM,WA3BR,EAAA,cAAA,EA6CC,WACA,GAAI,MAAO,sBAAwB,YAAc,MAAO,qBAAuB,YAC9E,KAAM,GAA0B,OAAO,OAAO,CAC7C,WAAY,GACZ,gBAAkB,MAAO,OAE1B,EAAA,YAAc,AAAC,IACd,KAAM,GAAS,WAAW,IAAM,EAAO,IACvC,GAAI,GAAW,GACf,MAAO,CACN,UACC,AAAI,GAGJ,GAAW,GACX,aAAa,WAKhB,GAAA,YAAc,CAAC,EAAQ,KACtB,KAAM,GAAiB,oBAAoB,EAAQ,MAAO,IAAY,SAAW,CAAE,WAAY,QAC/F,GAAI,GAAW,GACf,MAAO,CACN,UACC,AAAI,GAGJ,GAAW,GACX,mBAAmB,UpBj0BxB,SoBq1BC,YAAY,GAJJ,KAAA,QAAmB,GAK1B,KAAK,UAAY,KAChB,IACC,KAAK,OAAS,UACN,GACR,KAAK,OAAS,UAEd,KAAK,QAAU,KAGjB,KAAK,QAAU,ApB/1BjB,GoB+1BiB,EAAA,aAAY,IAAM,KAAK,aAGvC,UACC,KAAK,QAAQ,aAGV,SAKH,GAJK,KAAK,SACT,MAAK,QAAQ,UACb,KAAK,aAEF,KAAK,OACR,KAAM,MAAK,OAEZ,MAAO,MAAK,QAlCd,EAAA,UAAA,GAwCO,kBAAwB,EAAyB,EAAe,GACtE,GAAI,GAEJ,OAAS,GAAI,EAAG,EAAI,EAAS,IAC5B,IACC,MAAO,MAAM,WACL,GACR,EAAY,EAEZ,KAAM,GAAQ,GAIhB,KAAM,GAbP,EAAA,MAAA,GpBp3BA,QoB25BC,WAAW,GACV,MAAK,MAAK,SAIN,MAAO,IAAW,SACd,KAAK,SAAS,SAAW,EAG1B,CAAC,CAAC,KAAK,SAPN,MAUL,WACH,MAAO,MAAK,SAAW,KAAK,SAAS,QAAU,OAGhD,sBACC,AAAA,GAAA,KAAK,YAAQ,MAAA,IAAA,QAAA,EAAE,SAGhB,WAAW,EAAgB,EAAwB,GAClD,YAAK,SAAW,CAAE,SAAQ,OAAQ,IAAM,GAAQ,KAAA,OAAR,IAAc,WAEtD,EAAQ,KAAK,IAAM,KAAK,YAAY,GAAS,IAAM,KAAK,YAAY,IAE7D,EAGA,YAAY,GACnB,AAAI,KAAK,UAAY,IAAW,KAAK,SAAS,QAG7C,MAAK,SAAW,OAGhB,KAAK,eAIC,cACP,GAAI,KAAK,OACR,KAAM,GAAO,KAAK,MAClB,KAAK,MAAQ,OAGb,EAAK,MAAM,KAAK,EAAK,eAAgB,EAAK,gBAI5C,QAAQ,GAKP,GAAK,KAAK,MAkBT,KAAK,MAAM,IAAM,OAjBjB,GAAI,GACA,EACJ,KAAM,GAAU,GAAI,SAAc,CAAC,EAAS,MAC3C,EAAiB,EACjB,EAAgB,KAGjB,KAAK,MAAQ,CACZ,MACA,UACA,eAAgB,EAChB,cAAe,GASjB,MAAO,MAAK,MAAM,SA/EpB,EAAA,mBAAA,EpBv5BA,QoB2/BC,YAA6B,GAAA,KAAA,SAAA,EAJrB,KAAA,kBAAoB,EAEpB,KAAA,MAAQ,EAIhB,YACC,KAAM,GAAM,KAAK,MAIjB,MAAI,GAAM,KAAK,kBAAoB,KAAK,UACvC,MAAK,kBAAoB,EACzB,KAAK,MAAQ,GAGd,KAAK,QAEE,KAAK,OApBd,EAAA,gBAAA,EpBr/BA,QoB2iCC,cAjBQ,KAAA,SAAW,GACX,KAAA,SAAW,GAiBlB,KAAK,EAAI,GAAI,SAAW,CAAC,EAAG,KAC3B,KAAK,iBAAmB,EACxB,KAAK,cAAgB,OAjBZ,cACV,MAAO,MAAK,YAGF,cACV,MAAO,MAAK,YAGF,aACV,MAAO,MAAK,UAAY,KAAK,SAYvB,SAAS,GACf,MAAO,IAAI,SAAc,IACxB,KAAK,iBAAiB,GACtB,KAAK,SAAW,GAChB,MAIK,MAAM,GACZ,MAAO,IAAI,SAAc,IACxB,KAAK,cAAc,GACnB,KAAK,SAAW,GAChB,MAIK,SACN,GAAI,SAAc,IACjB,KAAK,cAAc,ApBpkCtB,GoBokCsB,EAAA,aACnB,KAAK,SAAW,GAChB,OAhDH,EAAA,gBAAA,EpBthCA,eoBmlCwD,GAAA,aAIjD,WAAU,EAA4B,EAA0B,GACrE,GAAI,EAAC,KAAK,YAIV,AAAK,KAAK,qBACT,MAAK,oBAAsB,GAAI,GAAA,YAGhC,SAAW,KAAY,MAAK,WAC3B,KAAK,oBAAoB,KAAK,CAAC,EAAU,IAG1C,KAAO,KAAK,oBAAoB,KAAO,GAAK,CAAC,EAAM,0BAElD,KAAM,CAAC,EAAU,GAAQ,KAAK,oBAAoB,QAC5C,GAAgC,GAEhC,GAAQ,OAAA,OAAA,OAAA,OAAA,GACV,GAAI,CACP,UAAW,AAAC,KACX,GAAI,OAAO,SAAS,IACnB,KAAM,IAAI,OAAM,4CAEjB,AAAI,GACH,IAAI,EAAY,GAAG,MAAO,IAAa,WAAa,EAAW,EAAS,KAEzE,GAAU,KAAK,OAIjB,IACC,AAAI,MAAO,IAAa,WACvB,EAAS,KAAK,OAAW,IAEzB,EAAS,GAAG,KAAK,EAAS,GAAI,UAEvB,IACR,AAAA,ApB7nCJ,GoB6nCI,EAAA,mBAAkB,IAClB,SAKD,OAAO,OAAO,IACd,KAAM,GAAS,QAAQ,IAAW,MAAM,IAAK,ApBpoChD,GoBooCgD,EAAA,mBAAkB,QAjDlE,EAAA,aAAA,EA0DA,GAAiB,GAAjB,AAAA,UAAiB,GAyBT,iBAA6B,GACnC,MAAI,OAAQ,SAAgD,YAAe,WACnE,EAAiB,GAGlB,EAAe,GALD,EAAA,WAAU,EAQhC,iBAAmC,GAClC,MAAQ,SAAgD,WAAW,GAGpE,iBAAiC,GAChC,MAAO,SAAQ,IAAI,EAAS,IAAI,IAAY,GAAQ,KAAK,IACjB,EAAE,OAAQ,YAAa,WAG5D,IACiC,EAAE,OAAQ,WAAY,OAAQ,QAa5D,iBAA0B,GAChC,GAAI,IAEJ,KAAM,IAAS,KAAM,SAAQ,IAAI,EAAS,IAAI,IAAW,GAAQ,KAAK,IAAS,GAAO,KACrF,AAAK,IACJ,IAAa,QAMf,GAAI,MAAO,KAAe,YACzB,KAAM,IAGP,MAAO,IAfc,EAAA,QAAO,IAxDb,EAAA,EAAA,UAAA,GAAA,SAAQ,wICvoCzB,KAAM,GAAe,kEAErB,WAAuB,GACtB,MAAO,GAAa,KAAK,GAD1B,EAAA,OAAA,EAKA,KAAM,GAAQ,GAAI,YAAW,IACvB,EAAiB,GACvB,OAAS,GAAI,EAAG,EAAI,IAAK,IACxB,EAAK,KAAK,EAAE,SAAS,IAAI,SAAS,EAAG,MAKtC,GAAI,GAIJ,AAAI,MAAO,SAAW,UAAY,MAAO,QAAO,iBAAoB,WAEnE,EAAoB,OAAO,gBAAgB,KAAK,QAGhD,EAAoB,SAAU,GAC7B,OAAS,GAAI,EAAG,EAAI,EAAO,OAAQ,IAClC,EAAO,GAAK,KAAK,MAAM,KAAK,SAAW,KAExC,MAAO,IAIT,aAEC,EAAkB,GAGlB,EAAM,GAAM,EAAM,GAAK,GAAQ,GAC/B,EAAM,GAAM,EAAM,GAAK,GAAQ,IAG/B,GAAI,GAAI,EACJ,EAAS,GACb,UAAU,EAAK,EAAM,MACrB,GAAU,EAAK,EAAM,MACrB,GAAU,EAAK,EAAM,MACrB,GAAU,EAAK,EAAM,MACrB,GAAU,IACV,GAAU,EAAK,EAAM,MACrB,GAAU,EAAK,EAAM,MACrB,GAAU,IACV,GAAU,EAAK,EAAM,MACrB,GAAU,EAAK,EAAM,MACrB,GAAU,IACV,GAAU,EAAK,EAAM,MACrB,GAAU,EAAK,EAAM,MACrB,GAAU,IACV,GAAU,EAAK,EAAM,MACrB,GAAU,EAAK,EAAM,MACrB,GAAU,EAAK,EAAM,MACrB,GAAU,EAAK,EAAM,MACrB,GAAU,EAAK,EAAM,MACrB,GAAU,EAAK,EAAM,MACd,EA/BR,EAAA,aAAA,sTCpBA,GAAY,GAAZ,AAAA,UAAY,GAKX,EAAA,EAAA,OAAA,GAAA,SAOA,EAAA,EAAA,KAAA,GAAA,SAZW,EAAA,EAAA,YAAA,GAAA,WAAU,KAsBf,iBAAsB,EAAc,EAAO,EAAW,QAC5D,GAAI,AtBzCL,GsByCK,EAAA,qBAAoB,GACvB,KAAM,IAAI,OAAM,mDAIjB,MAAI,KAAS,EAAW,OAChB,EAAa,GAId,EAAW,GAXnB,EAAA,OAAA,EAcA,iBAA0B,GACzB,IACC,KAAM,GAAa,AtBxDrB,GsBwDqB,EAAA,MAAK,AtBxD1B,GsBwD0B,EAAA,UAAU,AtBxDpC,GsBwDoC,EAAA,iBAClC,IACC,KAAM,GAAG,SAAS,OAAO,EAAM,SACvB,GACR,MAAO,GAAa,GAIrB,EAAa,GAAY,MAAM,aACvB,GACR,GAAI,EAAM,OAAS,SAClB,KAAM,IAKT,iBAA4B,GAC3B,MAAO,GAAG,SAAS,MAAM,EAAM,CAAE,UAAW,GAAM,WAAY,IAG/D,WAA2B,GAC1B,GAAI,AtB7EL,GsB6EK,EAAA,qBAAoB,GACvB,KAAM,IAAI,OAAM,mDAGjB,EAAG,UAAU,EAAM,CAAE,UAAW,KALjC,EAAA,WAAA,EA2BO,iBAAuB,EAAc,GAC3C,MAAO,GAAwB,KAAO,GAAU,EAAyB,GAAQ,EAAG,SAAS,QAAQ,KADtG,EAAA,QAAA,EAIA,iBAAwC,GACvC,IACC,MAAO,MAAM,GAAG,SAAS,QAAQ,EAAM,CAAE,cAAe,WAChD,GACR,QAAQ,KAAK,0DAA2D,GASzE,KAAM,GAAoB,GACpB,EAAW,KAAM,GAAQ,GAC/B,SAAW,KAAS,IACnB,GAAI,GAAS,GACT,EAAc,GACd,EAAiB,GAErB,IACC,KAAM,GAAQ,KAAM,GAAG,SAAS,MAAM,AtBhIzC,GsBgIyC,EAAA,MAAK,EAAM,IAEjD,EAAS,EAAM,SACf,EAAc,EAAM,cACpB,EAAiB,EAAM,uBACf,GACR,QAAQ,KAAK,2DAA4D,GAG1E,EAAO,KAAK,CACX,KAAM,EACN,OAAQ,IAAM,EACd,YAAa,IAAM,EACnB,eAAgB,IAAM,IAIxB,MAAO,GAQR,WAA4B,GAC3B,MAAO,GAAwB,EAAG,YAAY,IAD/C,EAAA,YAAA,EAOA,WAAiC,GAChC,MAAO,GAAS,IAAI,GAKf,MAAO,IAAU,SACb,EAAA,YAAc,AtBvKxB,GsBuKwB,EAAA,cAAa,GAAS,EAG5C,GAAM,KAAO,EAAA,YAAc,AtB1K7B,GsB0K6B,EAAA,cAAa,EAAM,MAAQ,EAAM,KAErD,IAQF,iBAA6B,GACnC,KAAM,GAAW,KAAM,GAAQ,GACzB,EAAwB,GAE9B,SAAW,KAAS,GACnB,AAAI,KAAM,GAAe,gBAAgB,AtBzL3C,GsByL2C,EAAA,MAAK,EAAS,KACtD,EAAY,KAAK,GAInB,MAAO,GAVR,EAAA,cAAA,EAqBA,WAA4B,EAAc,EAAa,KACtD,MAAO,IAAI,SAAc,IACxB,GAAI,GAAU,GACd,KAAM,GAAW,YAAY,KAC5B,AAAK,GACJ,GAAU,GACV,EAAG,OAAO,EAAM,IACf,EAAU,GAEN,GACH,eAAc,GACd,EAAQ,aAIT,KAfL,EAAA,YAAA,EAuBA,GAAiB,GAAjB,AAAA,UAAiB,GAwBT,iBAAoB,GAG1B,GAAI,GACJ,IAIC,GAHA,EAAS,KAAM,GAAG,SAAS,MAAM,GAG7B,CAAC,EAAO,iBACX,MAAO,CAAE,KAAM,SAER,IAMT,IAGC,MAAO,CAAE,KAFK,KAAM,GAAG,SAAS,KAAK,GAEf,aAAc,IAAM,KAAA,OAAN,EAAQ,kBAAmB,CAAE,SAAU,IAAU,cAC7E,GAIR,GAAI,EAAM,OAAS,UAAY,EAC9B,MAAO,CAAE,KAAM,EAAQ,aAAc,CAAE,SAAU,KAKlD,GAAI,EAAA,WAAa,EAAM,OAAS,SAC/B,IAGC,MAAO,CAAE,KAFK,KAAM,GAAG,SAAS,KAAK,KAAM,GAAG,SAAS,SAAS,IAE1C,aAAc,CAAE,SAAU,WACxC,GAIR,GAAI,EAAM,OAAS,UAAY,EAC9B,MAAO,CAAE,KAAM,EAAQ,aAAc,CAAE,SAAU,KAGlD,KAAM,GAIR,KAAM,IAhDc,EAAA,KAAI,EA8DnB,iBAA0B,GAChC,IACC,KAAM,CAAE,OAAM,gBAAiB,KAAM,GAAe,KAAK,GAEzD,MAAO,GAAK,UAAY,IAAY,KAAA,OAAZ,EAAc,YAAa,SAC3C,IAIT,MAAO,GATc,EAAA,WAAU,EAsBzB,iBAA+B,GACrC,IACC,KAAM,CAAE,OAAM,gBAAiB,KAAM,GAAe,KAAK,GAEzD,MAAO,GAAK,eAAiB,IAAY,KAAA,OAAZ,EAAc,YAAa,SAChD,IAIT,MAAO,GATc,EAAA,gBAAe,IA5GrB,EAAA,EAAA,gBAAA,GAAA,eAAc,KAgI/B,KAAM,GAAc,GAAI,GAAA,cAaxB,WAA0B,EAAc,EAAoC,GAC3E,MAAO,GAAY,SAAS,EAAA,IAAI,KAAK,GAAO,EAAA,4BAA4B,MAAM,KAC7E,KAAM,GAAiB,EAAmB,GAE1C,MAAO,IAAI,SAAQ,CAAC,EAAS,IAAW,EAAoB,EAAM,EAAM,EAAgB,GAAS,EAAQ,EAAO,GAAS,QAJ3H,EAAA,UAAA,EAkBA,GAAI,GAAW,GAOf,WAA6B,EAAc,EAAoC,EAAmC,GACjH,GAAI,CAAC,EACJ,MAAO,GAAG,UAAU,EAAM,EAAM,CAAE,KAAM,EAAQ,KAAM,KAAM,EAAQ,MAAQ,GAI7E,EAAG,KAAK,EAAM,EAAQ,KAAM,EAAQ,KAAM,CAAC,EAAW,KACrD,GAAI,EACH,MAAO,GAAS,GAIjB,EAAG,UAAU,EAAI,EAAM,IACtB,GAAI,EACH,MAAO,GAAG,MAAM,EAAI,IAAM,EAAS,IAIpC,EAAG,UAAU,EAAI,AAAC,GAIb,IACH,SAAQ,KAAK,8EAA+E,GAC5F,EAAW,IAGL,EAAG,MAAM,EAAI,GAAc,EAAS,UAW/C,WAA8B,EAAc,EAAuB,GAClE,KAAM,GAAiB,EAAmB,GAE1C,GAAI,CAAC,EACJ,MAAO,GAAG,cAAc,EAAM,EAAM,CAAE,KAAM,EAAe,KAAM,KAAM,EAAe,OAIvF,KAAM,GAAK,EAAG,SAAS,EAAM,EAAe,KAAM,EAAe,MAEjE,IAGC,EAAG,cAAc,EAAI,GAGrB,IACC,EAAG,cAAc,SACT,GACR,QAAQ,KAAK,kFAAmF,GAChG,EAAW,YAGZ,EAAG,UAAU,IAvBf,EAAA,cAAA,EA2BA,WAA4B,GAC3B,MAAK,GAIE,CACN,KAAM,MAAO,GAAQ,MAAS,SAAW,EAAQ,KAAO,IACxD,KAAM,MAAO,GAAQ,MAAS,SAAW,EAAQ,KAAO,KALjD,CAAE,KAAM,IAA4C,KAAM,KAkB5D,iBAAoB,EAAgB,GAC1C,GAAI,IAAW,GAYf,iBAA2B,GAC1B,IACC,KAAM,GAAO,KAAM,GAAG,SAAS,MAAM,GACrC,GAAI,EAAK,eAAiB,EAAK,iBAC9B,OAGD,KAAM,GAAK,KAAM,GAAG,SAAS,KAAK,EAAM,KACxC,IACC,KAAM,GAAG,OAAO,EAAK,MAAO,GAAI,eAEhC,KAAM,GAAG,eAEF,KAKV,IACC,KAAM,GAAG,SAAS,OAAO,EAAQ,GACjC,KAAM,GAAY,SACV,GAUR,GAAI,EAAO,gBAAkB,EAAO,eAAiB,EAAM,OAAS,SAAW,EAAO,SAAS,KAC9F,KAAM,GAAK,EAAQ,EAAQ,CAAE,iBAAkB,KAC/C,KAAM,GAAO,EAAQ,EAAW,MAChC,KAAM,GAAY,OAElB,MAAM,KAjDT,EAAA,KAAA,EAmEO,iBAAoB,EAAgB,EAAgB,GAC1D,MAAO,GAAO,EAAQ,EAAQ,CAAE,KAAM,CAAE,SAAQ,UAAU,UAAS,mBAAoB,GAAI,OAD5F,EAAA,KAAA,EAQA,KAAM,GAAiB,IAEvB,iBAAsB,EAAgB,EAAgB,GAIrD,GAAI,GAAQ,mBAAmB,IAAI,IAGlC,EAAQ,mBAAmB,IAAI,GAGhC,KAAM,CAAE,OAAM,gBAAiB,KAAM,GAAe,KAAK,GAGzD,GAAI,GAGH,GAAI,EAAQ,QAAQ,iBACnB,IACC,MAAO,MAAM,GAAc,EAAQ,EAAQ,SACnC,GAER,QAAQ,KAAK,wCAAyC,GAIxD,GAAI,EAAa,SAChB,OAKF,MAAI,GAAK,cACD,GAAgB,EAAQ,EAAQ,EAAK,KAAO,EAAgB,GAK5D,GAAW,EAAQ,EAAQ,EAAK,KAAO,IAIhD,kBAA+B,EAAgB,EAAgB,EAAc,GAG5E,KAAM,GAAG,SAAS,MAAM,EAAQ,CAAE,UAAW,GAAM,SAGnD,KAAM,GAAQ,KAAM,GAAQ,GAC5B,SAAW,KAAQ,GAClB,KAAM,GAAO,AtBzlBf,GsBylBe,EAAA,MAAK,EAAQ,GAAO,AtBzlBnC,GsBylBmC,EAAA,MAAK,EAAQ,GAAO,GAIvD,kBAA0B,EAAgB,EAAgB,GAGzD,KAAM,GAAG,SAAS,SAAS,EAAQ,GAGnC,KAAM,GAAG,SAAS,MAAM,EAAQ,GAGjC,iBAA6B,EAAgB,EAAgB,GAG5D,GAAI,GAAa,KAAM,GAAG,SAAS,SAAS,GAM5C,AAAI,AtB/mBL,GsB+mBK,EAAA,iBAAgB,EAAY,EAAQ,KAAK,OAAQ,CAAC,EAAA,UACrD,GAAa,AtBhnBf,GsBgnBe,EAAA,MAAK,EAAQ,KAAK,OAAQ,EAAW,OAAO,EAAQ,KAAK,OAAO,OAAS,KAIvF,KAAM,GAAG,SAAS,QAAQ,EAAY,GAOhC,iBAAsB,GAC5B,IACC,YAAM,GAAG,SAAS,OAAO,GAElB,SACN,GACD,MAAO,IANT,EAAA,OAAA,mKCjnBA,aACC,KAAM,GAAM,KAEZ,MAAO,GAAM,KAAK,MAAO,CADb,MACmB,GAAO,KAAK,UAH5C,EAAA,WAAA,EAUA,WAA6B,EAAmB,EAAqB,GACpE,GAAI,GAAO,GAEX,MAAO,IAAI,SAAQ,IAClB,KAAM,GAAgB,WAAW,KAChC,GAAI,CAAC,EACJ,SAAO,GACA,EAAQ,IAEd,GAEH,EAAe,EAAW,EAAa,AAAC,IACvC,GAAI,CAAC,EACJ,SAAO,GACP,aAAa,GACN,EAAQ,OAfnB,EAAA,aAAA,EAqBA,WAAwB,EAAmB,EAAqB,GAC/D,GAAI,IAAgB,EACnB,MAAO,GAAI,GAGZ,KAAM,GAAS,GAAI,GAAI,OAGvB,EAAO,KAAK,UAAW,IACtB,GAAQ,GAED,EAAe,EAAY,EAAG,EAAc,EAAG,KAGvD,EAAO,KAAK,OAAQ,QAIpB,EAAO,KAAK,QAAS,AAAC,GACrB,GAAQ,GAGJ,EAAI,OAAS,eACT,EAAe,EAAY,EAAG,EAAc,EAAG,GAIhD,EAAI,KAGZ,EAAO,QAAQ,EAAW,aAM3B,WAAmC,EAAmB,EAAqB,GAC1E,GAAI,GAAoB,GACpB,EACA,EAAqB,EACzB,KAAM,GAAS,EAAI,aAAa,CAAE,eAAgB,KAClD,WAAmB,EAAc,GAChC,AAAK,GACJ,GAAW,GACX,EAAO,qBACP,EAAO,QACH,GACH,aAAa,GAEd,EAAQ,IAGV,MAAO,IAAI,SAAgB,IAC1B,EAAgB,WAAW,KAC1B,EAAU,EAAG,IACX,GAEH,EAAO,GAAG,YAAa,KACtB,EAAU,EAAW,KAEtB,EAAO,GAAG,QAAS,IAClB,AAAI,GAAc,GAAK,OAAS,cAAsB,EAAK,OAAS,WAAc,EAAa,EAC9F,KACA,IACA,EAAO,OAAO,EAAW,cAEzB,EAAU,EAAG,KAGf,EAAO,GAAG,QAAS,KAClB,EAAU,EAAG,KAEd,EAAO,OAAO,EAAW,eApC3B,EAAA,mBAAA,EAwCA,WAAiB,GAChB,IACC,EAAO,mBAAmB,WAC1B,EAAO,mBAAmB,SAC1B,EAAO,MACP,EAAO,UACP,EAAO,cACC,GACR,QAAQ,MAAM,mJClHhB,KAAM,GAA2B,CAChC,MAAO,QACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,MAAO,QACP,OAAQ,UAGT,WAA6B,GAC5B,KAAM,GAAyB,EAAa,QAAQ,gBAAiB,IAAI,cAGzE,MAAO,AAFQ,GAA6B,IAE3B,EAGlB,KAAM,GAA2D,CAChE,OAAU,QACV,KAAQ,SAGH,EAAO,OAEN,iBAAuC,GAC7C,GAAI,GAGJ,KAAM,GAAiB,QAAQ,IAAI,oBACnC,AAAI,EACC,IACH,QAAQ,IAAI,uCAAuC,KAGpD,EAAqB,QAAQ,QAAQ,IAIjC,AAAI,EAAA,UACR,EAAqB,GAAI,SAA4B,IACpD,AAAI,GACH,QAAQ,IAAI,iDAGb,AxB7DH,GwB6DG,EAAA,MAAK,OAAQ,CAAC,EAAK,EAAQ,KAC1B,GAAI,GACH,AAAI,GACH,QAAQ,IAAI,kCAAkC,KAG/C,KAAM,GAA8B,OAAO,KAAK,GAChD,SAAW,KAAO,GACjB,GAAI,EAAO,QAAQ,IAAQ,EAC1B,MAAO,GAAQ,EAAyB,IAK3C,MAAO,GAAQ,YAMjB,EAAqB,GAAI,SAAgB,IACxC,AAAI,GACH,QAAQ,IAAI,2DAGb,AxBtFH,GwBsFG,EAAA,MAAK,iBAAkB,CAAC,EAAK,EAAQ,IAAW,EAAQ,MAI1D,KAAM,GAAc,KAAM,GAK1B,MAJI,IACH,QAAQ,IAAI,mCAAmC,KAG5C,CAAC,GAAe,EAAY,gBAAkB,SAAW,EAAY,gBAAkB,EACnF,EAGD,EAAoB,GA1D5B,EAAA,wBAAA,IxBzCA,OAAA,EAAA,IAAA,EAAA,CAAA,GAAA,KAAA,SAAA,EAAA,GAAA,MAAA,GAAA,OAAA,oCAAA,KAAA,OAAA,EAAA,IAAA,EAAA,CAAA,GAAA,KAAA,SAAA,EAAA,GAAA,MAAA,GAAA,OAAA,0CAAA,KAAA,OAAA,EAAA,IAAA,EAAA,CAAA,GAAA,KAAA,SAAA,EAAA,GAAA,MAAA,GAAA,OAAA,iCAAA,2MyBaA,KAAM,GAAiB,CACtB,EAAG,AzBdJ,GyBcI,EAAA,UAAS,EAAoB,MAChC,EAAG,AzBfJ,GyBeI,EAAA,UAAS,EAAwB,MACpC,EAAG,AzBhBJ,GyBgBI,EAAA,UAAS,EAAmB,OAuBnB,EAAA,QAA0D,CACtE,KAAQ,CAAE,KAAM,UAAW,IAAK,IAAK,MAAO,IAAK,KAAM,CAAC,OAAQ,QAAS,YAAa,AzBxCvF,GyBwCuF,EAAA,UAAS,EAAQ,OACvG,IAAO,CAAE,KAAM,UAAW,IAAK,IAAK,MAAO,IAAK,KAAM,SAAU,YAAa,AzBzC9E,GyByC8E,EAAA,UAAS,EAAO,OAC7F,KAAQ,CAAE,KAAM,UAAW,IAAK,IAAK,MAAO,IAAK,KAAM,wBAAyB,YAAa,AzB1C9F,GyB0C8F,EAAA,UAAS,EAAQ,OAC9G,aAAc,CAAE,KAAM,UAAW,IAAK,IAAK,MAAO,IAAK,YAAa,AzB3CrE,GyB2CqE,EAAA,UAAS,EAAa,OAC1F,eAAgB,CAAE,KAAM,UAAW,IAAK,IAAK,MAAO,IAAK,YAAa,AzB5CvE,GyB4CuE,EAAA,UAAS,EAAe,OAC9F,KAAQ,CAAE,KAAM,UAAW,IAAK,IAAK,MAAO,IAAK,YAAa,AzB7C/D,GyB6C+D,EAAA,UAAS,EAAQ,OAC/E,mBAAsB,CAAE,KAAM,UAC9B,OAAU,CAAE,KAAM,SAAU,IAAK,IAAK,KAAM,SAAU,YAAa,AzB/CpE,GyB+CoE,EAAA,UAAS,EAAU,OACtF,gBAAiB,CAAE,KAAM,SAAU,IAAK,IAAK,KAAM,MAAO,YAAa,AzBhDxE,GyBgDwE,EAAA,UAAS,GAAe,OAC/F,KAAQ,CAAE,KAAM,UAAW,IAAK,IAAK,MAAO,IAAK,YAAa,AzBjD/D,GyBiD+D,EAAA,UAAS,GAAQ,OAE/E,iBAAkB,CAAE,KAAM,SAAU,WAAY,oBAAqB,IAAK,IAAK,KAAM,MAAO,YAAa,AzBnD1G,GyBmD0G,EAAA,UAAS,GAAqB,OACvI,0BAA2B,CAAE,KAAM,UACnC,yBAA0B,CAAE,KAAM,UAClC,kBAAmB,CAAE,KAAM,UAAW,IAAK,IAAK,YAAa,AzBtD9D,GyBsD8D,EAAA,UAAS,GAAkB,OACxF,gBAAiB,CAAE,KAAM,UAAW,IAAK,IAAK,YAAa,AzBvD5D,GyBuD4D,EAAA,UAAS,GAAgB,OACpF,SAAY,CAAE,KAAM,SAAU,IAAK,IAAK,YAAa,AzBxDtD,GyBwDsD,EAAA,UAAS,GAAY,OAC1E,oBAAqB,CAAE,KAAM,WAAY,IAAK,IAAK,KAAM,wCAAyC,YAAa,AzBzDhH,GyByDgH,EAAA,UAAS,GAAoB,OAC5I,sBAAuB,CAAE,KAAM,WAAY,IAAK,IAAK,KAAM,eAAgB,YAAa,AzB1DzF,GyB0DyF,EAAA,UAAS,GAAsB,OACvH,sBAAuB,CAAE,KAAM,WAAY,IAAK,IAAK,KAAM,eAAgB,YAAa,AzB3DzF,GyB2DyF,EAAA,UAAS,GAAoB,OAErH,QAAW,CAAE,KAAM,UAAW,IAAK,IAAK,MAAO,IAAK,YAAa,AzB7DlE,GyB6DkE,EAAA,UAAS,GAAW,OACrF,QAAW,CAAE,KAAM,UAAW,IAAK,IAAK,YAAa,AzB9DtD,GyB8DsD,EAAA,UAAS,GAAW,OACzE,IAAO,CAAE,KAAM,SAAU,IAAK,IAAK,KAAM,QAAS,YAAa,AzB/DhE,GyB+DgE,EAAA,UAAS,GAAO,OAC/E,OAAU,CAAE,KAAM,UAAW,MAAO,IAAK,IAAK,IAAK,YAAa,AzBhEjE,GyBgEiE,EAAA,UAAS,GAAU,OACnF,eAAgB,CAAE,KAAM,UAAW,IAAK,IAAK,YAAa,AzBjE3D,GyBiE2D,EAAA,UAAS,GAAgB,OACnF,qBAAsB,CAAE,KAAM,UAC9B,sBAAuB,CAAE,KAAM,UAC/B,qBAAsB,CAAE,KAAM,WAC9B,qBAAsB,CAAE,KAAM,UAAW,WAAY,oBAAqB,IAAK,IAAK,YAAa,AzBrElG,GyBqEkG,EAAA,UAAS,GAAqB,OAC/H,oBAAqB,CAAE,KAAM,WAAY,IAAK,IAAK,KAAM,eAAgB,YAAa,AzBtEvF,GyBsEuF,EAAA,UAAS,GAAoB,OACnH,KAAQ,CAAE,KAAM,SAAU,IAAK,IAAK,YAAa,AzBvElD,GyBuEkD,EAAA,UAAS,GAAa,MAAwB,KAAM,CAAC,KAAM,QAE5G,qBAAsB,CAAE,KAAM,SAAU,WAAY,kBAAmB,KAAM,OAAQ,IAAK,IAAK,YAAa,AzBzE7G,GyByE6G,EAAA,UAAS,GAAsB,OAC3I,yBAA0B,CAAE,KAAM,SAAU,WAAY,qBAAsB,KAAM,OAAQ,IAAK,IAAK,YAAa,AzB1EpH,GyB0EoH,EAAA,UAAS,GAA0B,OACtJ,cAAe,CAAE,KAAM,UAAW,IAAK,IAAK,YAAa,AzB3E1D,GyB2E0D,EAAA,UAAS,GAAc,OAChF,aAAc,CAAE,KAAM,SAAU,IAAK,IAAK,YAAa,AzB5ExD,GyB4EwD,EAAA,UAAS,GAAa,OAC7E,UAAa,CAAE,KAAM,UAAW,IAAK,IAAK,YAAa,AzB7ExD,GyB6EwD,EAAA,UAAS,GAAa,OAE7E,OAAU,CAAE,KAAM,UAClB,aAAc,CAAE,KAAM,WAAY,IAAK,IAAK,KAAM,OAClD,WAAY,CAAE,KAAM,WAAY,IAAK,IAAK,KAAM,OAEhD,mBAAoB,CAAE,KAAM,YAC5B,yBAA4B,CAAE,KAAM,YACpC,yBAA4B,CAAE,KAAM,YACpC,mBAAsB,CAAE,KAAM,UAC9B,QAAW,CAAE,KAAM,UACnB,cAAiB,CAAE,KAAM,WACzB,iBAAkB,CAAE,KAAM,SAAU,WAAY,eAChD,qBAAsB,CAAE,KAAM,SAAU,WAAY,kBACpD,+BAAgC,CAAE,KAAM,UACxC,iBAAkB,CAAE,KAAM,UAC1B,OAAU,CAAE,KAAM,UAClB,8BAAiC,CAAE,KAAM,WACzC,qBAAsB,CAAE,KAAM,WAC9B,oBAAqB,CAAE,KAAM,WAC7B,kBAAmB,CAAE,KAAM,WAC3B,iBAAkB,CAAE,KAAM,WAC1B,yBAA0B,CAAE,KAAM,WAClC,2BAA4B,CAAE,KAAM,UACpC,oBAAqB,CAAE,KAAM,UAC7B,8BAA+B,CAAE,KAAM,WACvC,eAAgB,CAAE,KAAM,WACxB,WAAY,CAAE,KAAM,WACpB,aAAc,CAAE,KAAM,WACtB,aAAc,CAAE,KAAM,WACtB,iBAAkB,CAAE,KAAM,WAC1B,4BAA6B,CAAE,KAAM,YACrC,MAAS,CAAE,KAAM,WACjB,cAAe,CAAE,KAAM,WACvB,MAAS,CAAE,KAAM,WACjB,wBAAyB,CAAE,KAAM,UACjC,gBAAiB,CAAE,KAAM,UACzB,iBAAkB,CAAE,KAAM,WAC1B,yBAA0B,CAAE,KAAM,WAClC,gBAAiB,CAAE,KAAM,WACzB,UAAa,CAAE,KAAM,WACrB,SAAY,CAAE,KAAM,UAGpB,kBAAmB,CAAE,KAAM,WAC3B,eAAgB,CAAE,KAAM,UACxB,oBAAqB,CAAE,KAAM,UAC7B,gBAAiB,CAAE,KAAM,UACzB,WAAY,CAAE,KAAM,UACpB,QAAW,CAAE,KAAM,UACnB,cAAe,CAAE,KAAM,UACvB,OAAU,CAAE,KAAM,WAClB,4BAA6B,CAAE,KAAM,UACrC,+BAAgC,CAAE,KAAM,WACxC,4BAA6B,CAAE,KAAM,WACrC,2BAA4B,CAAE,KAAM,WACpC,cAAe,CAAE,KAAM,UACvB,QAAW,CAAE,KAAM,UACnB,MAAS,CAAE,KAAM,YAEjB,EAAG,CAAE,KAAM,aAQZ,KAAM,GAAkC,CACvC,gBAAiB,OACjB,iBAAkB,QAGnB,WAA6B,EAAgB,EAAgC,EAA+B,GAC3G,KAAM,GAAmC,GACnC,EAAmB,GACnB,EAAoB,GAC1B,OAAS,KAAY,IACpB,KAAM,GAAI,EAAQ,GAClB,AAAI,EAAE,OACL,GAAM,GAAY,EAAE,OAGrB,AAAI,EAAE,OAAS,UAAY,EAAE,OAAS,WACrC,GAAO,KAAK,GACR,EAAE,YACL,EAAO,KAAK,EAAE,aAEL,EAAE,OAAS,WACrB,GAAQ,KAAK,GACT,EAAE,YACL,EAAQ,KAAK,EAAE,aAKlB,KAAM,GAAa,EAAS,EAAM,CAAE,SAAQ,UAAS,UAE/C,EAAmB,GACnB,EAAqB,EAG3B,EAAY,EAAI,EAAW,EAAE,IAAI,GAAO,OAAO,IAAM,OAAO,GAAO,EAAI,OAAS,GAEhF,MAAO,GAAc,EAErB,OAAS,KAAY,IACpB,KAAM,GAAI,EAAQ,GAClB,AAAI,EAAE,OACL,MAAO,GAAc,EAAE,OAGxB,GAAI,GAAM,EAAc,GACxB,AAAI,EAAE,YAAc,EAAc,eAAe,EAAE,aAC7C,IACJ,GAAM,EAAc,EAAE,aAEvB,MAAO,GAAc,EAAE,aAGpB,MAAO,IAAQ,aAClB,CAAI,EAAE,OAAS,WACV,GAAO,CAAC,MAAM,QAAQ,IACzB,GAAM,CAAC,IAEE,EAAE,OAAS,UACjB,MAAM,QAAQ,IACjB,GAAM,EAAI,MACV,EAAc,iBAAiB,EAAU,IAG3C,EAAY,GAAY,GAEzB,MAAO,GAAc,GAGtB,OAAS,KAAO,GACf,EAAc,gBAAgB,GAG/B,MAAO,GAnER,EAAA,UAAA,EAsEA,WAAqB,EAAkB,GACtC,GAAI,GAAO,GAQX,MAPI,GAAO,MACV,CAAI,MAAM,QAAQ,EAAO,MACxB,EAAO,KAAK,EAAO,KAAK,KAAK,UAE7B,EAAO,KAAK,EAAO,SAGjB,EAAO,MACH,IAAI,EAAO,WAAW,IAAW,IAElC,KAAK,IAAW,IAIxB,WAA8B,EAAkC,GAC/D,GAAI,GAAY,EACZ,EAAiC,GACrC,SAAW,KAAY,IACtB,KAAM,GAAI,EAAQ,GACZ,EAAY,EAAY,EAAU,GACxC,EAAY,KAAK,IAAI,EAAW,EAAU,QAC1C,EAAW,KAAK,CAAC,EAAW,EAAE,cAE/B,GAAI,GAAY,EAAY,EAAoB,EAChD,GAAI,EAAU,EAAY,GAEzB,MAAO,GAAW,OAAiB,CAAC,EAAG,IAAO,EAAE,OAAO,CAAC,KAAK,EAAG,KAAM,SAAS,EAAG,OAAQ,IAE3F,GAAI,GAAqB,EAAU,EAAY,EAC3C,EAAmB,GACvB,SAAW,KAAM,IAChB,GAAI,GAAQ,EAAG,GACX,EAAqB,EAAS,EAAG,GAAI,GACrC,EAAa,EAAO,EAAY,EAAM,OAAS,GACnD,EAAO,KAAK,KAAO,EAAQ,EAAa,EAAmB,IAC3D,OAAS,GAAI,EAAG,EAAI,EAAmB,OAAQ,IAC9C,EAAO,KAAK,EAAO,GAAa,EAAmB,IAGrD,MAAO,GAzBR,EAAA,cAAA,EA4BA,WAAgB,GACf,MAAO,IAAI,OAAO,GAGnB,WAAkB,EAAc,GAC/B,GAAI,GAAkB,GACtB,KAAO,EAAK,SACX,GAAI,GAAQ,EAAK,OAAS,EAAU,EAAK,OAAS,EAAK,YAAY,IAAK,GACpE,EAAO,EAAK,MAAM,EAAG,GAAO,OAChC,EAAO,EAAK,MAAM,GAClB,EAAM,KAAK,GAEZ,MAAO,GAGR,WAAiC,EAAqB,EAAwB,EAAiB,EAAkC,EAAkB,IAClJ,KAAM,GAAW,QAAQ,OAAQ,OAAU,QAAQ,OAAQ,SAAW,GAEtE,GAAI,GAAO,CAAC,GAAG,KAAe,KAC9B,EAAK,KAAK,IACV,EAAK,KAAK,GAAG,AzB5Rd,GyB4Rc,EAAA,UAAS,GAAS,UAAa,MAAmB,AzB5RhE,GyB4RgE,EAAA,UAAS,GAAW,UAAe,AzB5RnG,GyB4RmG,EAAA,UAAS,GAAS,aACpH,EAAK,KAAK,IACN,GACH,CAAI,EAAA,UACH,EAAK,KAAK,AzBhSb,GyBgSa,EAAA,UAAS,GAAgB,KAAqF,IAExH,EAAK,KAAK,AzBlSb,GyBkSa,EAAA,UAAS,GAAa,KAAsE,IAEvG,EAAK,KAAK,KAEX,KAAM,GAAsF,GAC5F,SAAW,KAAY,IACtB,KAAM,GAAI,EAAQ,GAClB,GAAI,EAAE,aAAe,EAAE,KACtB,GAAI,GAAe,EAAkB,EAAE,KACvC,AAAK,GACJ,GAAkB,EAAE,KAAO,EAAe,IAE3C,EAAa,GAAY,GAI3B,OAAS,KAAmB,IAC3B,KAAM,GAAmC,EAEzC,GAAI,GAAkB,EAAkB,GACxC,AAAI,GACH,GAAK,KAAK,EAAe,IACzB,EAAK,KAAK,GAAG,EAAc,EAAiB,IAC5C,EAAK,KAAK,KAGZ,MAAO,GAAK,KAAK;GArClB,EAAA,iBAAA,EAwCA,WAAoC,EAA6B,GAChE,MAAO,GAAG,GAAW,AzBhUtB,GyBgUsB,EAAA,UAAS,GAAkB;EAAuB,GAAU,AzBhUlF,GyBgUkF,EAAA,UAAS,GAAiB;EAAsB,QAAQ,OAD1I,EAAA,oBAAA,0MCnTA,aACC,IACC,MAAO,CAAC,QAAQ,MAAM,YACd,IAGT,MAAO,GANR,EAAA,mBAAA,EASA,WAAkC,GACjC,MAAO,IAAI,SAAQ,IAClB,KAAM,GAAe,IAAM,EAAQ,IAGnC,WAAW,KACV,QAAQ,MAAM,eAAe,OAAQ,GAErC,EAAQ,KACN,GAGH,QAAQ,MAAM,KAAK,OAAQ,KAZ7B,EAAA,kBAAA,EAgBA,aACC,MAAO,GAAM,KAAK,EAAG,SAAU,cAAc,KAAK,SAAS,SAAS,IAAI,QAAQ,WAAY,IAAI,OAAO,EAAG,UAD3G,EAAA,iBAAA,EAIO,iBAA6B,EAAoB,GAGvD,KAAM,GAAkB,EAAG,kBAAkB,GAE7C,GAAI,GAAW,KAAM,A1B9CtB,G0B8CsB,EAAA,yBAAwB,GAE7C,KAAM,GAAQ,KAAA,IAAA,SAAA,CAAA,EAAA,KAAA,EAAA,CAAa,kBAAgB,EAAA,KAC3C,AAAK,EAAM,eAAe,IACzB,SAAQ,IAAI,kCAAkC,6BAC9C,EAAW,QAIZ,KAAM,GAAU,EAAM,WAAW,GACjC,QAAQ,MAAM,GAAG,OAAQ,GAAS,EAAgB,MAAM,EAAQ,MAAM,KACtE,QAAQ,MAAM,GAAG,MAAO,KACvB,KAAM,GAAM,EAAQ,MACpB,AAAI,MAAO,IAAQ,UAClB,EAAgB,MAAM,GAEvB,EAAgB,QAEjB,QAAQ,MAAM,GAAG,QAAS,GAAS,EAAgB,QAAQ,IAC3D,QAAQ,MAAM,GAAG,QAAS,IAAM,EAAgB,SAxBjD,EAAA,cAAA,gJChCA,WAAqC,GACpC,KAAM,GAAuB,A3BV9B,G2BU8B,EAAA,MAAK,A3BVnC,G2BUmC,EAAA,UAAU,KAAK,SAAS,SAAS,IAAI,QAAQ,WAAY,IAAI,OAAO,EAAG,KAEzG,IACC,SAAG,cAAc,EAAsB,IACnC,GACH,QAAQ,IAAI,mCAAmC,KAEzC,QACC,GACR,AAAI,GACH,QAAQ,MAAM,4CAA4C,KAE3D,QAbF,EAAA,qBAAA,mMCCA,GAAiB,GAAjB,AAAA,UAAiB,GAEH,EAAA,WAAa,GAAI,KAEjB,EAAA,UAAY,aACZ,EAAA,gBAAkB,mBAE/B,WAAuC,GACtC,MAAO,GAAK,EAAA,kBAAoB,GADjB,EAAA,uBAAsB,IAPtB,EAAA,EAAA,OAAA,GAAA,MAAK,KAyDT,EAAA,sBAAwB,EAAuC,wBA2D5E,WAAgC,EAAc,EAAkB,EAAe,GAC9E,AAAK,EAAe,EAAM,aAAe,EACvC,EAAe,EAAM,iBAAiB,KAAK,CAAE,KAAI,QAAO,aAExD,GAAe,EAAM,iBAAmB,CAAC,CAAE,KAAI,QAAO,aACtD,EAAe,EAAM,WAAa,GAOrC,WAAmC,GAElC,GAAI,EAAM,WAAW,IAAI,GACxB,MAAO,GAAM,WAAW,IAAI,GAG7B,KAAM,GAAU,SAAU,EAAkB,EAAa,GACxD,GAAI,UAAU,SAAW,EACxB,KAAM,IAAI,OAAM,oEAEjB,EAAuB,EAAI,EAAQ,EAAO,KAG3C,SAAG,SAAW,IAAM,EAEpB,EAAM,WAAW,IAAI,EAAW,GACzB,EAhBR,EAAA,gBAAA,EAmBA,WAAyD,GACxD,MAA6B,GAD9B,EAAA,uBAAA,EAOA,WAA4B,GAE3B,MAAO,UAAU,EAAkB,EAAa,GAC/C,GAAI,UAAU,SAAW,EACxB,KAAM,IAAI,OAAM,gEAEjB,EAAuB,EAAmB,EAAQ,EAAO,KAN3D,EAAA,SAAA,m6BC/Ia,EAAA,aAAe,A7BrB5B,G6BqB4B,EAAA,iBAA8B,eAwO1D,WAA0C,GACzC,MAAO,GAAQ,SAAW,GAD3B,EAAA,0BAAA,EAqCA,GAAY,GAAZ,AAAA,UAAY,GAKX,EAAA,EAAA,QAAA,GAAA,UAKA,EAAA,EAAA,KAAA,GAAA,OAKA,EAAA,EAAA,UAAA,GAAA,YASA,EAAA,EAAA,aAAA,IAAA,iBAxBW,EAAA,EAAA,UAAA,GAAA,SAAQ,KAgEpB,GAAkB,GAAlB,AAAA,UAAkB,GAKjB,EAAA,EAAA,cAAA,GAAA,gBAKA,EAAA,EAAA,uBAAA,GAAA,yBAKA,EAAA,EAAA,eAAA,IAAA,iBAKA,EAAA,EAAA,eAAA,GAAA,iBAKA,EAAA,EAAA,kBAAA,MAAA,oBAKA,EAAA,EAAA,SAAA,MAAA,WAKA,EAAA,EAAA,MAAA,MAAA,QAKA,EAAA,EAAA,gBAAA,MAAA,oBAxCiB,EAAA,EAAA,gCAAA,GAAA,+BAA8B,KA6EhD,WAAuC,GACtC,MAAO,CAAC,CAAE,GAAS,aAAY,GADhC,EAAA,uBAAA,EAQA,WAA4C,GAC3C,MAAO,CAAC,CAAE,GAAS,aAAY,GADhC,EAAA,4BAAA,EAWA,WAAgD,GAC/C,MAAO,CAAC,CAAE,GAAS,aAAY,GADhC,EAAA,gCAAA,EAQA,WAA4C,GAC3C,MAAO,CAAC,CAAE,GAAS,aAAY,IADhC,EAAA,4BAAA,EAIA,GAAY,GAAZ,AAAA,UAAY,GACX,EAAA,WAAA,cACA,EAAA,aAAA,gBACA,EAAA,kBAAA,qBACA,EAAA,iBAAA,oBACA,EAAA,uBAAA,0BACA,EAAA,aAAA,gBACA,EAAA,gBAAA,mBACA,EAAA,cAAA,gBACA,EAAA,YAAA,cACA,EAAA,QAAA,YAVW,EAAA,EAAA,6BAAA,GAAA,4BAA2B,K7B9cvC,e6B2d6C,OAE5C,YAAY,EAAiC,GAC5C,MAAM,GADsC,KAAA,KAAA,GAF9C,EAAA,wBAAA,EAOA,WAA8C,EAAuB,GACpE,KAAM,GAAgB,GAAI,GAAwB,EAAM,WAAY,GACpE,SAA8B,EAAe,GAEtC,EAJR,EAAA,8BAAA,EAOA,WAA8C,GAC7C,MAAK,IACG,EAA8B,A7B3evC,G6B2euC,EAAA,UAAS,EAAgB,MAAkB,EAA4B,SAF9G,EAAA,8BAAA,EAQA,WAA8C,EAAc,GAC3D,SAAM,KAAO,EAAO,GAAG,sBAA2B,kBAE3C,EAHR,EAAA,8BAAA,EAMA,WAA8C,GAG7C,GAAI,CAAC,EACJ,MAAO,GAA4B,QAIpC,GAAI,YAAiB,GACpB,MAAO,GAAM,KAKd,KAAM,GAAQ,6BAA6B,KAAK,EAAM,MACtD,GAAI,CAAC,EACJ,MAAO,GAA4B,QAGpC,OAAQ,EAAM,QACR,GAA4B,WAAY,MAAO,GAA4B,eAC3E,GAA4B,iBAAkB,MAAO,GAA4B,qBACjF,GAA4B,kBAAmB,MAAO,GAA4B,sBAClF,GAA4B,aAAc,MAAO,GAA4B,iBAC7E,GAA4B,uBAAwB,MAAO,GAA4B,2BACvF,GAA4B,aAAc,MAAO,GAA4B,iBAC7E,GAA4B,gBAAiB,MAAO,GAA4B,oBAChF,GAA4B,cAAe,MAAO,GAA4B,kBAC9E,GAA4B,YAAa,MAAO,GAA4B,YAGlF,MAAO,GAA4B,QA/BpC,EAAA,8BAAA,EAkCA,WAAsC,GAGrC,GAAI,YAAiB,GACpB,MAAO,GAAM,oBAId,OAAQ,EAA8B,QAChC,GAA4B,aAChC,MAAA,OACI,GAA4B,iBAChC,MAAA,OACI,GAA4B,kBAChC,MAAA,QACI,GAA4B,gBAChC,MAAA,OACI,GAA4B,cAChC,MAAA,OACI,GAA4B,WAChC,MAAA,OACI,GAA4B,uBAChC,MAAA,OACI,GAA4B,aAChC,MAAA,WAEA,MAAA,KA1BH,EAAA,sBAAA,EA8CA,GAAkB,GAAlB,AAAA,UAAkB,GACjB,EAAA,EAAA,OAAA,GAAA,SACA,EAAA,EAAA,OAAA,GAAA,SACA,EAAA,EAAA,KAAA,GAAA,OACA,EAAA,EAAA,KAAA,GAAA,SAJiB,EAAA,EAAA,eAAA,GAAA,cAAa,K7BvkB/B,Q6BklBC,YAA4B,EAA+B,EAA0C,GAAzE,KAAA,SAAA,EAA+B,KAAA,UAAA,EAA0C,KAAA,OAAA,EAIrG,YAAY,GACX,MAAO,MAAK,YAAc,GAT5B,EAAA,mBAAA,EAgBA,GAAkB,GAAlB,AAAA,UAAkB,GACjB,EAAA,EAAA,QAAA,GAAA,UACA,EAAA,EAAA,MAAA,GAAA,QACA,EAAA,EAAA,QAAA,GAAA,YAHiB,EAAA,EAAA,gBAAA,GAAA,eAAc,K7B9lBhC,Q6BkoBC,YAAY,EAAkD,GAAA,KAAA,iBAAA,EAJ7C,KAAA,MAAyD,OACzD,KAAA,QAA2D,OAC3D,KAAA,QAA2D,OAG3E,KAAK,QAAU,EAEf,SAAW,KAAU,GACpB,OAAQ,EAAO,UACd,GACC,AAAK,KAAK,OACT,MAAK,MAAQ,EAAA,kBAAkB,QAAqB,IAAM,KAAK,mBAEhE,KAAK,MAAM,IAAI,EAAO,SAAU,GAChC,UACD,GACC,AAAK,KAAK,SACT,MAAK,QAAU,EAAA,kBAAkB,QAAqB,IAAM,KAAK,mBAElE,KAAK,QAAQ,IAAI,EAAO,SAAU,GAClC,UACD,GACC,AAAK,KAAK,SACT,MAAK,QAAU,EAAA,kBAAkB,QAAqB,IAAM,KAAK,mBAElE,KAAK,QAAQ,IAAI,EAAO,SAAU,GAClC,OAWJ,SAAS,KAAkB,GAC1B,MAAO,MAAK,WAAW,EAAU,CAAE,gBAAiB,IAAS,GAAG,GAOjE,QAAQ,KAAkB,GACzB,MAAO,MAAK,WAAW,EAAU,CAAE,gBAAiB,IAAQ,GAAG,GAGxD,WAAW,EAAe,KAA0C,mBAC3E,GAAI,CAAC,EACJ,MAAO,GAGR,KAAM,GAAiB,EAAM,OAAS,EAyBtC,MAtBI,KAAC,GAAkB,EAAM,SAAQ,KAChC,KAAA,KAAK,SAAK,MAAA,IAAA,OAAA,OAAA,EAAE,IAAI,KAIhB,EAAQ,iBAAmB,IAAA,KAAK,SAAK,MAAA,IAAA,OAAA,OAAA,EAAE,aAAa,MAMrD,EAAC,GAAkB,EAAM,SAAQ,KAChC,KAAA,KAAK,WAAO,MAAA,IAAA,OAAA,OAAA,EAAE,IAAI,KAIlB,EAAQ,iBAAmB,IAAA,KAAK,WAAO,MAAA,IAAA,OAAA,OAAA,EAAE,aAAa,MAMvD,EAAC,GAAkB,EAAM,SAAQ,KAChC,KAAA,KAAK,WAAO,MAAA,IAAA,OAAA,OAAA,EAAE,WAAW,KAIzB,EAAQ,iBAAmB,IAAA,KAAK,WAAO,MAAA,IAAA,OAAA,OAAA,EAAE,aAAa,MAc5D,WACC,MAAO,MAAK,UAAS,GAMtB,WACC,MAAO,CAAC,CAAC,KAAK,MASf,aACC,MAAO,MAAK,UAAS,GAMtB,aACC,MAAO,CAAC,CAAC,KAAK,QASf,aACC,MAAO,MAAK,UAAS,GAMtB,aACC,MAAO,CAAC,CAAC,KAAK,QAGP,UAAU,GACjB,KAAM,GAAyB,GAEzB,EAAgB,IAAI,EAA4B,KAAK,MAAQ,IAAI,EAA8B,KAAK,QAAU,KAAK,QACzH,GAAI,EACH,SAAW,CAAC,CAAE,IAAW,GACxB,EAAQ,KAAK,GAIf,MAAO,GASR,OAAO,GACN,MAAO,IAAI,GAAiB,KAAK,QAAQ,OAAO,GAAU,EAAS,IAAU,KAAK,mBA7KpF,EAAA,iBAAA,EAiLA,WAAyB,EAAc,EAAmB,GAKzD,MAJI,CAAC,GAAQ,CAAC,GAAa,IAAS,GAIhC,EAAU,OAAS,EAAK,OACpB,GAGJ,GAAU,OAAO,EAAU,OAAS,KAAO,EAAA,KAC9C,IAAa,EAAA,KAGV,EACI,A7BnzBT,G6BmzBS,EAAA,sBAAqB,EAAM,GAG5B,EAAK,QAAQ,KAAe,GAjBpC,EAAA,SAAA,E7BryBA,e6B4/BwC,OACvC,YAAY,EAAwB,EAAiD,GACpF,MAAM,GAD6B,KAAA,oBAAA,EAAiD,KAAA,QAAA,QAI9E,sBAAqB,GAC3B,MAAO,aAAe,QAAS,CAAC,A7BlgClC,G6BkgCkC,EAAA,mBAAmB,EAA2B,sBANhF,EAAA,mBAAA,EAUA,GAAkB,GAAlB,AAAA,UAAkB,GACjB,EAAA,EAAA,kBAAA,GAAA,oBACA,EAAA,EAAA,eAAA,GAAA,iBACA,EAAA,EAAA,wBAAA,GAAA,0BACA,EAAA,EAAA,oBAAA,GAAA,sBACA,EAAA,EAAA,mBAAA,GAAA,qBACA,EAAA,EAAA,kBAAA,GAAA,oBACA,EAAA,EAAA,uBAAA,GAAA,yBACA,EAAA,EAAA,eAAA,GAAA,iBACA,EAAA,EAAA,kBAAA,GAAA,oBACA,EAAA,EAAA,0BAAA,GAAA,4BACA,EAAA,EAAA,mBAAA,IAAA,qBACA,EAAA,EAAA,iBAAA,IAAA,qBAZiB,EAAA,EAAA,qBAAA,GAAA,oBAAmB,KAmBxB,EAAA,sBAAwB,CACpC,IAAK,MACL,YAAa,aACb,gBAAiB,gBACjB,iBAAkB,kBAGN,EAAA,qBAAuB,CACnC,IAAK,MACL,QAAS,SACT,yBAA0B,wBAGd,EAAA,0BAA4B,qBAC5B,EAAA,qBAAuB,gBAwBpC,GAAY,GAAZ,AAAA,UAAY,GACX,EAAA,EAAA,KAAA,GAAA,OACA,EAAA,EAAA,OAAA,GAAA,SACA,EAAA,EAAA,YAAA,GAAA,gBAHW,EAAA,EAAA,UAAA,GAAA,SAAQ,KASP,EAAA,cAAgB,GAI7B,WAAqB,GACpB,GAAI,QAAO,GAAK,MAAS,UAAY,MAAO,GAAK,OAAU,UAI3D,MAAO,GAAK,MAAM,SAAS,IAAM,EAAK,KAAK,SAAS,IALrD,EAAA,KAAA,EAQO,iBAAsC,EAAW,GACvD,GAAI,GAAY,kBAAkB,EAAA,IAAI,KAAK,CAAE,OAAQ,EAAK,UAI1D,MAAO,IAAI,SAAQ,IAClB,KAAM,GAAa,EAAY,2CAA2C,IACzE,AAAI,EAAE,SAAW,EAAK,QAAU,EAAE,OACjC,GAAW,UACX,SATJ,EAAA,uBAAA,EAkBa,EAAA,uBAAyB,KACzB,EAAA,4BAA8B,K7BvmC3C,c6BmnCQ,YAAW,GAKjB,MAJK,A7BpnCP,G6BonCO,EAAA,UAAS,IACb,GAAO,GAGJ,EAAO,EAAS,GACZ,A7BznCV,G6BynCU,EAAA,UAAS,EAAS,KAAQ,EAAK,QAAQ,IAG3C,EAAO,EAAS,GACZ,A7B7nCV,G6B6nCU,EAAA,UAAS,EAAU,KAAU,GAAO,EAAS,IAAI,QAAQ,IAG7D,EAAO,EAAS,GACZ,A7BjoCV,G6BioCU,EAAA,UAAS,EAAU,KAAU,GAAO,EAAS,IAAI,QAAQ,IAG7D,EAAO,EAAS,GACZ,A7BroCV,G6BqoCU,EAAA,UAAS,EAAU,KAAU,GAAO,EAAS,IAAI,QAAQ,IAG1D,A7BxoCT,G6BwoCS,EAAA,UAAS,EAAU,KAAU,GAAO,EAAS,IAAI,QAAQ,KA5BlE,EAAA,SAAA,EAEiB,EAAA,GAAK,KACL,EAAA,GAAK,EAAS,GAAK,EAAS,GAC5B,EAAA,GAAK,EAAS,GAAK,EAAS,GAC5B,EAAA,GAAK,EAAS,GAAK,EAAS,GAkC7C,GAAkB,IAAlB,AAAA,UAAkB,GACjB,EAAA,EAAA,KAAA,GAAA,OACA,EAAA,EAAA,MAAA,GAAA,UAFiB,GAAA,EAAA,MAAA,GAAA,KAAI,KAKtB,YAAkC,GACjC,MAAO,CACN,YAAa,IAAI,EAAiB,IAAM,EAAS,GAAK,GAAK,EAAS,GACpE,YAAa,IAAI,EAAiB,IAAM,EAAS,GAAK,EAAI,IAAM,EAAS,IAH3E,EAAA,kBAAA,4MC5oCA,WAA0B,EAAuB,GAChD,KAAM,GAA+B,CACpC,gBAAiB,AAAC,IACjB,QAAQ,KAAK,A9BfhB,G8BegB,EAAA,UAAS,EAAiB,KAA8F,KAEtI,iBAAkB,CAAC,EAAI,KACtB,QAAQ,KAAK,A9BlBhB,G8BkBgB,EAAA,UAAS,EAAkB,KAA8D,EAAI,MAItG,EAAO,A9BtBd,G8BsBc,EAAA,WAAU,EAAa,EAAA,QAAS,EAAiB,EAAgB,QAC9E,MAAI,GAAK,MACR,EAAK,EAAE,QAAQ,GAAO,EAAO,2BAA2B,KAAK,GAAM,A9BxBrE,G8BwBqE,EAAA,UAAS,EAAkB,QAG3F,EAAK,eACR,EAAO,SAAS,EAAK,gBAAkB,EAAA,uBAAwB,0DAA0D,EAAA,8BAGnH,EAGR,WAAsB,GACrB,KAAM,GAAQ,EAAK,UAAU,GAAK,CAAC,KAAK,KAAK,IAE7C,GAAI,EAAQ,GACX,MAAO,CAAC,GAAG,EAAK,MAAM,EAAG,GAAQ,GAAG,EAAK,MAAM,EAAQ,IAQzD,WAAqC,GACpC,GAAI,CAAC,IAAK,GAAQ,EAGlB,AAAI,QAAQ,IAAI,YACf,GAAO,EAAa,IAAS,IAI9B,KAAM,GAAiB,CAAC,EAAkB,QAAQ,KAClD,MAAO,GAAiB,EAAM,GAV/B,EAAA,qBAAA,EAgBA,WAAoC,GACnC,KAAM,CAAC,CAAE,IAAK,GAAQ,EAEtB,MAAO,GAAiB,EAAM,IAH/B,EAAA,oBAAA,EAMA,WAAuB,KAAmB,GACzC,KAAM,GAAuB,EAAK,QAAQ,MAC1C,MAAI,KAAyB,GAC5B,EAAK,KAAK,GAAG,GAKb,EAAK,OAAO,EAAsB,EAAG,GAAG,GAGlC,EAXR,EAAA,OAAA,EAcA,WAAkC,GACjC,MAAO,GAAI,aAAkB,IAD9B,EAAA,kBAAA,wHCtEA,GAAI,GAGJ,GAAI,MAAO,GAAA,QAAQ,QAAW,aAC7B,KAAM,GAAmD,EAAA,QAAQ,OAAO,QAAQ,gBAChF,GAAI,EACH,EAAU,EAAc,YAExB,MAAM,IAAI,OAAM,iFAKT,MAAO,IAAO,KAAA,OAAP,EAAS,mBAAqB,YAG7C,KAAM,GAAW,A/B5BlB,G+B4BkB,EAAA,SAAQ,EAAA,WAAW,UAAU,GAAI,IAElD,EAAU,EAAQ,iBAAiB,A/B9BpC,G+B8BoC,EAAA,UAAS,EAAU,gBAAgB,QACtE,KAAM,GAAM,EAAQ,iBAAiB,A/B/BtC,G+B+BsC,EAAA,UAAS,EAAU,gBAAgB,QAGxE,AAAI,EAAA,IAAI,YACP,OAAO,OAAO,EAAS,CACtB,UAAW,GAAG,EAAQ,gBACtB,SAAU,GAAG,EAAQ,eACrB,eAAgB,GAAG,EAAQ,uBAI7B,OAAO,OAAO,EAAS,CACtB,QAAS,EAAI,cAQd,GAAU,GAGN,OAAO,KAAK,GAAS,SAAW,GACnC,OAAO,OAAO,EAAS,CACtB,QAAS,aACT,UAAW,EAAA,MAAQ,qBAAuB,iBAC1C,SAAU,EAAA,MAAQ,qBAAuB,iBACzC,gBAAiB,WACjB,eAAgB,cAChB,YAAa,WACb,eAAgB,iDAChB,YAAa,MACb,WAAY,4DACZ,4BAA6B,CAC5B,oCACA,oCACA,2BACA,2BACA,sBACA,kCAMJ,EAAA,QAAe,gLCxDf,WAA+B,GAC9B,MAAO,CAAC,CAAC,EAAK,mBACV,CAAC,CAAC,EAAK,oBACP,CAAC,CAAC,EAAK,sBACP,CAAC,CAAC,EAAK,wBACP,CAAC,CAAC,EAAK,qBACP,CAAC,CAAC,EAAK,UAOL,iBAAoB,GAC1B,GAAI,GAEJ,IACC,EAAO,AhCtCT,GgCsCS,EAAA,qBAAoB,SACnB,GACR,QAAQ,MAAM,EAAI,SAClB,OAID,GAAI,EAAK,MACR,KAAM,GAAa,GAAG,EAAA,QAAQ,kBAAkB,EAAA,UAAY,OAAS,KACrE,QAAQ,IAAI,AhC/Cd,GgC+Cc,EAAA,kBAAiB,EAAA,QAAQ,SAAU,EAAY,EAAA,QAAQ,QAAS,EAAA,kBAIpE,EAAK,QACb,QAAQ,IAAI,AhCpDd,GgCoDc,EAAA,qBAAoB,EAAA,QAAQ,QAAS,EAAA,QAAQ,iBAIjD,EAAsB,IAE9B,KAAM,AADM,MAAM,IAAI,SAAkB,CAAC,EAAG,IAAM,EAAQ,CAAC,+BAAgC,EAAG,KACpF,KAAK,GAEf,eAIQ,EAAK,eACb,KAAM,GAAS,EAAK,EAAE,GAChB,EAAS,EAAK,EAAE,GAGtB,GACC,CAAC,GAAU,CAAC,GAAU,IAAW,GACjC,CAAC,AhCvEJ,GgCuEI,EAAA,YAAW,IAAW,CAAC,AhCvE3B,GgCuE2B,EAAA,YAAW,IACnC,CAAC,AhCxEJ,GgCwEI,EAAA,YAAW,IAAW,CAAC,AhCxE3B,GgCwE2B,EAAA,UAAS,GAAQ,UACzC,CAAC,AhCzEJ,GgCyEI,EAAA,YAAW,IAAW,CAAC,AhCzE3B,GgCyE2B,EAAA,UAAS,GAAQ,SAEzC,KAAM,IAAI,OAAM,8CAGjB,IAGC,GAAI,GAAqB,EACrB,EAAc,GAClB,AAAM,EAAK,eACV,GAAa,AhCpFjB,GgCoFiB,EAAA,UAAS,GAAQ,KACxB,EAAa,KAClB,ChCtFL,GgCsFK,EAAA,WAAU,EAAQ,EAAa,KAC/B,EAAc,KAKhB,KAAM,GAAO,AhC5FhB,GgC4FgB,EAAA,cAAa,GAC1B,AAAI,EAAA,UAOH,ChCpGJ,GgCoGI,EAAA,cAAa,EAAQ,GACrB,AhCrGJ,GgCqGI,EAAA,eAAc,EAAQ,EAAM,CAAE,KAAM,QAEpC,AhCvGJ,GgCuGI,EAAA,eAAc,EAAQ,GAInB,GACH,AhC5GJ,GgC4GI,EAAA,WAAU,EAAQ,SAEX,GACR,QAAM,QAAU,6BAA6B,EAAM,UAC7C,QAMP,KAAM,GAAG,OAAA,OAAA,OAAA,OAAA,GACL,QAAQ,KAAG,CACd,2BAA8B,MAG/B,MAAO,GAAI,qBAEX,KAAM,GAA+D,GAE/D,EAAU,EAAK,SAAW,EAAK,OACrC,AAAI,GACH,GAAI,wBAA6B,IAEjC,EAAiB,KAAK,KAAM,KAC3B,EAAM,OAAQ,GAAG,OAAQ,AAAC,GAAiB,QAAQ,IAAI,EAAK,SAAS,QAAQ,SAC7E,EAAM,OAAQ,GAAG,OAAQ,AAAC,GAAiB,QAAQ,IAAI,EAAK,SAAS,QAAQ,SAE7E,KAAM,IAAI,SAAc,GAAW,EAAM,KAAK,OAAQ,IAAM,SAI9D,KAAM,GAAkB,EAAK,EAAE,KAAK,GAAK,IAAM,KAC/C,AAAI,GAEH,GAAK,EAAI,EAAK,EAAE,OAAO,GAAK,IAAM,KAClC,EAAO,EAAK,OAAO,GAAK,IAAM,MAG/B,GAAI,GACJ,GAAI,AhCnJN,GgCmJM,EAAA,sBAMH,GAAI,GACH,EAAgB,AhC1JpB,GgC0JoB,EAAA,oBAGhB,IACC,AAAA,AhC9JL,GgC8JK,EAAA,eAAc,EAAe,CAAC,CAAC,GAG/B,AhCjKL,GgCiKK,EAAA,QAAO,EAAM,GAGb,AhCpKL,GgCoKK,EAAA,QAAO,EAAM,UACb,AhCrKL,GgCqKK,EAAA,QAAO,EAAM,iCACb,EAAK,KAAO,GAEZ,QAAQ,IAAI,2BAA2B,WAC/B,GACR,QAAQ,IAAI,4CAA4C,EAAE,cAC1D,EAAgB,YAMjB,GAAiB,KAAK,GAAK,AhCjL/B,GgCiL+B,EAAA,mBAAkB,KAAM,KAAK,IACvD,AAAI,GACH,CAAI,EAAA,UACH,QAAQ,IAAI,aAAa,EAAA,QAAQ,oFAAoF,EAAA,QAAQ,wBAE7H,QAAQ,IAAI,aAAa,EAAA,QAAQ,qEAAqE,EAAA,QAAQ,4BAWnH,GAAI,GAYJ,GAXI,EAAK,MACR,GAAqB,AhCnMxB,GgCmMwB,EAAA,sBAAqB,GACtC,GACH,AhCrMJ,GgCqMI,EAAA,QAAO,EAAM,uBAAwB,IAQnC,EAAK,iBACR,KAAM,GAAW,KAAM,AhC9M1B,GgC8M0B,EAAA,cAAa,AhC9MvC,GgC8MuC,EAAA,cAAc,GAAI,KAChD,EAAe,KAAM,AhC/M9B,GgC+M8B,EAAA,cAAa,EAAW,EAAG,GAAI,KACpD,EAAc,KAAM,AhChN7B,GgCgN6B,EAAA,cAAa,EAAe,EAAG,GAAI,KAG7D,GAAI,EAAW,EAAe,GAAgB,EAC7C,KAAM,IAAI,OAAM,oGAGjB,KAAM,GAAiB,AhCvN1B,GgCuN0B,EAAA,MAAK,AhCvN/B,GgCuN+B,EAAA,WAAW,QAAU,KAAK,SAAS,SAAS,IAAI,MAAM,KAElF,AAAA,AhCzNH,GgCyNG,EAAA,QAAO,EAAM,iBAAiB,KAC9B,AhC1NH,GgC0NG,EAAA,QAAO,EAAM,2BAA2B,KACxC,AhC3NH,GgC2NG,EAAA,QAAO,EAAM,4BAA4B,KACzC,AhC5NH,GgC4NG,EAAA,QAAO,EAAM,wBAAyB,GACtC,AhC7NH,GgC6NG,EAAA,QAAO,EAAM,oBAEb,AhC/NH,GgC+NG,EAAA,eAAc,EAAgB,EAAK,MAAM,IAAI,KAAK,MAElD,EAAiB,KAAK,KAAM,KhCjO/B,qBgCoOkB,OAAM,EAAc,EAAwB,GACxD,KAAM,GAAW,KAAA,IAAA,SAAA,CAAA,EAAA,KAAA,EAAA,CAAa,uBAAqB,EAAA,KAEnD,GAAI,GACJ,IACC,EAAU,KAAM,GAAS,eAAe,SAChC,GACR,QAAQ,MAAM,kCAAkC,eAAkB,EAAK,SAGxE,MAAO,MACA,QACL,GAAI,EAAC,GAGL,GAAI,GAAS,GACT,EAAU,KAAM,GAAQ,OAC5B,AAAK,QAAQ,IAAI,YAKhB,GAAU,EAAS,qBAAqB,EAAS,cACjD,EAAS,QAGV,KAAM,GAAS,aAAa,EAAS,GAAG,KAAkB,eAAkB,SAMhF,IAEC,KAAM,IAAqB,GAAS,MAAM,OAAQ,EAAgB,CAAE,KAAM,IACpE,EAAwB,GAAS,MAAM,UAAW,EAAgB,CAAE,KAAM,EAAa,MAAO,MAC9F,EAAyB,GAAS,MAAM,WAAY,EAAgB,CACzE,KAAM,EACN,MAAO,IACP,OAAQ,SAAU,GACjB,MAAO,GAAQ,OAAO,GAChB,EAAO,qBAGR,EAAO,OAAS,OACZ,EAAO,IAAI,QAAQ,4BAA8B,EAEjD,GALA,IAON,MAIC,EAAO,KAAM,IACb,EAAU,KAAM,GAChB,EAAW,KAAM,GAIvB,KAAM,AhC/RX,GgC+RW,EAAA,aAAY,GAGlB,KAAM,GAAK,OACX,KAAM,GAAS,OACf,KAAM,GAAQ,OAGd,AhCvSL,GgCuSK,EAAA,eAAc,EAAgB,UAEtB,IACR,QAAQ,MAAM,+DAKjB,KAAM,GAAU,EAAK,YACrB,GAAI,AhChTN,GgCgTM,EAAA,UAAS,IACZ,KAAM,GAAQ,4BAA4B,KAAK,GAC/C,AAAI,GAAS,CAAC,EAAK,eAClB,AhCnTJ,GgCmTI,EAAA,QAAO,EAAM,gBAAgB,EAAM,MAIrC,KAAM,GAAwB,CAC7B,SAAU,GACV,OAGD,AAAK,GACJ,GAAQ,MAAW,UAGhB,EAAA,SACH,AhCjUH,GgCiUG,EAAA,QAAO,EAAM,gBAGd,KAAM,GAAQ,AhCpUhB,GgCoUgB,EAAA,OAAM,QAAQ,SAAU,EAAK,MAAM,GAAI,GAErD,MAAI,GAAK,MAAQ,EACT,GAAI,SAAc,IAGxB,EAAM,KAAK,OAAQ,IAAM,EAAQ,SAGjC,AhC7UJ,GgC6UI,EAAA,aAAY,GAAqB,KAAK,EAAS,KAC7C,KAAK,KAGP,AAAI,GACH,AhClVL,GgCkVK,EAAA,YAAW,KAKP,QAAQ,IAAI,EAAiB,IAAI,GAAY,EAAS,MArT/D,EAAA,KAAA,EAyTA,WAAwB,GACvB,WAAW,IAAM,QAAQ,KAAK,GAAO,GAGtC,EAAK,QAAQ,MACX,KAAK,IAAM,EAAe,IAC1B,KAAK,KAAM,IACX,QAAQ,MAAM,EAAI,SAAW,EAAI,OAAS,GAC1C,EAAe,ShCnWjB,KAAA","names":[],"file":"cli.js"}