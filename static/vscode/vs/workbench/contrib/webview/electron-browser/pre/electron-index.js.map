{"version":3,"sources":["out-vscode/vs/workbench/contrib/webview/electron-browser/pre/electron-index.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// @ts-check\n(function () {\n\t'use strict';\n\n\tconst { ipcRenderer, contextBridge } = require('electron');\n\n\t/**\n\t * @type {import('../../browser/pre/main').WebviewHost & {isInDevelopmentMode: boolean}}\n\t */\n\tconst host = {\n\t\tonElectron: true,\n\t\tuseParentPostMessage: true,\n\t\tpostMessage: (channel, data) => {\n\t\t\tipcRenderer.sendToHost(channel, data);\n\t\t},\n\t\tonMessage: (channel, handler) => {\n\t\t\tipcRenderer.on(channel, handler);\n\t\t},\n\t\tfocusIframeOnCreate: true,\n\t\tisInDevelopmentMode: false\n\t};\n\n\thost.onMessage('devtools-opened', () => {\n\t\thost.isInDevelopmentMode = true;\n\t});\n\n\tdocument.addEventListener('DOMContentLoaded', e => {\n\t\t// Forward messages from the embedded iframe\n\t\twindow.onmessage = (/** @type {MessageEvent} */ event) => {\n\t\t\tipcRenderer.sendToHost(event.data.command, event.data.data);\n\t\t};\n\t});\n\n\tcontextBridge.exposeInMainWorld('vscodeHost', host);\n}());\n"],"mappings":"AAKA,AAAC,YACA,aAEA,KAAM,CAAE,cAAa,iBAAkB,QAAQ,YAKzC,EAAO,CACZ,WAAY,GACZ,qBAAsB,GACtB,YAAa,CAAC,EAAS,KACtB,EAAY,WAAW,EAAS,IAEjC,UAAW,CAAC,EAAS,KACpB,EAAY,GAAG,EAAS,IAEzB,oBAAqB,GACrB,oBAAqB,IAGtB,EAAK,UAAU,kBAAmB,KACjC,EAAK,oBAAsB,KAG5B,SAAS,iBAAiB,mBAAoB,IAE7C,OAAO,UAAY,AAA6B,IAC/C,EAAY,WAAW,EAAM,KAAK,QAAS,EAAM,KAAK,SAIxD,EAAc,kBAAkB,aAAc","names":[],"file":"electron-index.js"}